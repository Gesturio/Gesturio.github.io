"use strict";var THREE={REVISION:"67"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[t[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[r]+"CancelAnimationFrame"]||self[t[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),n=self.setTimeout(function(){t(r+i)},i);return e=r+i,n}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+6*(t-e)*(2/3-r):e};t=.5>=r?r*(1+t):r+t-r*t,r=2*r-t,this.r=i(r,t,e+1/3),this.g=i(r,t,e),this.b=i(r,t,e-1/3)}return this},setStyle:function(e){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)?(e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t,r=this.r,i=this.g,n=this.b,o=Math.max(r,i,n),a=Math.min(r,i,n),s=(a+o)/2;if(a===o)a=t=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case r:t=(i-n)/h+(n>i?6:0);break;case i:t=(n-r)/h+2;break;case n:t=(r-i)/h+4}t/=6}return e.h=t,e.s=a,e.l=s,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!1==e instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===e.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0];e=t[4];var i=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=r+o+t;return l>0?(r=.5/Math.sqrt(l+1),this._w=.25/r,this._x=(h-a)*r,this._y=(i-s)*r,this._z=(n-e)*r):r>o&&r>t?(r=2*Math.sqrt(1+r-o-t),this._w=(h-a)/r,this._x=.25*r,this._y=(e+n)/r,this._z=(i+s)/r):o>t?(r=2*Math.sqrt(1+o-r-t),this._w=(i-s)/r,this._x=(e+n)/r,this._y=.25*r,this._z=(a+h)/r):(r=2*Math.sqrt(1+t-r-o),this._w=(n-e)/r,this._x=(i+s)/r,this._y=(a+h)/r,this._z=.25*r),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3),t=r.dot(i)+1,1e-6>t?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,n=this._z,o=this._w,a=o*e._w+r*e._x+i*e._y+n*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this._w=o*a+this._w*s,this._x=r*a+this._x*s,this._y=i*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback(),this)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return e=this.y-e.y,t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[3]*r+e[6]*i,this.y=e[1]*t+e[4]*r+e[7]*i,this.z=e[2]*t+e[5]*r+e[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i+e[12],this.y=e[1]*t+e[5]*r+e[9]*i+e[13],this.z=e[2]*t+e[6]*r+e[10]*i+e[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;var n=1/(e[3]*t+e[7]*r+e[11]*i+e[15]);return this.x=(e[0]*t+e[4]*r+e[8]*i+e[12])*n,this.y=(e[1]*t+e[5]*r+e[9]*i+e[13])*n,this.z=(e[2]*t+e[6]*r+e[10]*i+e[14])*n,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,o=e.y,a=e.z;e=e.w;var s=e*t+o*i-a*r,h=e*r+a*t-n*i,l=e*i+n*r-o*t,t=-n*t-o*r-a*i;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i,this.y=e[1]*t+e[5]*r+e[9]*i,this.z=e[2]*t+e[6]*r+e[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return e=this.z-e.z,t*t+r*r+e*e},setEulerFromRotationMatrix:function(e,t){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(e,t){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length();return e=this.set(e.elements[8],e.elements[9],e.elements[10]).length(),this.x=t,this.y=r,this.z=e,this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i+e[12]*n,this.y=e[1]*t+e[5]*r+e[9]*i+e[13]*n,this.z=e[2]*t+e[6]*r+e[10]*i+e[14]*n,this.w=e[3]*t+e[7]*r+e[11]*i+e[15]*n,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i;e=e.elements;var n=e[0];i=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];r=e[2],t=e[6];var l=e[10];return.01>Math.abs(i-a)&&.01>Math.abs(o-r)&&.01>Math.abs(h-t)?.1>Math.abs(i+a)&&.1>Math.abs(o+r)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,i=(i+a)/4,o=(o+r)/4,h=(h+t)/4,n>s&&n>l?.01>n?(t=0,i=r=.707106781):(t=Math.sqrt(n),r=i/t,i=o/t):s>l?.01>s?(t=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),t=i/r,i=h/r):.01>l?(r=t=.707106781,i=0):(i=Math.sqrt(l),t=o/i,r=h/i),this.set(t,r,i,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-r)*(o-r)+(a-i)*(a-i)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-r)/e,this.z=(a-i)/e,this.w=Math.acos((n+s+l-1)/2),this)},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t){var r=THREE.Math.clamp,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],i=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,i),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(a,i),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u,-1,1)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,i),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===t?(this._y=Math.asin(-r(c,-1,1)),.99999>Math.abs(c)?(this._x=Math.atan2(u,i),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(r(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,i))):"XZY"===t?(this._z=Math.asin(-r(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,i),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this.onChangeCallback(),this},setFromQuaternion:function(e,t,r){var i=THREE.Math.clamp,n=e.x*e.x,o=e.y*e.y,a=e.z*e.z,s=e.w*e.w;return t=t||this._order,"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-n-o+a),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w),-1,1)),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+n-o-a)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-n-o+a),
this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-n+o-a)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-n-o+a),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-n+o-a)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-n-o+a),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z),-1,1)),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+n-o-a)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-n+o-a),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+n-o-a),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w),-1,1))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-n+o-a),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+n-o-a),this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return i&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,r){return e=this.closestPointToPointParameter(e,t),r=r||new THREE.Vector3,this.delta(r).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){return e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var t=1,r=e.length;r>t;t++)this.addPoint(e[t])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,n=0,o=i.length;o>n;n++)e.copy(i[n]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,r,i,n,o,a,s,h){var l=this.elements=new Float32Array(9);l[0]=void 0!==e?e:1,l[3]=t||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=o||0,l[2]=a||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0;i>n;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-r*n*e+r*a*s+i*n*h-i*o*s},getInverse:function(e,t){var r=e.elements,i=this.elements;if(i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4],r=r[0]*i[0]+r[1]*i[3]+r[2]*i[6],0===r){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,r,i,n,o,a,s,h,l,c,u,p,f,E,d){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=p||0,m[7]=f||0,m[11]=E||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,h,l,c,u,p,f,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=p,m[7]=f,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements;return e=e.elements,t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements;t=t.elements;var i=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();return r[0]=t[0]*i,r[1]=t[1]*i,r[2]=t[2]*i,r[4]=t[4]*n,r[5]=t[5]*n,r[6]=t[6]*n,r[8]=t[8]*o,r[9]=t[9]*o,r[10]=t[10]*o,this}}(),makeRotationFromEuler:function(e){!1==e instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,r=e.x,i=e.y,n=e.z,o=Math.cos(r),r=Math.sin(r),a=Math.cos(i),i=Math.sin(i),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){e=o*s;var h=o*n,l=r*s,c=r*n;t[0]=a*s,t[4]=-a*n,t[8]=i,t[1]=h+l*i,t[5]=e-c*i,t[9]=-r*a,t[2]=c-e*i,t[6]=l+h*i,t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e+c*r,t[4]=l*r-h,t[8]=o*i,t[1]=o*n,t[5]=o*s,t[9]=-r,t[2]=h*r-l,t[6]=c+e*r,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e-c*r,t[4]=-o*n,t[8]=l+h*r,t[1]=h+l*r,t[5]=o*s,t[9]=c-e*r,t[2]=-o*i,t[6]=r,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,l=r*s,c=r*n,t[0]=a*s,t[4]=l*i-h,t[8]=e*i+c,t[1]=a*n,t[5]=c*i+e,t[9]=h*i-l,t[2]=-i,t[6]=r*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=c-e*n,t[8]=l*n+h,t[1]=n,t[5]=o*s,t[9]=-r*s,t[2]=-i*s,t[6]=h*n+l,t[10]=e-c*n):"XZY"===e.order&&(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=-n,t[8]=i*s,t[1]=e*n+c,t[5]=o*s,t[9]=h*n-l,t[2]=l*n-h,t[6]=r*s,t[10]=c*n+e);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=r+r,s=i+i,h=n+n;e=r*a;var l=r*s,r=r*h,c=i*s,i=i*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=r+s,t[1]=l+o,t[5]=1-(e+n),t[9]=i-a,t[2]=r-s,t[6]=i+a,t[10]=1-(e+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),e.crossVectors(o,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(o,r).normalize()),t.crossVectors(r,e),a[0]=e.x,a[4]=t.x,a[8]=r.x,a[1]=e.y,a[5]=t.y,a[9]=r.y,a[2]=e.z,a[6]=t.z,a[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],p=r[13],f=r[2],E=r[6],d=r[10],m=r[14],g=r[3],T=r[7],v=r[11],r=r[15],y=i[0],R=i[4],x=i[8],H=i[12],_=i[1],b=i[5],w=i[9],M=i[13],S=i[2],C=i[6],A=i[10],L=i[14],P=i[3],D=i[7],F=i[11],i=i[15];return n[0]=o*y+a*_+s*S+h*P,n[4]=o*R+a*b+s*C+h*D,n[8]=o*x+a*w+s*A+h*F,n[12]=o*H+a*M+s*L+h*i,n[1]=l*y+c*_+u*S+p*P,n[5]=l*R+c*b+u*C+p*D,n[9]=l*x+c*w+u*A+p*F,n[13]=l*H+c*M+u*L+p*i,n[2]=f*y+E*_+d*S+m*P,n[6]=f*R+E*b+d*C+m*D,n[10]=f*x+E*w+d*A+m*F,n[14]=f*H+E*M+d*L+m*i,n[3]=g*y+T*_+v*S+r*P,n[7]=g*R+T*b+v*C+r*D,n[11]=g*x+T*w+v*A+r*F,n[15]=g*H+T*M+v*L+r*i,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0;i>n;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix4(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],p=e[14];return e[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*p-r*s*p)+e[7]*(+t*s*p-t*h*u+n*o*u-i*o*p+i*h*l-n*s*l)+e[11]*(+t*h*c-t*a*p-n*o*c+r*o*p+n*a*l-r*h*l)+e[15]*(-i*a*l-t*s*c+t*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],p=i[2],f=i[6],E=i[10],d=i[14],m=i[3],g=i[7],T=i[11],i=i[15];if(r[0]=c*d*g-u*E*g+u*f*T-l*d*T-c*f*i+l*E*i,r[4]=s*E*g-a*d*g-s*f*T+o*d*T+a*f*i-o*E*i,r[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*i+o*c*i,r[12]=s*c*f-a*u*f-s*l*E+o*u*E+a*l*d-o*c*d,r[1]=u*E*m-c*d*m-u*p*T+h*d*T+c*p*i-h*E*i,r[5]=a*d*m-s*E*m+s*p*T-n*d*T-a*p*i+n*E*i,r[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*i-n*c*i,r[13]=a*u*p-s*c*p+s*h*E-n*u*E-a*h*d+n*c*d,r[2]=l*d*m-u*f*m+u*p*g-h*d*g-l*p*i+h*f*i,r[6]=s*f*m-o*d*m-s*p*g+n*d*g+o*p*i-n*f*i,r[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*i+n*l*i,r[14]=s*l*p-o*u*p-s*h*f+n*u*f+o*h*d-n*l*d,r[3]=c*f*m-l*E*m-c*p*g+h*E*g+l*p*T-h*f*T,r[7]=o*E*m-a*f*m+a*p*g-n*E*g-o*p*T+n*f*T,r[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,r[15]=o*c*p-a*l*p+a*h*f-n*c*f-o*h*E+n*l*E,r=n*r[0]+h*r[4]+p*r[8]+m*r[12],0==r){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},translate:function(e){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(e){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(e){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(e){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y;return e=e.z,t[0]*=r,t[4]*=i,t[8]*=e,t[1]*=r,t[5]*=i,t[9]*=e,t[2]*=r,t[6]*=i,t[10]*=e,t[3]*=r,t[7]*=i,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],t.elements.set(this.elements),r=1/a;var o=1/s,l=1/h;return t.elements[0]*=r,t.elements[1]*=r,t.elements[2]*=r,t.elements[4]*=o,t.elements[5]*=o,t.elements[6]*=o,t.elements[8]*=l,t.elements[9]*=l,t.elements[10]*=l,i.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,r,i,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,i){e=r*Math.tan(THREE.Math.degToRad(.5*e));var n=-e;return this.makeFrustum(n*t,e*t,n,e,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,h=r-i,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((r+i)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,r,i){var n=e.clone().add(t).multiplyScalar(.5),o=t.clone().sub(e).normalize(),a=.5*e.distanceTo(t),s=this.origin.clone().sub(n);e=-this.direction.dot(o),t=s.dot(this.direction);var h,l,c=-s.dot(o),u=s.lengthSq(),p=Math.abs(1-e*e);return p>=0?(s=e*c-t,h=e*t-c,l=a*p,s>=0?h>=-l?l>=h?(a=1/p,s*=a,h*=a,e=s*(s+e*h+2*t)+h*(e*s+h+2*c)+u):(h=a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u):(h=-a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u):-l>=h?(s=Math.max(0,-(-e*a+t)),h=s>0?-a:Math.min(Math.max(-a,-c),a),e=-s*s+h*(h+2*c)+u):l>=h?(s=0,h=Math.min(Math.max(-a,-c),a),e=h*(h+2*c)+u):(s=Math.max(0,-(e*a+t)),h=s>0?a:Math.min(Math.max(-a,-c),a),e=-s*s+h*(h+2*c)+u)):(h=e>0?-a:a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u),r&&r.copy(this.direction.clone().multiplyScalar(s).add(this.origin)),i&&i.copy(o.clone().multiplyScalar(h).add(n)),e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0==t?0==e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,e>=0?e:null)},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,n,o,a;i=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return i>=0?(r=(e.min.x-s.x)*i,i*=e.max.x-s.x):(r=(e.max.x-s.x)*i,i*=e.min.x-s.x),o>=0?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y),r>o||n>i?null:((n>r||r!==r)&&(r=n),(i>o||i!==i)&&(i=o),a>=0?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z),r>a||n>i?null:((n>r||r!==r)&&(r=n),(i>a||i!==i)&&(i=a),0>i?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){if(t.subVectors(o,n),r.subVectors(a,n),i.crossVectors(t,r),o=this.direction.dot(i),o>0){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return e.subVectors(this.origin,n),n=s*this.direction.dot(r.crossVectors(e,r)),0>n?null:(a=s*this.direction.dot(t.cross(e)),0>a||n+a>o?null:(n=-s*e.dot(i),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var n=0,o=0,a=t.length;a>o;o++)n=Math.max(n,i.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements;e=r[0];var i=r[1],n=r[2],o=r[3],a=r[4],s=r[5],h=r[6],l=r[7],c=r[8],u=r[9],p=r[10],f=r[11],E=r[12],d=r[13],m=r[14],r=r[15];return t[0].setComponents(o-e,l-a,f-c,r-E).normalize(),t[1].setComponents(o+e,l+a,f+c,r+E).normalize(),t[2].setComponents(o+i,l+s,f+u,r+d).normalize(),t[3].setComponents(o-i,l-s,f-u,r-d).normalize(),t[4].setComponents(o-n,l-h,f-p,r-m).normalize(),t[5].setComponents(o+n,l+h,f+p,r+m).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,r=e.center;e=-e.radius;for(var i=0;6>i;i++)if(t[i].distanceToPoint(r)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;6>n;n++){var o=i[n];e.x=0<o.normal.x?r.min.x:r.max.x,t.x=0<o.normal.x?r.max.x:r.min.x,e.y=0<o.normal.y?r.min.y:r.max.y,t.y=0<o.normal.y?r.max.y:r.min.y,e.z=0<o.normal.z?r.min.z:r.max.z,t.z=0<o.normal.z?r.max.z:r.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){return i=e.subVectors(n,i).cross(t.subVectors(r,i)).normalize(),this.setFromNormalAndCoplanarPoint(i,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);return e=this.distanceToPoint(e.end),0>t&&e>0||0>e&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!=o?(o=-(t.start.dot(this.normal)+this.constant)/o,0>o||o>1?void 0:i.copy(n).multiplyScalar(o).add(t.start)):0==this.distanceToPoint(t.start)?i.copy(t.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;
return function(i,n){var o=n||r.getNormalMatrix(i),o=e.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(t);return a.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=Array(36),i=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(2>=i&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,r[n]=t[19==n?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},smoothstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}},THREE.Spline=function(e){function t(e,t,r,i,n,o,a){return e=.5*(r-e),i=.5*(i-t),(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t}this.points=e;var r,i,n,o,a,s,h,l,c,u=[],p={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,p.x=t(s.x,h.x,l.x,c.x,n,o,a),p.y=t(s.y,h.y,l.y,c.y,n,o,a),p.z=t(s.z,h.z,l.z,c.z,n,o,a),p},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),r=this.points.length*e,o.copy(this.points[0]),e=1;r>e;e++)t=e/r,i=this.getPoint(t),a.copy(i),h+=a.distanceTo(o),o.copy(i),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(r=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*r/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),r=1;a-1>r;r++)i=n+1/a*r*(o-n),i=this.getPoint(i),s.push(h.copy(i).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,n){return n=n||new THREE.Vector3,n.subVectors(i,r),e.subVectors(t,r),n.cross(e),t=n.lengthSq(),t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),r.subVectors(i,n),i=e.dot(e),n=e.dot(t),o=e.dot(r);var h=t.dot(t);a=t.dot(r);var l=i*h-n*n;return s=s||new THREE.Vector3,0==l?s.set(-2,-1,-1):(l=1/l,h=(h*o-n*a)*l,i=(i*a-n*o)*l,s.set(1-h-i,i,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,n){return t=THREE.Triangle.barycoordFromPoint(t,r,i,n,e),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=[],i=t.length,n=0;i>n;n++)r[n]=t[n];for(n=0;i>n;n++)r[n].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.near=i||0,this.far=n||1/0};var t=new e.Sphere,r=new e.Ray;new e.Plane,new e.Vector3;var i=new e.Vector3,n=new e.Matrix4,o=function(e,t){return e.distance-t.distance},a=new e.Vector3,s=new e.Vector3,h=new e.Vector3,l=function(o,c,u){if(o instanceof e.Sprite){i.setFromMatrixPosition(o.matrixWorld);var p=c.ray.distanceToPoint(i);if(p>o.scale.x)return u;u.push({distance:p,point:o.position,face:null,object:o})}else if(o instanceof e.LOD)i.setFromMatrixPosition(o.matrixWorld),p=c.ray.origin.distanceTo(i),l(o.getObjectForDistance(p),c,u);else if(o instanceof e.Mesh){var f=o.geometry;if(null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),r.copy(c.ray).applyMatrix4(n),null!==f.boundingBox&&!1===r.isIntersectionBox(f.boundingBox))return u;if(f instanceof e.BufferGeometry){var E=o.material;if(void 0===E)return u;var d,m,g=f.attributes,T=c.precision;if(void 0!==g.index){var v=g.index.array,y=g.position.array,R=f.offsets;0===R.length&&(R=[{start:0,count:y.length,index:0}]);for(var x=0,H=R.length;H>x;++x)for(var g=R[x].start,_=R[x].index,f=g,b=g+R[x].count;b>f;f+=3){g=_+v[f],d=_+v[f+1],m=_+v[f+2],a.set(y[3*g],y[3*g+1],y[3*g+2]),s.set(y[3*d],y[3*d+1],y[3*d+2]),h.set(y[3*m],y[3*m+1],y[3*m+2]);var w=E.side===e.BackSide?r.intersectTriangle(h,s,a,!0):r.intersectTriangle(a,s,h,E.side!==e.DoubleSide);null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,indices:[g,d,m],face:null,faceIndex:null,object:o}))}}else for(y=g.position.array,f=0,b=g.position.array.length;b>f;f+=3)g=f,d=f+1,m=f+2,a.set(y[3*g],y[3*g+1],y[3*g+2]),s.set(y[3*d],y[3*d+1],y[3*d+2]),h.set(y[3*m],y[3*m+1],y[3*m+2]),w=E.side===e.BackSide?r.intersectTriangle(h,s,a,!0):r.intersectTriangle(a,s,h,E.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,indices:[g,d,m],face:null,faceIndex:null,object:o}))}else if(f instanceof e.Geometry)for(y=o.material instanceof e.MeshFaceMaterial,R=!0===y?o.material.materials:null,T=c.precision,v=f.vertices,x=0,H=f.faces.length;H>x;x++)if(_=f.faces[x],E=!0===y?R[_.materialIndex]:o.material,void 0!==E){if(g=v[_.a],d=v[_.b],m=v[_.c],!0===E.morphTargets){p=f.morphTargets,w=o.morphTargetInfluences,a.set(0,0,0),s.set(0,0,0),h.set(0,0,0);for(var b=0,M=p.length;M>b;b++){var S=w[b];if(0!==S){var C=p[b].vertices;a.x+=(C[_.a].x-g.x)*S,a.y+=(C[_.a].y-g.y)*S,a.z+=(C[_.a].z-g.z)*S,s.x+=(C[_.b].x-d.x)*S,s.y+=(C[_.b].y-d.y)*S,s.z+=(C[_.b].z-d.z)*S,h.x+=(C[_.c].x-m.x)*S,h.y+=(C[_.c].y-m.y)*S,h.z+=(C[_.c].z-m.z)*S}}a.add(g),s.add(d),h.add(m),g=a,d=s,m=h}w=E.side===e.BackSide?r.intersectTriangle(m,d,g,!0):r.intersectTriangle(g,d,m,E.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,face:_,faceIndex:x,object:o}))}}else if(o instanceof e.Line){if(T=c.linePrecision,E=T*T,f=o.geometry,null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),r.copy(c.ray).applyMatrix4(n),f instanceof e.Geometry)for(v=f.vertices,T=v.length,g=new e.Vector3,d=new e.Vector3,m=o.type===e.LineStrip?1:2,f=0;T-1>f;f+=m)r.distanceSqToSegment(v[f],v[f+1],d,g)>E||(p=r.origin.distanceTo(d),p<c.near||p>c.far||u.push({distance:p,point:g.clone().applyMatrix4(o.matrixWorld),face:null,faceIndex:null,object:o}))}},c=function(e,t,r){e=e.getDescendants();for(var i=0,n=e.length;n>i;i++)l(e[i],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return!0===t&&c(e,this,r),l(e,this,r),r.sort(o),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,n=e.length;n>i;i++)l(e[i],this,r),!0===t&&c(e[i],this,r);return r.sort(o),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3;var e=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){e.quaternion.setFromEuler(e.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){e.rotation.setFromQuaternion(e.quaternion,void 0,!1)})},scale:{enumerable:!0,value:new THREE.Vector3(1,1,1)}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.id===e||!0===t&&(n=n.getObjectById(e,t),void 0!==n))return n}},getObjectByName:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.name===e||!0===t&&(n=n.getObjectByName(e,t),void 0!==n))return n}},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;r>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var r=0;r<this.children.length;r++)e.add(this.children[r].clone());return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(h===v){var e=new THREE.RenderableVertex;return T.push(e),v++,h++,e}return T[h++]}function t(){if(c===R){var e=new THREE.RenderableFace;return y.push(e),R++,c++,e}return y[c++]}function r(){if(p===H){var e=new THREE.RenderableLine;return x.push(e),H++,p++,e}return x[p++]}function i(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function n(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?r=Math.max(r,n/(n-o)):0>o&&(i=Math.min(i,n/(n-o))),0>a?r=Math.max(r,a/(a-s)):0>s&&(i=Math.min(i,a/(a-s))),r>i?!1:(e.lerp(t,r),t.lerp(e,1-i),!0))}var o,a,s,h,l,c,u,p,f,E,d,m=[],g=0,T=[],v=0,y=[],R=0,x=[],H=0,_=[],b=0,w={objects:[],lights:[],elements:[]},M=new THREE.Vector3,S=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector4,P=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),D=new THREE.Box3,F=Array(3),U=new THREE.Matrix4,V=new THREE.Matrix4,z=new THREE.Matrix4,B=new THREE.Matrix3,O=new THREE.Frustum,N=new THREE.Vector4,k=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(V)},this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,r){return e.getInverse(r.projectionMatrix),V.multiplyMatrices(r.matrixWorld,e),t.applyProjection(V)}}(),this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var I=function(e){if(!1!==e.visible){if(e instanceof THREE.Light)w.lights.push(e);else if((e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)&&(!1===e.frustumCulled||!0===O.intersectsObject(e))){if(a===g){var t=new THREE.RenderableObject;m.push(t),g++,a++,o=t}else o=m[a++];o.id=e.id,o.object=e,null!==e.renderDepth?o.z=e.renderDepth:(A.setFromMatrixPosition(e.matrixWorld),A.applyProjection(V),o.z=A.z),w.objects.push(o)}for(var t=0,r=e.children.length;r>t;t++)I(e.children[t])}},G=new function(){var i=[],n=[],o=null,a=null,h=new THREE.Matrix3,c=function(e){var t=e.positionWorld,r=e.positionScreen;t.copy(e.position).applyMatrix4(d),r.copy(t).applyMatrix4(V),t=1/r.w,r.x*=t,r.y*=t,r.z*=t,e.visible=-1<=r.x&&1>=r.x&&-1<=r.y&&1>=r.y&&-1<=r.z&&1>=r.z},p=function(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible?!0:(F[0]=e.positionScreen,F[1]=t.positionScreen,F[2]=r.positionScreen,P.isIntersectionBox(D.setFromPoints(F)))},f=function(e,t,r){return 0>(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)};return{setObject:function(e){o=e,a=o.material,h.getNormalMatrix(o.matrixWorld),i.length=0,n.length=0},projectVertex:c,checkTriangleVisibility:p,checkBackfaceCulling:f,pushVertex:function(t,r,i){s=e(),s.position.set(t,r,i),c(s)},pushNormal:function(e,t,r){i.push(e,t,r)},pushUv:function(e,t){n.push(e,t)},pushLine:function(e,t){var i=T[e],n=T[t];u=r(),u.id=o.id,u.v1.copy(i),u.v2.copy(n),u.z=(i.positionScreen.z+n.positionScreen.z)/2,u.material=o.material,w.elements.push(u)},pushTriangle:function(e,r,s){var c=T[e],u=T[r],E=T[s];if(!1!==p(c,u,E)&&(a.side===THREE.DoubleSide||!0===f(c,u,E))){for(l=t(),l.id=o.id,l.v1.copy(c),l.v2.copy(u),l.v3.copy(E),l.z=(c.positionScreen.z+u.positionScreen.z+E.positionScreen.z)/3,c=0;3>c;c++)u=3*arguments[c],E=l.vertexNormalsModel[c],E.set(i[u],i[u+1],i[u+2]),E.applyMatrix3(h).normalize(),u=2*arguments[c],l.uvs[c].set(n[u],n[u+1]);l.vertexNormalsLength=3,l.material=o.material,w.elements.push(l)}}}};this.projectScene=function(o,s,m,g){var v,y,R,x,H,A,P,D;for(E=p=c=0,w.elements.length=0,!0===o.autoUpdate&&o.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),U.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),V.multiplyMatrices(s.projectionMatrix,U),O.setFromMatrix(V),a=0,w.objects.length=0,w.lights.length=0,I(o),!0===m&&w.objects.sort(i),o=0,m=w.objects.length;m>o;o++)if(v=w.objects[o].object,y=v.geometry,G.setObject(v),d=v.matrixWorld,h=0,v instanceof THREE.Mesh){if(y instanceof THREE.BufferGeometry){if(A=y.attributes,v=y.offsets,void 0!==A.position){for(P=A.position.array,y=0,x=P.length;x>y;y+=3)G.pushVertex(P[y],P[y+1],P[y+2]);if(void 0!==A.normal)for(D=A.normal.array,y=0,x=D.length;x>y;y+=3)G.pushNormal(D[y],D[y+1],D[y+2]);if(void 0!==A.uv)for(D=A.uv.array,y=0,x=D.length;x>y;y+=2)G.pushUv(D[y],D[y+1]);if(void 0!==A.index)if(A=A.index.array,0<v.length)for(o=0;o<v.length;o++)for(x=v[o],P=x.index,y=x.start,x=x.start+x.count;x>y;y+=3)G.pushTriangle(A[y]+P,A[y+1]+P,A[y+2]+P);else for(y=0,x=A.length;x>y;y+=3)G.pushTriangle(A[y],A[y+1],A[y+2]);else for(y=0,x=P.length/3;x>y;y+=3)G.pushTriangle(y,y+1,y+2)}}else if(y instanceof THREE.Geometry){R=y.vertices,x=y.faces,A=y.faceVertexUvs[0],B.getNormalMatrix(d),P=v.material instanceof THREE.MeshFaceMaterial,D=!0===P?v.material:null;for(var F=0,W=R.length;W>F;F++){var j=R[F];G.pushVertex(j.x,j.y,j.z)}for(F=0,W=x.length;W>F;F++){R=x[F];var X=!0===P?D.materials[R.materialIndex]:v.material;if(void 0!==X){var q=X.side,j=T[R.a],Y=T[R.b],K=T[R.c];if(!0===X.morphTargets){H=y.morphTargets;var Z=v.morphTargetInfluences,Q=j.position,J=Y.position,$=K.position;M.set(0,0,0),S.set(0,0,0),C.set(0,0,0);for(var ee=0,te=H.length;te>ee;ee++){var re=Z[ee];if(0!==re){var ie=H[ee].vertices;M.x+=(ie[R.a].x-Q.x)*re,M.y+=(ie[R.a].y-Q.y)*re,M.z+=(ie[R.a].z-Q.z)*re,S.x+=(ie[R.b].x-J.x)*re,S.y+=(ie[R.b].y-J.y)*re,S.z+=(ie[R.b].z-J.z)*re,C.x+=(ie[R.c].x-$.x)*re,C.y+=(ie[R.c].y-$.y)*re,C.z+=(ie[R.c].z-$.z)*re}}j.position.add(M),Y.position.add(S),K.position.add(C),G.projectVertex(j),G.projectVertex(Y),G.projectVertex(K)}if(!1!==G.checkTriangleVisibility(j,Y,K)){if(Z=G.checkBackfaceCulling(j,Y,K),q!==THREE.DoubleSide){if(q===THREE.FrontSide&&!1===Z)continue;if(q===THREE.BackSide&&!0===Z)continue}for(l=t(),l.id=v.id,l.v1.copy(j),l.v2.copy(Y),l.v3.copy(K),l.normalModel.copy(R.normal),!1!==Z||q!==THREE.BackSide&&q!==THREE.DoubleSide||l.normalModel.negate(),l.normalModel.applyMatrix3(B).normalize(),H=R.vertexNormals,Q=0,J=Math.min(H.length,3);J>Q;Q++)$=l.vertexNormalsModel[Q],$.copy(H[Q]),!1!==Z||q!==THREE.BackSide&&q!==THREE.DoubleSide||$.negate(),$.applyMatrix3(B).normalize();if(l.vertexNormalsLength=H.length,q=A[F],void 0!==q)for(H=0;3>H;H++)l.uvs[H].copy(q[H]);l.color=R.color,l.material=X,l.z=(j.positionScreen.z+Y.positionScreen.z+K.positionScreen.z)/3,w.elements.push(l)}}}}}else if(v instanceof THREE.Line){if(y instanceof THREE.BufferGeometry){if(A=y.attributes,void 0!==A.position){for(P=A.position.array,y=0,x=P.length;x>y;y+=3)G.pushVertex(P[y],P[y+1],P[y+2]);if(void 0!==A.index)for(A=A.index.array,y=0,x=A.length;x>y;y+=2)G.pushLine(A[y],A[y+1]);else for(y=0,x=P.length/3-1;x>y;y++)G.pushLine(y,y+1)}}else if(y instanceof THREE.Geometry&&(z.multiplyMatrices(V,d),R=v.geometry.vertices,0!==R.length))for(j=e(),j.positionScreen.copy(R[0]).applyMatrix4(z),y=v.type===THREE.LinePieces?2:1,F=1,W=R.length;W>F;F++)j=e(),j.positionScreen.copy(R[F]).applyMatrix4(z),(F+1)%y>0||(Y=T[h-2],N.copy(j.positionScreen),k.copy(Y.positionScreen),!0===n(N,k)&&(N.multiplyScalar(1/N.w),k.multiplyScalar(1/k.w),u=r(),u.id=v.id,u.v1.positionScreen.copy(N),u.v2.positionScreen.copy(k),u.z=Math.max(N.z,k.z),u.material=v.material,v.material.vertexColors===THREE.VertexColors&&(u.vertexColors[0].copy(v.geometry.colors[F]),u.vertexColors[1].copy(v.geometry.colors[F-1])),w.elements.push(u)))}else v instanceof THREE.Sprite&&(L.set(d.elements[12],d.elements[13],d.elements[14],1),L.applyMatrix4(V),y=1/L.w,L.z*=y,-1<=L.z&&1>=L.z&&(E===b?(x=new THREE.RenderableSprite,_.push(x),b++,E++,f=x):f=_[E++],f.id=v.id,f.x=L.x*y,f.y=L.y*y,f.z=L.z,f.object=v,f.rotation=v.rotation,f.scale.x=v.scale.x*Math.abs(f.x-(L.x+s.projectionMatrix.elements[0])/(L.w+s.projectionMatrix.elements[12])),f.scale.y=v.scale.y*Math.abs(f.y-(L.y+s.projectionMatrix.elements[5])/(L.w+s.projectionMatrix.elements[13])),f.material=v.material,w.elements.push(f)));return!0===g&&w.elements.sort(i),w}},THREE.Face3=function(e,t,r,i,n,o){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,n,o,a)},THREE.BufferAttribute=function(){},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(e){this.array.set(e)},setX:function(e,t){this.array[e*this.itemSize]=t},setY:function(e,t){this.array[e*this.itemSize+1]=t},setZ:function(e,t){this.array[e*this.itemSize+2]=t},setXY:function(e,t,r){e*=this.itemSize,this.array[e]=t,this.array[e+1]=r},setXYZ:function(e,t,r,i){e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i},setXYZW:function(e,t,r,i,n){e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n}},THREE.Int8Attribute=function(e,t){this.array=new Int8Array(e*t),this.itemSize=t},THREE.Int8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Uint8Attribute=function(e,t){this.array=new Uint8Array(e*t),this.itemSize=t},THREE.Uint8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Uint8ClampedAttribute=function(e,t){this.array=new Uint8ClampedArray(e*t),this.itemSize=t},THREE.Uint8ClampedAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Int16Attribute=function(e,t){this.array=new Int16Array(e*t),this.itemSize=t},THREE.Int16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Uint16Attribute=function(e,t){this.array=new Uint16Array(e*t),this.itemSize=t},THREE.Uint16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Int32Attribute=function(e,t){this.array=new Int32Array(e*t),this.itemSize=t},THREE.Int32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Uint32Attribute=function(e,t){this.array=new Uint32Array(e*t),this.itemSize=t},THREE.Uint32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Float32Attribute=function(e,t){this.array=new Float32Array(e*t),this.itemSize=t},THREE.Float32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.Float64Attribute=function(e,t){this.array=new Float64Array(e*t),this.itemSize=t},THREE.Float64Attribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=this.drawcalls=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,r){!1==t instanceof THREE.BufferAttribute?(console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:t,itemSize:r}):this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var r=3,i=e.length;i>r;r+=3){var n=e[r],o=e[r+1],a=e[r+2];n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),o<t.min.y?t.min.y=o:o>t.max.y&&(t.max.y=o),a<t.min.z?t.min.z=a:a>t.max.z&&(t.max.z=a)}}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;o>n;n+=3)t.set(r[n],r[n+1],r[n+2]),e.addPoint(t);e.center(i);for(var a=0,n=0,o=r.length;o>n;n+=3)t.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i;if(e=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var n,o,a,s,h,l,c=this.attributes.position.array,u=this.attributes.normal.array,p=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=0<this.offsets.length?this.offsets:[{start:0,count:g.length,index:0}];for(r=0,i=T.length;i>r;++r){t=T[r].start,n=T[r].count;var v=T[r].index;for(e=t,t+=n;t>e;e+=3)n=v+g[e],o=v+g[e+1],a=v+g[e+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],p.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],f.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],E.set(s,h,l),d.subVectors(E,f),m.subVectors(p,f),d.cross(m),u[3*n]+=d.x,u[3*n+1]+=d.y,u[3*n+2]+=d.z,u[3*o]+=d.x,u[3*o+1]+=d.y,u[3*o+2]+=d.z,u[3*a]+=d.x,u[3*a+1]+=d.y,u[3*a+2]+=d.z}}else for(e=0,t=c.length;t>e;e+=9)s=c[e],h=c[e+1],l=c[e+2],p.set(s,h,l),s=c[e+3],h=c[e+4],l=c[e+5],f.set(s,h,l),s=c[e+6],h=c[e+7],l=c[e+8],E.set(s,h,l),d.subVectors(E,f),m.subVectors(p,f),d.cross(m),u[e]=d.x,u[e+1]=d.y,u[e+2]=d.z,u[e+3]=d.x,u[e+4]=d.y,u[e+5]=d.z,u[e+6]=d.x,u[e+7]=d.y,u[e+8]=d.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function e(e,t,r){u=i[3*e],p=i[3*e+1],f=i[3*e+2],E=i[3*t],d=i[3*t+1],m=i[3*t+2],g=i[3*r],T=i[3*r+1],v=i[3*r+2],y=o[2*e],R=o[2*e+1],x=o[2*t],H=o[2*t+1],_=o[2*r],b=o[2*r+1],w=E-u,M=g-u,S=d-p,C=T-p,A=m-f,L=v-f,P=x-y,D=_-y,F=H-R,U=b-R,V=1/(P*U-D*F),I.set((U*w-F*M)*V,(U*S-F*C)*V,(U*A-F*L)*V),G.set((P*M-D*w)*V,(P*C-D*S)*V,(P*L-D*A)*V),h[e].add(I),h[t].add(I),h[r].add(I),l[e].add(G),l[t].add(G),l[r].add(G)}function t(e){
Q.x=n[3*e],Q.y=n[3*e+1],Q.z=n[3*e+2],J.copy(Q),q=h[e],K.copy(q),K.sub(Q.multiplyScalar(Q.dot(q))).normalize(),Z.crossVectors(J,q),Y=Z.dot(l[e]),X=0>Y?-1:1,s[4*e]=K.x,s[4*e+1]=K.y,s[4*e+2]=K.z,s[4*e+3]=X}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*a)});for(var s=this.attributes.tangent.array,h=[],l=[],c=0;a>c;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,p,f,E,d,m,g,T,v,y,R,x,H,_,b,w,M,S,C,A,L,P,D,F,U,V,z,B,O,N,k,I=new THREE.Vector3,G=new THREE.Vector3,W=this.offsets,c=0;for(B=W.length;B>c;++c){z=W[c].start,O=W[c].count;var j=W[c].index,a=z;for(z+=O;z>a;a+=3)O=j+r[a],N=j+r[a+1],k=j+r[a+2],e(O,N,k)}var X,q,Y,K=new THREE.Vector3,Z=new THREE.Vector3,Q=new THREE.Vector3,J=new THREE.Vector3,c=0;for(B=W.length;B>c;++c)for(z=W[c].start,O=W[c].count,j=W[c].index,a=z,z+=O;z>a;a+=3)O=j+r[a],N=j+r[a+1],k=j+r[a+2],t(O),t(N),t(k)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535),Date.now(),e=this.attributes.index.array;for(var r=this.attributes.position.array,i=e.length/3,n=new Uint16Array(e.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),p=new Int32Array(r.length),f=new Int32Array(r.length),E=0;E<r.length;E++)p[E]=-1,f[E]=-1;for(r=0;i>r;r++){for(var d=c=0;3>d;d++)E=e[3*r+d],-1==p[E]?(u[2*d]=E,u[2*d+1]=-1,c++):p[E]<h.index?(u[2*d]=E,u[2*d+1]=-1,l++):(u[2*d]=E,u[2*d+1]=p[E]);if(a+c>h.index+t)for(h={start:o,count:0,index:a},s.push(h),c=0;6>c;c+=2)d=u[c+1],d>-1&&d<h.index&&(u[c+1]=-1);for(c=0;6>c;c+=2)E=u[c],d=u[c+1],-1===d&&(d=a++),p[E]=d,f[d]=E,n[o++]=d-h.index,h.count++}return this.reorderBuffers(n,f,a),this.offsets=s},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var e,t,r,i=this.attributes.normal.array,n=0,o=i.length;o>n;n+=3)e=i[n],t=i[n+1],r=i[n+2],e=1/Math.sqrt(e*e+t*t+r*r),i[n]*=e,i[n+1]*=e,i[n+2]*=e},reorderBuffers:function(e,t,r){var i,n={},o=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(i in this.attributes)if("index"!=i)for(var a=this.attributes[i].array,s=0,h=o.length;h>s;s++){var l=o[s];if(a instanceof l){n[i]=new l(this.attributes[i].itemSize*r);break}}for(o=0;r>o;o++)for(i in a=t[o],this.attributes)if("index"!=i)for(var s=this.attributes[i].array,h=this.attributes[i].itemSize,l=n[i],c=0;h>c;c++)l[o*h+c]=s[a*h+c];this.attributes.index.array=e;for(i in this.attributes)"index"!=i&&(this.attributes[i].array=n[i],this.attributes[i].numItems=this.attributes[i].itemSize*r)},clone:function(){var e,t=new THREE.BufferGeometry,r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(e in this.attributes){for(var i=this.attributes[e],n=i.array,o={itemSize:i.itemSize,array:null},i=0,a=r.length;a>i;i++){var s=r[i];if(n instanceof s){o.array=new s(n);break}}t.attributes[e]=o}for(i=0,a=this.offsets.length;a>i;i++)r=this.offsets[i],t.offsets.push({start:r.start,index:r.index,count:r.count});return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;i>r;r++)this.vertices[r].applyMatrix4(e);for(r=0,i=this.faces.length;i>r;r++){e=this.faces[r],e.normal.applyMatrix3(t).normalize();for(var n=0,o=e.vertexNormals.length;o>n;n++)e.vertexNormals[n].applyMatrix3(t).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;i>r;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i;for(i=Array(this.vertices.length),t=0,r=this.vertices.length;r>t;t++)i[t]=new THREE.Vector3;if(e){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,e=0,t=this.faces.length;t>e;e++)r=this.faces[e],n=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),i[r.a].add(s),i[r.b].add(s),i[r.c].add(s)}else for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal);for(t=0,r=this.vertices.length;r>t;t++)i[t].normalize();for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],r.vertexNormals[0]=i[r.a].clone(),r.vertexNormals[1]=i[r.b].clone(),r.vertexNormals[2]=i[r.c].clone()},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;i>r;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[],n=this.morphNormals[e].faceNormals;var a,s,h=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;i>r;r++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;i>r;r++)n=this.faces[r],a=h.faceNormals[r],s=h.vertexNormals[r],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,r,i,n,o,a,s,h,l,c,u,p,f,E,d,m,g=[],T=[];r=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(e=0,t=this.vertices.length;t>e;e++)g[e]=new THREE.Vector3,T[e]=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)n=this.faces[e],o=this.faceVertexUvs[0][e],i=n.a,m=n.b,n=n.c,a=this.vertices[i],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,p=h.x-a.x,f=s.y-a.y,E=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-d*c),r.set((l*o-c*p)*u,(l*f-c*E)*u,(l*s-c*a)*u),v.set((h*p-d*o)*u,(h*E-d*f)*u,(h*a-d*s)*u),g[i].add(r),g[m].add(r),g[n].add(r),T[i].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],e=0,t=this.faces.length;t>e;e++)for(n=this.faces[e],r=0;r<Math.min(n.vertexNormals.length,3);r++)x.copy(n.vertexNormals[r]),i=n[v[r]],m=g[i],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[r],m),i=R.dot(T[i]),i=0>i?-1:1,n.vertexTangents[r]=new THREE.Vector4(y.x,y.y,y.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!1==e instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);else{var i,n=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,h=e.faces,l=this.faceVertexUvs[0];e=e.faceVertexUvs[0],void 0===r&&(r=0),void 0!==t&&(i=(new THREE.Matrix3).getNormalMatrix(t));for(var c=0,u=a.length;u>c;c++){var p=a[c].clone();void 0!==t&&p.applyMatrix4(t),o.push(p)}for(c=0,u=h.length;u>c;c++){var f,a=h[c],E=a.vertexNormals,d=a.vertexColors,p=new THREE.Face3(a.a+n,a.b+n,a.c+n);for(p.normal.copy(a.normal),void 0!==i&&p.normal.applyMatrix3(i).normalize(),t=0,o=E.length;o>t;t++)f=E[t].clone(),void 0!==i&&f.applyMatrix3(i).normalize(),p.vertexNormals.push(f);for(p.color.copy(a.color),t=0,o=d.length;o>t;t++)f=d[t],p.vertexColors.push(f.clone());p.materialIndex=a.materialIndex+r,s.push(p)}for(c=0,u=e.length;u>c;c++)if(r=e[c],i=[],void 0!==r){for(t=0,o=r.length;o>t;t++)i.push(new THREE.Vector2(r[t].x,r[t].y));l.push(i)}}},mergeVertices:function(){var e,t,r,i={},n=[],o=[],a=Math.pow(10,4);for(t=0,r=this.vertices.length;r>t;t++)e=this.vertices[t],e=Math.round(e.x*a)+"_"+Math.round(e.y*a)+"_"+Math.round(e.z*a),void 0===i[e]?(i[e]=t,n.push(this.vertices[t]),o[t]=n.length-1):o[t]=o[i[e]];for(i=[],t=0,r=this.faces.length;r>t;t++)for(a=this.faces[t],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],e=0;3>e;e++)if(a[e]==a[(e+1)%3]){i.push(t);break}for(t=i.length-1;t>=0;t--)for(a=i[t],this.faces.splice(a,1),o=0,r=this.faceVertexUvs.length;r>o;o++)this.faceVertexUvs[o].splice(a,1);return t=this.vertices.length-n.length,this.vertices=n,t},makeGroups:function(){var e=0;return function(t,r){var i,n,o,a,s={},h=this.morphTargets.length,l=this.morphNormals.length;for(this.geometryGroups={},i=0,n=this.faces.length;n>i;i++)o=this.faces[i],o=t?o.materialIndex:0,o in s||(s[o]={hash:o,counter:0}),a=s[o].hash+"_"+s[o].counter,a in this.geometryGroups||(this.geometryGroups[a]={faces3:[],materialIndex:o,vertices:0,numMorphTargets:h,numMorphNormals:l}),this.geometryGroups[a].vertices+3>r&&(s[o].counter+=1,a=s[o].hash+"_"+s[o].counter,a in this.geometryGroups||(this.geometryGroups[a]={faces3:[],materialIndex:o,vertices:0,numMorphTargets:h,numMorphNormals:l})),this.geometryGroups[a].faces3.push(i),this.geometryGroups[a].vertices+=3;this.geometryGroupsList=[];for(var c in this.geometryGroups)this.geometryGroups[c].id=e++,this.geometryGroupsList.push(this.geometryGroups[c])}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(t=this.faces,r=0,i=t.length;i>r;r++)e.faces.push(t[r].clone());for(t=this.faceVertexUvs[0],r=0,i=t.length;i>r;r++){for(var n=t[r],o=[],a=0,s=n.length;s>a;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,e=Math.abs(e*t-i),r=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*e/this.fullWidth,i+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*r/this.fullHeight,t-this.y*r/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraLeft=this.shadowCameraLeft,e.shadowCameraRight=this.shadowCameraRight,e.shadowCameraTop=this.shadowCameraTop,e.shadowCameraBottom=this.shadowCameraBottom,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e.shadowCascade=this.shadowCascade,e.shadowCascadeOffset.copy(this.shadowCascadeOffset),e.shadowCascadeCount=this.shadowCascadeCount,e.shadowCascadeBias=this.shadowCascadeBias.slice(0),e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraFov=this.shadowCameraFov,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function i(e,i,n,a,s,h,l){var c=/\.dds$/i.test(n),u=t+n;if(c){var p=THREE.ImageUtils.loadCompressedTexture(u);e[i]=p}else p=document.createElement("canvas"),e[i]=new THREE.Texture(p);e[i].sourceFile=n,a&&(e[i].repeat.set(a[0],a[1]),1!==a[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!==a[1]&&(e[i].wrapT=THREE.RepeatWrapping)),s&&e[i].offset.set(s[0],s[1]),h&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[h[0]]&&(e[i].wrapS=n[h[0]]),void 0!==n[h[1]]&&(e[i].wrapT=n[h[1]])),l&&(e[i].anisotropy=l),c||(p=e[i],o.imageLoader.crossOrigin=o.crossOrigin,o.imageLoader.load(u,function(e){if(!1===THREE.Math.isPowerOfTwo(e.width)||!1===THREE.Math.isPowerOfTwo(e.height)){var t=r(e.width),i=r(e.height);p.image.width=t,p.image.height=i,p.image.getContext("2d").drawImage(e,0,0,t,i)}else p.image=e;p.needsUpdate=!0}))}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(s.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(s.transparent=e.transparent),void 0!==e.depthTest&&(s.depthTest=e.depthTest),void 0!==e.depthWrite&&(s.depthWrite=e.depthWrite),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.flipSided&&(s.side=THREE.BackSide),void 0!==e.doubleSided&&(s.side=THREE.DoubleSide),void 0!==e.wireframe&&(s.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?s.vertexColors=THREE.FaceColors:e.vertexColors&&(s.vertexColors=THREE.VertexColors)),e.colorDiffuse?s.color=n(e.colorDiffuse):e.DbgColor&&(s.color=e.DbgColor),e.colorSpecular&&(s.specular=n(e.colorSpecular)),e.colorAmbient&&(s.ambient=n(e.colorAmbient)),e.colorEmissive&&(s.emissive=n(e.colorEmissive)),e.transparency&&(s.opacity=e.transparency),e.specularCoef&&(s.shininess=e.specularCoef),e.mapDiffuse&&t&&i(s,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&i(s,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&i(s,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&i(s,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&i(s,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(s.bumpScale=e.mapBumpScale),e.mapNormal?(a=THREE.ShaderLib.normalmap,h=THREE.UniformsUtils.clone(a.uniforms),h.tNormal.value=s.normalMap,e.mapNormalFactor&&h.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),s.map&&(h.tDiffuse.value=s.map,h.enableDiffuse.value=!0),s.specularMap&&(h.tSpecular.value=s.specularMap,h.enableSpecular.value=!0),s.lightMap&&(h.tAO.value=s.lightMap,h.enableAO.value=!0),h.diffuse.value.setHex(s.color),h.specular.value.setHex(s.specular),h.ambient.value.setHex(s.ambient),h.shininess.value=s.shininess,void 0!==s.opacity&&(h.opacity.value=s.opacity),a=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,lights:!0,fog:!0}),s.transparent&&(a.transparent=!0)):a=new THREE[a](s),void 0!==e.DbgName&&(a.name=e.DbgName),a}},THREE.XHRLoader=function(e){this.cache=new THREE.Cache,this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var n=this,o=n.cache.get(e);void 0!==o?t(o):(o=new XMLHttpRequest,void 0!==t&&o.addEventListener("load",function(r){n.cache.add(e,r.target.responseText),t(r.target.responseText),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.open("GET",e,!0),o.send(null),n.manager.itemStart(e))},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.cache=new THREE.Cache,this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var n=this,o=n.cache.get(e);return void 0===o?(o=document.createElement("img"),void 0!==t&&o.addEventListener("load",function(r){n.cache.add(e,this),t(this),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o):void t(o)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);if(void 0!==s.metadata&&"scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');s=e.parse(s,i),r(s.geometry,s.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;return function(t){var i,n,o,a,s,h,l,c,u,p,f,E,d,m=e.faces;h=e.vertices;var g=e.normals,T=e.colors,v=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&v++;for(i=0;v>i;i++)r.faceVertexUvs[i]=[]}for(a=0,s=h.length;s>a;)i=new THREE.Vector3,i.x=h[a++]*t,i.y=h[a++]*t,i.z=h[a++]*t,r.vertices.push(i);for(a=0,s=m.length;s>a;)if(t=m[a++],u=1&t,o=2&t,i=8&t,l=16&t,p=32&t,h=64&t,t&=128,u){if(u=new THREE.Face3,u.a=m[a],u.b=m[a+1],u.c=m[a+3],f=new THREE.Face3,f.a=m[a+1],f.b=m[a+2],f.c=m[a+3],a+=4,o&&(o=m[a++],u.materialIndex=o,f.materialIndex=o),o=r.faces.length,i)for(i=0;v>i;i++)for(E=e.uvs[i],r.faceVertexUvs[i][o]=[],r.faceVertexUvs[i][o+1]=[],n=0;4>n;n++)c=m[a++],d=E[2*c],c=E[2*c+1],d=new THREE.Vector2(d,c),2!==n&&r.faceVertexUvs[i][o].push(d),0!==n&&r.faceVertexUvs[i][o+1].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]),f.normal.copy(u.normal)),p)for(i=0;4>i;i++)l=3*m[a++],p=new THREE.Vector3(g[l++],g[l++],g[l]),2!==i&&u.vertexNormals.push(p),0!==i&&f.vertexNormals.push(p);if(h&&(h=m[a++],h=T[h],u.color.setHex(h),f.color.setHex(h)),t)for(i=0;4>i;i++)h=m[a++],h=T[h],2!==i&&u.vertexColors.push(new THREE.Color(h)),0!==i&&f.vertexColors.push(new THREE.Color(h));r.faces.push(u),r.faces.push(f)}else{if(u=new THREE.Face3,u.a=m[a++],u.b=m[a++],u.c=m[a++],o&&(o=m[a++],u.materialIndex=o),o=r.faces.length,i)for(i=0;v>i;i++)for(E=e.uvs[i],r.faceVertexUvs[i][o]=[],n=0;3>n;n++)c=m[a++],d=E[2*c],c=E[2*c+1],d=new THREE.Vector2(d,c),r.faceVertexUvs[i][o].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l])),p)for(i=0;3>i;i++)l=3*m[a++],p=new THREE.Vector3(g[l++],g[l++],g[l]),u.vertexNormals.push(p);if(h&&(h=m[a++],u.color.setHex(T[h])),t)for(i=0;3>i;i++)h=m[a++],u.vertexColors.push(new THREE.Color(T[h]));r.faces.push(u)}}(i),function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var i=0,n=e.skinWeights.length;n>i;i+=t)r.skinWeights.push(new THREE.Vector4(e.skinWeights[i],t>1?e.skinWeights[i+1]:0,t>2?e.skinWeights[i+2]:0,t>3?e.skinWeights[i+3]:0));if(e.skinIndices)for(i=0,n=e.skinIndices.length;n>i;i+=t)r.skinIndices.push(new THREE.Vector4(e.skinIndices[i],t>1?e.skinIndices[i+1]:0,t>2?e.skinIndices[i+2]:0,t>3?e.skinIndices[i+3]:0));r.bones=e.bones,r.bones&&0<r.bones.length&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match."),r.animation=e.animation,r.animations=e.animations}(),function(t){if(void 0!==e.morphTargets){var i,n,o,a,s,h;for(i=0,n=e.morphTargets.length;n>i;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=e.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,h=e.morphTargets[i].vertices,o=0,a=h.length;a>o;o+=3){var l=new THREE.Vector3;l.x=h[o]*t,l.y=h[o+1]*t,l.z=h[o+2]*t,s.push(l)}}if(void 0!==e.morphColors)for(i=0,n=e.morphColors.length;n>i;i++)for(r.morphColors[i]={},r.morphColors[i].name=e.morphColors[i].name,r.morphColors[i].colors=[],a=r.morphColors[i].colors,s=e.morphColors[i].colors,t=0,o=s.length;o>t;t+=3)h=new THREE.Color(16755200),h.setRGB(s[t],s[t+1],s[t+2]),a.push(h)}(i),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials||0===e.materials.length?{geometry:r}:(i=this.initMaterials(e.materials,t),this.needsTangents(i)&&r.computeTangents(),{geometry:r,materials:i})},THREE.LoadingManager=function(e,t,r){var i=this,n=0,o=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++},this.itemEnd=function(e){n++,void 0!==i.onProgress&&i.onProgress(e,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var n=this;r=new THREE.XHRLoader,r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes,i=e.offsets;e=e.boundingSphere;for(var n in r){var o=r[n];t.attributes[n]={itemSize:o.itemSize,array:new self[o.type](o.array)}}return void 0!==i&&(t.offsets=JSON.parse(JSON.stringify(i))),void 0!==e&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),t}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var n=this;r=new THREE.XHRLoader,r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var r=0,i=e.materials.length;i>r;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager;
},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var n=this;r=new THREE.XHRLoader(n.manager),r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials);return this.parseObject(e.object,t,r)},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=e.length;o>n;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s.data);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,n=e.length;n>i;i++){var o=e[i],a=r.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),t[o.uuid]=a}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var n;switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=r[t.geometry];var o=i[t.material];void 0===n&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Mesh(n,o);break;case"Sprite":o=i[t.material],void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Sprite(o);break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var a in t.children)n.add(this.parseObject(t.children[a],r,i));return n}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,r,i){var n=this;r=new THREE.XHRLoader(n.manager),r.setCrossOrigin(this.crossOrigin),r.load(e,function(r){n.parse(JSON.parse(r),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,r){function i(e,t){return"relativeToHTML"==t?e:b+e}function n(){o(x.scene,M.objects)}function o(e,t){var r,n,a,s,l,c;for(c in t){var u=x.objects[c],d=t[c];if(void 0===u){if(d.type&&d.type in _.hierarchyHandlers){if(void 0===d.loading){r={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var m,T={};for(m in d)m in r||(T[m]=d[m]);f=x.materials[d.material],d.loading=!0,r=_.hierarchyHandlers[d.type].loaderObject,r.options?r.load(i(d.url,M.urlBaseType),h(c,e,f,d)):r.load(i(d.url,M.urlBaseType),h(c,e,f,d),T)}}else if(void 0!==d.geometry){if(p=x.geometries[d.geometry]){if(u=!1,f=x.materials[d.material],u=f instanceof THREE.ShaderMaterial,n=d.position,a=d.rotation,s=d.scale,r=d.matrix,l=d.quaternion,d.material||(f=new THREE.MeshFaceMaterial(x.face_materials[d.geometry])),f instanceof THREE.MeshFaceMaterial&&0===f.materials.length&&(f=new THREE.MeshFaceMaterial(x.face_materials[d.geometry])),f instanceof THREE.MeshFaceMaterial)for(T=0;T<f.materials.length;T++)u=u||f.materials[T]instanceof THREE.ShaderMaterial;u&&p.computeTangents(),d.skin?u=new THREE.SkinnedMesh(p,f):d.morph?(u=new THREE.MorphAnimMesh(p,f),void 0!==d.duration&&(u.duration=d.duration),void 0!==d.time&&(u.time=d.time),void 0!==d.mirroredLoop&&(u.mirroredLoop=d.mirroredLoop),f.morphNormals&&p.computeMorphNormals()):u=new THREE.Mesh(p,f),u.name=c,r?(u.matrixAutoUpdate=!1,u.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(u.position.fromArray(n),l?u.quaternion.fromArray(l):u.rotation.fromArray(a),u.scale.fromArray(s)),u.visible=d.visible,u.castShadow=d.castShadow,u.receiveShadow=d.receiveShadow,e.add(u),x.objects[c]=u}}else if("AmbientLight"===d.type||"PointLight"===d.type||"DirectionalLight"===d.type||"SpotLight"===d.type||"HemisphereLight"===d.type||"AreaLight"===d.type){switch(T=d.color,r=d.intensity,n=d.distance,a=d.position,s=d.rotation,d.type){case"AmbientLight":g=new THREE.AmbientLight(T);break;case"PointLight":g=new THREE.PointLight(T,r,n),g.position.fromArray(a);break;case"DirectionalLight":g=new THREE.DirectionalLight(T,r),g.position.fromArray(d.direction);break;case"SpotLight":g=new THREE.SpotLight(T,r,n,1),g.angle=d.angle,g.position.fromArray(a),g.target.set(a[0],a[1]-n,a[2]),g.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));break;case"HemisphereLight":g=new THREE.DirectionalLight(T,r,n),g.target.set(a[0],a[1]-n,a[2]),g.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));break;case"AreaLight":g=new THREE.AreaLight(T,r),g.position.fromArray(a),g.width=d.size,g.height=d.size_y}e.add(g),g.name=c,x.lights[c]=g,x.objects[c]=g}else"PerspectiveCamera"===d.type||"OrthographicCamera"===d.type?(n=d.position,a=d.rotation,l=d.quaternion,"PerspectiveCamera"===d.type?E=new THREE.PerspectiveCamera(d.fov,d.aspect,d.near,d.far):"OrthographicCamera"===d.type&&(E=new THREE.OrthographicCamera(d.left,d.right,d.top,d.bottom,d.near,d.far)),E.name=c,E.position.fromArray(n),void 0!==l?E.quaternion.fromArray(l):void 0!==a&&E.rotation.fromArray(a),e.add(E),x.cameras[c]=E,x.objects[c]=E):(n=d.position,a=d.rotation,s=d.scale,l=d.quaternion,u=new THREE.Object3D,u.name=c,u.position.fromArray(n),l?u.quaternion.fromArray(l):u.rotation.fromArray(a),u.scale.fromArray(s),u.visible=void 0!==d.visible?d.visible:!1,e.add(u),x.objects[c]=u,x.empties[c]=u);if(u){if(void 0!==d.userData)for(var v in d.userData)u.userData[v]=d.userData[v];if(void 0!==d.groups)for(T=0;T<d.groups.length;T++)r=d.groups[T],void 0===x.groups[r]&&(x.groups[r]=[]),x.groups[r].push(c)}}void 0!==u&&void 0!==d.children&&o(u,d.children)}}function a(e,t,r,i,o){var a=o.rotation,s=o.quaternion,h=o.scale;e.position.fromArray(o.position),s?e.quaternion.fromArray(s):e.rotation.fromArray(a),e.scale.fromArray(h),i&&e.traverse(function(e){e.material=i});var l=void 0!==o.visible?o.visible:!0;e.traverse(function(e){e.visible=l}),r.add(e),e.name=t,x.objects[t]=e,n()}function s(e){return function(t,r){t.name=e,x.geometries[e]=t,x.face_materials[e]=r,n(),T-=1,_.onLoadComplete(),c()}}function h(e,t,r,i){return function(n){a(n.content?n.content:n.dae?n.scene:n,e,t,r,i),T-=1,_.onLoadComplete(),c()}}function l(e){return function(t,r){t.name=e,x.geometries[e]=t,x.face_materials[e]=r}}function c(){if(_.callbackProgress({totalModels:y,totalTextures:R,loadedModels:y-T,loadedTextures:R-v},x),_.onLoadProgress(),0===T&&0===v){for(var e=0;e<w.length;e++){var r=w[e],i=x.objects[r.targetName];i?r.object.target=i:(r.object.target=new THREE.Object3D,x.scene.add(r.object.target)),r.object.target.userData.targetInverse=r.object}t(x)}}function u(e,t){if(t(e),void 0!==e.children)for(var r in e.children)u(e.children[r],t)}var p,f,E,d,m,g,T,v,y,R,x,H,_=this,b=THREE.Loader.prototype.extractUrlBase(r),w=[],M=e;for(H in this.geometryHandlers)e=this.geometryHandlers[H].loaderClass,this.geometryHandlers[H].loaderObject=new e;for(H in this.hierarchyHandlers)e=this.hierarchyHandlers[H].loaderClass,this.hierarchyHandlers[H].loaderObject=new e;v=T=0,x={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},M.transform&&(H=M.transform.position,e=M.transform.rotation,r=M.transform.scale,H&&x.scene.position.fromArray(H),e&&x.scene.rotation.fromArray(e),r&&x.scene.scale.fromArray(r),H||e||r)&&(x.scene.updateMatrix(),x.scene.updateMatrixWorld()),H=function(e){return function(){v-=e,c(),_.onLoadComplete()}};for(var S in M.fogs)e=M.fogs[S],"linear"===e.type?d=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(d=new THREE.FogExp2(0,e.density)),e=e.color,d.color.setRGB(e[0],e[1],e[2]),x.fogs[S]=d;for(var C in M.geometries)d=M.geometries[C],d.type in this.geometryHandlers&&(T+=1,_.onLoadStart());for(var A in M.objects)u(M.objects[A],function(e){e.type&&e.type in _.hierarchyHandlers&&(T+=1,_.onLoadStart())});y=T;for(C in M.geometries)if(d=M.geometries[C],"cube"===d.type)p=new THREE.BoxGeometry(d.width,d.height,d.depth,d.widthSegments,d.heightSegments,d.depthSegments),p.name=C,x.geometries[C]=p;else if("plane"===d.type)p=new THREE.PlaneGeometry(d.width,d.height,d.widthSegments,d.heightSegments),p.name=C,x.geometries[C]=p;else if("sphere"===d.type)p=new THREE.SphereGeometry(d.radius,d.widthSegments,d.heightSegments),p.name=C,x.geometries[C]=p;else if("cylinder"===d.type)p=new THREE.CylinderGeometry(d.topRad,d.botRad,d.height,d.radSegs,d.heightSegs),p.name=C,x.geometries[C]=p;else if("torus"===d.type)p=new THREE.TorusGeometry(d.radius,d.tube,d.segmentsR,d.segmentsT),p.name=C,x.geometries[C]=p;else if("icosahedron"===d.type)p=new THREE.IcosahedronGeometry(d.radius,d.subdivisions),p.name=C,x.geometries[C]=p;else if(d.type in this.geometryHandlers){A={};for(m in d)"type"!==m&&"url"!==m&&(A[m]=d[m]);this.geometryHandlers[d.type].loaderObject.load(i(d.url,M.urlBaseType),s(C),A)}else"embedded"===d.type&&(A=M.embeds[d.id],A.metadata=M.metadata,A&&(A=this.geometryHandlers.ascii.loaderObject.parse(A,""),l(C)(A.geometry,A.materials)));for(var L in M.textures)if(C=M.textures[L],C.url instanceof Array)for(v+=C.url.length,m=0;m<C.url.length;m++)_.onLoadStart();else v+=1,_.onLoadStart();R=v;for(L in M.textures){if(C=M.textures[L],void 0!==C.mapping&&void 0!==THREE[C.mapping]&&(C.mapping=new THREE[C.mapping]),C.url instanceof Array){for(A=C.url.length,d=[],m=0;A>m;m++)d[m]=i(C.url[m],M.urlBaseType);m=(m=/\.dds$/i.test(d[0]))?THREE.ImageUtils.loadCompressedTextureCube(d,C.mapping,H(A)):THREE.ImageUtils.loadTextureCube(d,C.mapping,H(A))}else m=/\.dds$/i.test(C.url),A=i(C.url,M.urlBaseType),d=H(1),m=m?THREE.ImageUtils.loadCompressedTexture(A,C.mapping,d):THREE.ImageUtils.loadTexture(A,C.mapping,d),void 0!==THREE[C.minFilter]&&(m.minFilter=THREE[C.minFilter]),void 0!==THREE[C.magFilter]&&(m.magFilter=THREE[C.magFilter]),C.anisotropy&&(m.anisotropy=C.anisotropy),C.repeat&&(m.repeat.set(C.repeat[0],C.repeat[1]),1!==C.repeat[0]&&(m.wrapS=THREE.RepeatWrapping),1!==C.repeat[1]&&(m.wrapT=THREE.RepeatWrapping)),C.offset&&m.offset.set(C.offset[0],C.offset[1]),C.wrap&&(A={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==A[C.wrap[0]]&&(m.wrapS=A[C.wrap[0]]),void 0!==A[C.wrap[1]]&&(m.wrapT=A[C.wrap[1]]));x.textures[L]=m}var P,D;for(P in M.materials){L=M.materials[P];for(D in L.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?L.parameters[D]=x.textures[L.parameters[D]]:"shading"===D?L.parameters[D]="flat"===L.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?L.parameters[D]="double"==L.parameters[D]?THREE.DoubleSide:"back"==L.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?L.parameters[D]=L.parameters[D]in THREE?THREE[L.parameters[D]]:THREE.NormalBlending:"combine"===D?L.parameters[D]=L.parameters[D]in THREE?THREE[L.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==L.parameters[D]?L.parameters[D]=THREE.FaceColors:L.parameters[D]&&(L.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(H=L.parameters[D],L.parameters[D]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==L.parameters.opacity&&1>L.parameters.opacity&&(L.parameters.transparent=!0),L.parameters.normalMap?(H=THREE.ShaderLib.normalmap,C=THREE.UniformsUtils.clone(H.uniforms),m=L.parameters.color,A=L.parameters.specular,d=L.parameters.ambient,S=L.parameters.shininess,C.tNormal.value=x.textures[L.parameters.normalMap],L.parameters.normalScale&&C.uNormalScale.value.set(L.parameters.normalScale[0],L.parameters.normalScale[1]),L.parameters.map&&(C.tDiffuse.value=L.parameters.map,C.enableDiffuse.value=!0),L.parameters.envMap&&(C.tCube.value=L.parameters.envMap,C.enableReflection.value=!0,C.reflectivity.value=L.parameters.reflectivity),L.parameters.lightMap&&(C.tAO.value=L.parameters.lightMap,C.enableAO.value=!0),L.parameters.specularMap&&(C.tSpecular.value=x.textures[L.parameters.specularMap],C.enableSpecular.value=!0),L.parameters.displacementMap&&(C.tDisplacement.value=x.textures[L.parameters.displacementMap],C.enableDisplacement.value=!0,C.uDisplacementBias.value=L.parameters.displacementBias,C.uDisplacementScale.value=L.parameters.displacementScale),C.diffuse.value.setHex(m),C.specular.value.setHex(A),C.ambient.value.setHex(d),C.shininess.value=S,L.parameters.opacity&&(C.opacity.value=L.parameters.opacity),f=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:C,lights:!0,fog:!0})):f=new THREE[L.type](L.parameters),f.name=P,x.materials[P]=f}for(P in M.materials)if(L=M.materials[P],L.parameters.materials){for(D=[],m=0;m<L.parameters.materials.length;m++)D.push(x.materials[L.parameters.materials[m]]);x.materials[P].materials=D}n(),x.cameras&&M.defaults.camera&&(x.currentCamera=x.cameras[M.defaults.camera]),x.fogs&&M.defaults.fog&&(x.scene.fog=x.fogs[M.defaults.fog]),_.callbackSync(x),c()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){r=new THREE.ImageLoader(this.manager),r.setCrossOrigin(this.crossOrigin),r.load(e,function(e){e=new THREE.Texture(e),e.needsUpdate=!0,void 0!==t&&t(e)})},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e},THREE.ParticleSystemMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var e=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,e),e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(e,t,r,i,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.frustumCulled=this.sortParticles=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e,t){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e,t),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0);for(var r=0,i=this.children.length;i>r;r++)this.children[r].update(this.skinMatrix,t)},THREE.Skeleton=function(e,t){this.useVertexTexture=void 0!==t?t:!0,this.bones=[],this.boneMatrices=[];var r,i,n,o,a;if(void 0!==e){for(var s=0;s<e.length;++s)i=e[s],n=i.pos,o=i.rotq,a=i.scl,r=this.addBone(),r.name=i.name,r.position.set(n[0],n[1],n[2]),r.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?r.scale.set(a[0],a[1],a[2]):r.scale.set(1,1,1);for(s=0;s<e.length;++s)i=e[s],
-1!==i.parent&&this.bones[i.parent].add(this.bones[s]);r=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=r=r>256?64:r>64?32:r>16?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*r)}},THREE.Skeleton.prototype=Object.create(THREE.Mesh.prototype),THREE.Skeleton.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.Skeleton.prototype.calculateInverses=function(e){this.boneInverses=[],e=0;for(var t=this.bones.length;t>e;++e){var r=new THREE.Matrix4;r.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(r)}},THREE.SkinnedMesh=function(e,t,r){for(THREE.Mesh.call(this,e,t),this.skeleton=new THREE.Skeleton(this.geometry&&this.geometry.bones,r),e=0;e<this.skeleton.bones.length;++e)t=this.skeleton.bones[e],void 0===t.parent&&this.add(t);this.identityMatrix=new THREE.Matrix4,this.pose()},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1),t=0;for(var r=this.children.length;r>t;t++){var i=this.children[t];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}for(void 0===this.skeleton.boneInverses&&this.skeleton.calculateInverses(),t=0,r=this.skeleton.bones.length;r>t;t++)e.multiplyMatrices(this.skeleton.bones[t].skinMatrix,this.skeleton.boneInverses[t]),e.flattenToArrayOffset(this.skeleton.boneMatrices,16*t);this.skeleton.useVertexTexture&&(this.skeleton.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0!==r?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n].name.match(i);if(a&&1<a.length){a=a[1],r[a]||(r[a]={start:1/0,end:-(1/0)});var s=r[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;r>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(1<this.objects.length){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),r=e.distanceTo(t),this.objects[0].object.visible=!0;for(var i=1,n=this.objects.length;n>i&&r>=this.objects[i].distance;i++)this.objects[i-1].object.visible=!1,this.objects[i].object.visible=!0;for(;n>i;i++)this.objects[i].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;r>t;t++){var i=this.objects[t].object.clone();i.visible=0===t,e.addLevel(i,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new THREE.Float32Attribute(3,3);e.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]);var t=new THREE.BufferGeometry;return t.addAttribute("position",e),function(e){THREE.Object3D.call(this),this.geometry=t,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(this.dispatchEvent({type:"objectAdded",object:e}),e.dispatchEvent({type:"addedToScene",scene:this}),t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(-1!==t&&this.__lights.splice(t,1),e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));for(this.dispatchEvent({type:"objectRemoved",object:e}),e.dispatchEvent({type:"removedFromScene",scene:this}),t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e,t,r,i){l(t),c(r),u(i),p(e.getStyle()),A.stroke(),he.expandByScalar(2*t)}function r(e){f(e.getStyle()),A.fill()}function i(e){n(e.target)}function n(e){var t=e.wrapS===THREE.RepeatWrapping,r=e.wrapT===THREE.RepeatWrapping,i=e.image,n=document.createElement("canvas");n.width=i.width,n.height=i.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,i.height),o.drawImage(i,0,0),oe[e.id]=A.createPattern(n,!0===t&&!0===r?"repeat":!0===t&&!1===r?"repeat-x":!1===t&&!0===r?"repeat-y":"no-repeat")}function o(e,t,r,o,a,s,h,l,c,u,p,E,d){if(!(d instanceof THREE.DataTexture)){!1===d.hasEventListener("update",i)&&(void 0!==d.image&&0<d.image.width&&n(d),d.addEventListener("update",i));var m=oe[d.id];if(void 0!==m){f(m);var m=d.offset.x/d.repeat.x,g=d.offset.y/d.repeat.y,T=d.image.width*d.repeat.x;d=d.image.height*d.repeat.y,h=(h+m)*T,l=(l+g)*d,r-=e,o-=t,a-=e,s-=t,c=(c+m)*T-h,u=(u+g)*d-l,p=(p+m)*T-h,E=(E+g)*d-l,d=c*E-p*u,0!==d&&(m=1/d,d=(E*r-u*a)*m,u=(E*o-u*s)*m,r=(c*a-p*r)*m,o=(c*s-p*o)*m,e=e-d*h-r*l,t=t-u*h-o*l,A.save(),A.transform(d,u,r,o,e,t),A.fill(),A.restore())}else f("rgba(0,0,0,1)"),A.fill()}}function a(e,t,r){var i=t.x-e.x,n=t.y-e.y,o=i*i+n*n;0!==o&&(r/=Math.sqrt(o),i*=r,n*=r,t.x+=i,t.y+=n,e.x-=i,e.y-=n)}function s(e){D!==e&&(D=A.globalAlpha=e)}function h(e){F!==e&&(e===THREE.NormalBlending?A.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?A.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(A.globalCompositeOperation="darker"),F=e)}function l(e){z!==e&&(z=A.lineWidth=e)}function c(e){B!==e&&(B=A.lineCap=e)}function u(e){O!==e&&(O=A.lineJoin=e)}function p(e){U!==e&&(U=A.strokeStyle=e)}function f(e){V!==e&&(V=A.fillStyle=e)}function E(e,t){(N!==e||k!==t)&&(A.setLineDash([e,t]),N=e,k=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var d=THREE.Math.smoothstep;e=e||{};var m,g,T,v,y,R,x,H=this,_=new THREE.Projector,b=void 0!==e.canvas?e.canvas:document.createElement("canvas"),w=b.width,M=b.height,S=Math.floor(w/2),C=Math.floor(M/2),A=b.getContext("2d",{alpha:!0===e.alpha}),L=new THREE.Color(0),P=0,D=1,F=0,U=null,V=null,z=null,B=null,O=null,N=null,k=0;new THREE.RenderableVertex,new THREE.RenderableVertex;var I,G,W,j,X,q,Y=new THREE.Color;new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color;var K,Z,Q,J,$,ee,te,re=new THREE.Color,ie=new THREE.Color,ne=new THREE.Color,oe={},ae=new THREE.Box2,se=new THREE.Box2,he=new THREE.Box2,le=new THREE.Color,ce=new THREE.Color,ue=new THREE.Color,pe=new THREE.Vector3,fe=new THREE.Vector3,Ee=new THREE.Vector3,de=new THREE.Matrix3;void 0===A.setLineDash&&(A.setLineDash=function(){}),this.domElement=b,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,r){w=e*this.devicePixelRatio,M=t*this.devicePixelRatio,b.width=w,b.height=M,S=Math.floor(w/2),C=Math.floor(M/2),!1!==r&&(b.style.width=e+"px",b.style.height=t+"px"),ae.min.set(-S,-C),ae.max.set(S,C),se.min.set(-S,-C),se.max.set(S,C),D=1,F=0,O=B=z=V=U=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){A.setTransform(r*this.devicePixelRatio/w,0,0,-(i*this.devicePixelRatio)/M,e*this.devicePixelRatio,M-t*this.devicePixelRatio),A.translate(S,C)},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(e,t){L.set(e),P=void 0!==t?t:1,se.min.set(-S,-C),se.max.set(S,C)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===se.empty()&&(se.intersect(ae),se.expandByScalar(2),1>P&&A.clearRect(0|se.min.x,0|se.min.y,se.max.x-se.min.x|0,se.max.y-se.min.y|0),P>0&&(h(THREE.NormalBlending),s(1),f("rgba("+Math.floor(255*L.r)+","+Math.floor(255*L.g)+","+Math.floor(255*L.b)+","+P+")"),A.fillRect(0|se.min.x,0|se.min.y,se.max.x-se.min.x|0,se.max.y-se.min.y|0)),se.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,b){if(!1==b instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),H.info.render.vertices=0,H.info.render.faces=0,m=_.projectScene(e,b,this.sortObjects,this.sortElements),g=m.elements,T=m.lights,v=b,de.getNormalMatrix(b.matrixWorldInverse),le.setRGB(0,0,0),ce.setRGB(0,0,0),ue.setRGB(0,0,0);for(var w=0,M=T.length;M>w;w++){var L=T[w],P=L.color;L instanceof THREE.AmbientLight?le.add(P):L instanceof THREE.DirectionalLight?ce.add(P):L instanceof THREE.PointLight&&ue.add(P)}for(w=0,M=g.length;M>w;w++){var D=g[w],F=D.material;if(void 0!==F&&0!==F.opacity){if(he.makeEmpty(),D instanceof THREE.RenderableSprite){y=D,y.x*=S,y.y*=C;var L=y,U=D,P=F;s(P.opacity),h(P.blending);var V=U.scale.x*S,U=U.scale.y*C,D=.5*Math.sqrt(V*V+U*U);if(he.min.set(L.x-D,L.y-D),he.max.set(L.x+D,L.y+D),P instanceof THREE.SpriteMaterial||P instanceof THREE.ParticleSystemMaterial){var z=P.map;if(null!==z){!1===z.hasEventListener("update",i)&&(void 0!==z.image&&0<z.image.width&&n(z),z.addEventListener("update",i)),D=oe[z.id],f(void 0!==D?D:"rgba( 0, 0, 0, 1 )");var B=z.image,D=B.width*z.offset.x,F=B.height*z.offset.y,O=B.width*z.repeat.x,z=B.height*z.repeat.y,B=V/O,N=U/z;A.save(),A.translate(L.x,L.y),0!==P.rotation&&A.rotate(P.rotation),A.translate(-V/2,-U/2),A.scale(B,N),A.translate(-D,-F),A.fillRect(D,F,O,z)}else f(P.color.getStyle()),A.save(),A.translate(L.x,L.y),0!==P.rotation&&A.rotate(P.rotation),A.scale(V,-U),A.fillRect(-.5,-.5,1,1);A.restore()}else P instanceof THREE.SpriteCanvasMaterial&&(p(P.color.getStyle()),f(P.color.getStyle()),A.save(),A.translate(L.x,L.y),0!==P.rotation&&A.rotate(P.rotation),A.scale(V,U),P.program(A),A.restore())}else if(D instanceof THREE.RenderableLine){if(y=D.v1,R=D.v2,y.positionScreen.x*=S,y.positionScreen.y*=C,R.positionScreen.x*=S,R.positionScreen.y*=C,he.setFromPoints([y.positionScreen,R.positionScreen]),!0===ae.isIntersectionBox(he))if(L=y,P=R,V=D,U=F,s(U.opacity),h(U.blending),A.beginPath(),A.moveTo(L.positionScreen.x,L.positionScreen.y),A.lineTo(P.positionScreen.x,P.positionScreen.y),U instanceof THREE.LineBasicMaterial){if(l(U.linewidth),c(U.linecap),u(U.linejoin),U.vertexColors!==THREE.VertexColors)p(U.color.getStyle());else if(D=V.vertexColors[0].getStyle(),V=V.vertexColors[1].getStyle(),D===V)p(D);else{try{var k=A.createLinearGradient(L.positionScreen.x,L.positionScreen.y,P.positionScreen.x,P.positionScreen.y);k.addColorStop(0,D),k.addColorStop(1,V)}catch(me){k=D}p(k)}A.stroke(),he.expandByScalar(2*U.linewidth)}else U instanceof THREE.LineDashedMaterial&&(l(U.linewidth),c(U.linecap),u(U.linejoin),p(U.color.getStyle()),E(U.dashSize,U.gapSize),A.stroke(),he.expandByScalar(2*U.linewidth),E(null,null))}else if(D instanceof THREE.RenderableFace){if(y=D.v1,R=D.v2,x=D.v3,-1>y.positionScreen.z||1<y.positionScreen.z)continue;if(-1>R.positionScreen.z||1<R.positionScreen.z)continue;if(-1>x.positionScreen.z||1<x.positionScreen.z)continue;if(y.positionScreen.x*=S,y.positionScreen.y*=C,R.positionScreen.x*=S,R.positionScreen.y*=C,x.positionScreen.x*=S,x.positionScreen.y*=C,0<F.overdraw&&(a(y.positionScreen,R.positionScreen,F.overdraw),a(R.positionScreen,x.positionScreen,F.overdraw),a(x.positionScreen,y.positionScreen,F.overdraw)),he.setFromPoints([y.positionScreen,R.positionScreen,x.positionScreen]),!0===ae.isIntersectionBox(he)){P=y,V=R,U=x,L=F,H.info.render.vertices+=3,H.info.render.faces++,s(L.opacity),h(L.blending),I=P.positionScreen.x,G=P.positionScreen.y,W=V.positionScreen.x,j=V.positionScreen.y,X=U.positionScreen.x,q=U.positionScreen.y;var F=I,O=G,z=W,B=j,N=X,ge=q;if(A.beginPath(),A.moveTo(F,O),A.lineTo(z,B),A.lineTo(N,ge),A.closePath(),(L instanceof THREE.MeshLambertMaterial||L instanceof THREE.MeshPhongMaterial)&&null===L.map){for(re.copy(L.color),ie.copy(L.emissive),L.vertexColors===THREE.FaceColors&&re.multiply(D.color),Y.copy(le),fe.copy(P.positionWorld).add(V.positionWorld).add(U.positionWorld).divideScalar(3),P=fe,V=D.normalModel,U=Y,D=0,F=T.length;F>D;D++)O=T[D],ne.copy(O.color),O instanceof THREE.DirectionalLight?(z=pe.setFromMatrixPosition(O.matrixWorld).normalize(),B=V.dot(z),0>=B||(B*=O.intensity,U.add(ne.multiplyScalar(B)))):O instanceof THREE.PointLight&&(z=pe.setFromMatrixPosition(O.matrixWorld),B=V.dot(pe.subVectors(z,P).normalize()),0>=B||(B*=0==O.distance?1:1-Math.min(P.distanceTo(z)/O.distance,1),0!=B&&(B*=O.intensity,U.add(ne.multiplyScalar(B)))));Y.multiply(re).add(ie),!0===L.wireframe?t(Y,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):r(Y)}else L instanceof THREE.MeshBasicMaterial||L instanceof THREE.MeshLambertMaterial||L instanceof THREE.MeshPhongMaterial?null!==L.map?L.map.mapping instanceof THREE.UVMapping&&(K=D.uvs,o(I,G,W,j,X,q,K[0].x,K[0].y,K[1].x,K[1].y,K[2].x,K[2].y,L.map)):null!==L.envMap?L.envMap.mapping instanceof THREE.SphericalReflectionMapping?(Ee.copy(D.vertexNormalsModel[0]).applyMatrix3(de),Z=.5*Ee.x+.5,Q=.5*Ee.y+.5,Ee.copy(D.vertexNormalsModel[1]).applyMatrix3(de),J=.5*Ee.x+.5,$=.5*Ee.y+.5,Ee.copy(D.vertexNormalsModel[2]).applyMatrix3(de),ee=.5*Ee.x+.5,te=.5*Ee.y+.5,o(I,G,W,j,X,q,Z,Q,J,$,ee,te,L.envMap)):L.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(Ee.copy(D.vertexNormalsModel[0]).applyMatrix3(de),Z=-.5*Ee.x+.5,Q=-.5*Ee.y+.5,Ee.copy(D.vertexNormalsModel[1]).applyMatrix3(de),J=-.5*Ee.x+.5,$=-.5*Ee.y+.5,Ee.copy(D.vertexNormalsModel[2]).applyMatrix3(de),ee=-.5*Ee.x+.5,te=-.5*Ee.y+.5,o(I,G,W,j,X,q,Z,Q,J,$,ee,te,L.envMap)):(Y.copy(L.color),L.vertexColors===THREE.FaceColors&&Y.multiply(D.color),!0===L.wireframe?t(Y,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):r(Y)):(L instanceof THREE.MeshDepthMaterial?Y.r=Y.g=Y.b=1-d(P.positionScreen.z*P.positionScreen.w,v.near,v.far):L instanceof THREE.MeshNormalMaterial?(Ee.copy(D.normalModel).applyMatrix3(de),Y.setRGB(Ee.x,Ee.y,Ee.z).multiplyScalar(.5).addScalar(.5)):Y.setRGB(1,1,1),!0===L.wireframe?t(Y,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):r(Y))}}se.union(he)}}}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		uniform bool useRefract;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n	vec3 reflectVec;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n		if ( useRefract ) {\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		} else { \n			reflectVec = reflect( cameraToVertex, worldNormal );\n		}\n	#else\n		reflectVec = vReflect;\n	#endif\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#endif\n	#ifdef GAMMA_INPUT\n		cubeColor.xyz *= cubeColor.xyz;\n	#endif\n	if ( combine == 1 ) {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n	} else if ( combine == 2 ) {\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n	} else {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n	}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	varying vec3 vReflect;\n	uniform float refractionRatio;\n	uniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#endif\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n	#endif\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n	if ( useRefract ) {\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n	} else {\n		vReflect = reflect( cameraToVertex, worldNormal );\n	}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	#ifdef GAMMA_INPUT\n		texelColor.xyz *= texelColor.xyz;\n	#endif\n	gl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\n	vUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n	#ifdef DOUBLE_SIDED\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n		#ifdef WRAP_AROUND\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n		#endif\n	#endif\n	#ifdef WRAP_AROUND\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n		#ifdef DOUBLE_SIDED\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n		#endif\n	#endif\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n	#ifdef DOUBLE_SIDED\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n	#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n		#ifdef DOUBLE_SIDED\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n			#ifdef WRAP_AROUND\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n			#endif\n		#endif\n		#ifdef WRAP_AROUND\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n			#ifdef DOUBLE_SIDED\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n			#endif\n		#endif\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n		#ifdef DOUBLE_SIDED\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n		#endif\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n			lVector = normalize( lVector );\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n			#ifdef DOUBLE_SIDED\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n				#ifdef WRAP_AROUND\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n				#endif\n			#endif\n			#ifdef WRAP_AROUND\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n				#ifdef DOUBLE_SIDED\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n				#endif\n			#endif\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n			#ifdef DOUBLE_SIDED\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n			#endif\n		}\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( transformedNormal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		#ifdef DOUBLE_SIDED\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n		#endif\n	}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	vWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n	vec3 pointDiffuse  = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( normal, lVector );\n		#ifdef WRAP_AROUND\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n		#else\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	vec3 spotDiffuse  = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float dotProduct = dot( normal, lVector );\n			#ifdef WRAP_AROUND\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n			#else\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n			#endif\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n		}\n	}\n#endif\n#if MAX_DIR_LIGHTS > 0\n	vec3 dirDiffuse  = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, dirVector );\n		#ifdef WRAP_AROUND\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n		#else\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	vec3 hemiDiffuse  = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		hemiDiffuse += diffuse * hemiColor;\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n		vec3 lVectorGround = -lVector;\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n		float dotProductGround = dot( normal, lVectorGround );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n	}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n	#ifdef GAMMA_INPUT\n		vColor = color * color;\n	#else\n		vColor = color;\n	#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	#ifdef USE_MORPHTARGETS\n	vec4 skinVertex = vec4( morphed, 1.0 );\n	#else\n	vec4 skinVertex = vec4( position, 1.0 );\n	#endif\n	vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n	skinned      += boneMatY * skinVertex * skinWeight.y;\n	skinned      += boneMatZ * skinVertex * skinWeight.z;\n	skinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n	morphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\n	mvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	vec3 morphedNormal = vec3( 0.0 );\n	morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n	morphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = skinWeight.x * boneMatX;\n	skinMatrix 	+= skinWeight.y * boneMatY;\n	skinMatrix 	+= skinWeight.z * boneMatZ;\n	skinMatrix 	+= skinWeight.w * boneMatW;\n	#ifdef USE_MORPHNORMALS\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n	#else\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n	#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\n	objectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n	objectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n	objectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	float unpackDepth( const in vec4 rgba_depth ) {\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n	}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n	#ifdef SHADOWMAP_DEBUG\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n	#endif\n	#ifdef SHADOWMAP_CASCADE\n		int inFrustumCount = 0;\n	#endif\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		#ifdef SHADOWMAP_CASCADE\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n		#else\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		#endif\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n			shadowCoord.z += shadowBias[ i ];\n			#if defined( SHADOWMAP_TYPE_PCF )\n				float shadow = 0.0;\n				const float shadowDelta = 1.0 / 9.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n				float shadow = 0.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n				mat3 shadowKernel;\n				mat3 depthKernel;\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#else\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n				if ( fDepth < shadowCoord.z )\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n			#endif\n		}\n		#ifdef SHADOWMAP_DEBUG\n			#ifdef SHADOWMAP_CASCADE\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n			#else\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n			#endif\n		#endif\n	}\n	#ifdef GAMMA_OUTPUT\n		shadowColor *= shadowColor;\n	#endif\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n	}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n	#endif\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif"},THREE.UniformsUtils={merge:function(e){var t,r,i,n={};for(t=0;t<e.length;t++)for(r in i=this.clone(e[t]))n[r]=i[r];return n},clone:function(e){var t,r,i,n={};for(t in e)for(r in n[t]={},e[t])i=e[t][r],n[t][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			gl_FragColor.xyz *= vLightFront;\n		else\n			gl_FragColor.xyz *= vLightBack;\n	#else\n		gl_FragColor.xyz *= vLightFront;\n	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")
},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	gl_FragColor = vec4( vec3( 1.0 ), opacity );\n	vec3 specularTex = vec3( 1.0 );\n	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n	normalTex.xy *= uNormalScale;\n	normalTex = normalize( normalTex );\n	if( enableDiffuse ) {\n		#ifdef GAMMA_INPUT\n			vec4 texelColor = texture2D( tDiffuse, vUv );\n			texelColor.xyz *= texelColor.xyz;\n			gl_FragColor = gl_FragColor * texelColor;\n		#else\n			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n		#endif\n	}\n	if( enableAO ) {\n		#ifdef GAMMA_INPUT\n			vec4 aoColor = texture2D( tAO, vUv );\n			aoColor.xyz *= aoColor.xyz;\n			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n		#else\n			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n		#endif\n	}\n	if( enableSpecular )\n		specularTex = texture2D( tSpecular, vUv ).xyz;\n	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n	vec3 finalNormal = tsb * normalTex;\n	#ifdef FLIP_SIDED\n		finalNormal = -finalNormal;\n	#endif\n	vec3 normal = normalize( finalNormal );\n	vec3 viewPosition = normalize( vViewPosition );\n	#if MAX_POINT_LIGHTS > 0\n		vec3 pointDiffuse = vec3( 0.0 );\n		vec3 pointSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n			float pointDistance = 1.0;\n			if ( pointLightDistance[ i ] > 0.0 )\n				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n			pointVector = normalize( pointVector );\n			#ifdef WRAP_AROUND\n				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n			#else\n				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n			#endif\n			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n			vec3 pointHalfVector = normalize( pointVector + viewPosition );\n			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\n			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n		}\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		vec3 spotDiffuse = vec3( 0.0 );\n		vec3 spotSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n			float spotDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n			spotVector = normalize( spotVector );\n			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n			if ( spotEffect > spotLightAngleCos[ i ] ) {\n				spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n				#ifdef WRAP_AROUND\n					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n				#else\n					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n				#endif\n				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n				vec3 spotHalfVector = normalize( spotVector + viewPosition );\n				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n				float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\n				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n			}\n		}\n	#endif\n	#if MAX_DIR_LIGHTS > 0\n		vec3 dirDiffuse = vec3( 0.0 );\n		vec3 dirSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n			vec3 dirVector = normalize( lDirection.xyz );\n			#ifdef WRAP_AROUND\n				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n			#else\n				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n			#endif\n			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n			vec3 dirHalfVector = normalize( dirVector + viewPosition );\n			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\n			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n		}\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		vec3 hemiDiffuse  = vec3( 0.0 );\n		vec3 hemiSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n			vec3 lVector = normalize( lDirection.xyz );\n			float dotProduct = dot( normal, lVector );\n			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n			hemiDiffuse += diffuse * hemiColor;\n			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n			float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n			vec3 lVectorGround = -lVector;\n			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n			float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n			float dotProductGround = dot( normal, lVectorGround );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\n			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\n			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n		}\n	#endif\n	vec3 totalDiffuse = vec3( 0.0 );\n	vec3 totalSpecular = vec3( 0.0 );\n	#if MAX_DIR_LIGHTS > 0\n		totalDiffuse += dirDiffuse;\n		totalSpecular += dirSpecular;\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		totalDiffuse += hemiDiffuse;\n		totalSpecular += hemiSpecular;\n	#endif\n	#if MAX_POINT_LIGHTS > 0\n		totalDiffuse += pointDiffuse;\n		totalSpecular += pointSpecular;\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		totalDiffuse += spotDiffuse;\n		totalSpecular += spotSpecular;\n	#endif\n	#ifdef METAL\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n	#else\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n	#endif\n	if ( enableReflection ) {\n		vec3 vReflect;\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		if ( useRefract ) {\n			vReflect = refract( cameraToVertex, normal, refractionRatio );\n		} else {\n			vReflect = reflect( cameraToVertex, normal );\n		}\n		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n		#ifdef GAMMA_INPUT\n			cubeColor.xyz *= cubeColor.xyz;\n		#endif\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n	}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n	uniform sampler2D tDisplacement;\n	uniform float uDisplacementScale;\n	uniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"	#ifdef USE_SKINNING\n		vNormal = normalize( normalMatrix * skinnedNormal.xyz );\n		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n		vTangent = normalize( normalMatrix * skinnedTangent.xyz );\n	#else\n		vNormal = normalize( normalMatrix * normal );\n		vTangent = normalize( normalMatrix * tangent.xyz );\n	#endif\n	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n	vUv = uv * uRepeat + uOffset;\n	vec3 displacedPosition;\n	#ifdef VERTEX_TEXTURES\n		if ( enableDisplacement ) {\n			vec3 dv = texture2D( tDisplacement, uv ).xyz;\n			float df = uDisplacementScale * dv.x + uDisplacementBias;\n			displacedPosition = position + normalize( normal ) * df;\n		} else {\n			#ifdef USE_SKINNING\n				vec4 skinVertex = vec4( position, 1.0 );\n				vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n				skinned 	  += boneMatY * skinVertex * skinWeight.y;\n				skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n				skinned 	  += boneMatW * skinVertex * skinWeight.w;\n				displacedPosition  = skinned.xyz;\n			#else\n				displacedPosition = position;\n			#endif\n		}\n	#else\n		#ifdef USE_SKINNING\n			vec4 skinVertex = vec4( position, 1.0 );\n			vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n			skinned 	  += boneMatY * skinVertex * skinWeight.y;\n			skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n			skinned 	  += boneMatW * skinVertex * skinWeight.w;\n			displacedPosition  = skinned.xyz;\n		#else\n			displacedPosition = position;\n		#endif\n	#endif\n	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"	vWorldPosition = worldPosition.xyz;\n	vViewPosition = -mvPosition.xyz;\n	#ifdef USE_SHADOWMAP\n		for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n		}\n	#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	vWorldPosition = worldPosition.xyz;\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=W.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function r(e,t){var r=t.geometry,a=e.faces3,s=3*a.length,h=1*a.length,l=3*a.length,a=i(t,e),c=o(a),u=n(a),p=a.vertexColors?a.vertexColors:!1;if(e.__vertexArray=new Float32Array(3*s),u&&(e.__normalArray=new Float32Array(3*s)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*s)),p&&(e.__colorArray=new Float32Array(3*s)),c&&(0<r.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*s)),1<r.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*s))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*s),e.__skinWeightArray=new Float32Array(4*s)),r=null!==K&&h>21845?Uint32Array:Uint16Array,e.__typeArray=r,e.__faceArray=new r(3*h),e.__lineArray=new r(2*l),e.numMorphTargets)for(e.__morphTargetsArrays=[],r=0,c=e.numMorphTargets;c>r;r++)e.__morphTargetsArrays.push(new Float32Array(3*s));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0,c=e.numMorphNormals;c>r;r++)e.__morphNormalsArrays.push(new Float32Array(3*s));if(e.__webglFaceCount=3*h,e.__webglLineCount=2*l,a.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var f in a.attributes){var E,h=a.attributes[f],l={};for(E in h)l[E]=h[E];(!l.__webglInitialized||l.createUniqueBuffers)&&(l.__webglInitialized=!0,r=1,"v2"===l.type?r=2:"v3"===l.type?r=3:"v4"===l.type?r=4:"c"===l.type&&(r=3),l.size=r,l.array=new Float32Array(s*r),l.buffer=W.createBuffer(),l.buffer.belongsToAttribute=f,h.needsUpdate=!0,l.__original=h),e.__webglCustomAttributesList.push(l)}}e.__inittedArrays=!0}function i(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function n(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function a(e,t,r,i){for(var n in t){var o=t[n],a=r[n];if(o>=0)if(a){var s=a.itemSize;W.bindBuffer(W.ARRAY_BUFFER,a.buffer),h(o),W.vertexAttribPointer(o,s,W.FLOAT,!1,0,i*s*4)}else e.defaultAttributeValues&&(2===e.defaultAttributeValues[n].length?W.vertexAttrib2fv(o,e.defaultAttributeValues[n]):3===e.defaultAttributeValues[n].length&&W.vertexAttrib3fv(o,e.defaultAttributeValues[n]))}l()}function s(){for(var e=0,t=xe.length;t>e;e++)xe[e]=0}function h(e){xe[e]=1,0===He[e]&&(W.enableVertexAttribArray(e),He[e]=1)}function l(){for(var e=0,t=He.length;t>e;e++)He[e]!==xe[e]&&(W.disableVertexAttribArray(e),He[e]=0)}function c(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function u(e,t){return t[0]-e[0]}function p(e,t,r){if(e.length)for(var i=0,n=e.length;n>i;i++)re=J=null,ee=te=oe=ne=ue=ce=ae=-1,Ce=!0,e[i].render(t,r,ye,Re),re=J=null,ee=te=oe=ne=ue=ce=ae=-1,Ce=!0}function f(e,t,r,i,n,o,a,s){var h,l,c,u;t?(l=e.length-1,u=t=-1):(l=0,t=e.length,u=1);for(var p=l;p!==t;p+=u)if(h=e[p],h.render){if(l=h.object,c=h.buffer,s)h=s;else{if(h=h[r],!h)continue;a&&Z.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Z.setDepthTest(h.depthTest),Z.setDepthWrite(h.depthWrite),M(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Z.setMaterialFaces(h),c instanceof THREE.BufferGeometry?Z.renderBufferDirect(i,n,o,h,c,l):Z.renderBuffer(i,n,o,h,c,l)}}function E(e,t,r,i,n,o,a){for(var s,h,l=0,c=e.length;c>l;l++)if(s=e[l],h=s.object,h.visible){if(a)s=a;else{if(s=s[t],!s)continue;o&&Z.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),Z.setDepthTest(s.depthTest),Z.setDepthWrite(s.depthWrite),M(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Z.renderImmediateObject(r,i,n,s,h)}}function d(e,i){var n,o,a;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,o=e.geometry,void 0!==o&&void 0===o.__webglInit))if(o.__webglInit=!0,o.addEventListener("dispose",Ge),o instanceof THREE.BufferGeometry)for(a in o.attributes){var s="index"===a?W.ELEMENT_ARRAY_BUFFER:W.ARRAY_BUFFER,h=o.attributes[a];h.buffer=W.createBuffer(),W.bindBuffer(s,h.buffer),W.bufferData(s,h.array,W.STATIC_DRAW)}else if(e instanceof THREE.Mesh){for(n in a=e.material,void 0===o.geometryGroups&&o.makeGroups(a instanceof THREE.MeshFaceMaterial,K?4294967296:65535),o.geometryGroups)if(a=o.geometryGroups[n],!a.__webglVertexBuffer){s=a,s.__webglVertexBuffer=W.createBuffer(),s.__webglNormalBuffer=W.createBuffer(),s.__webglTangentBuffer=W.createBuffer(),s.__webglColorBuffer=W.createBuffer(),s.__webglUVBuffer=W.createBuffer(),s.__webglUV2Buffer=W.createBuffer(),s.__webglSkinIndicesBuffer=W.createBuffer(),s.__webglSkinWeightsBuffer=W.createBuffer(),s.__webglFaceBuffer=W.createBuffer(),s.__webglLineBuffer=W.createBuffer();var l=h=void 0;if(s.numMorphTargets)for(s.__webglMorphTargetsBuffers=[],h=0,l=s.numMorphTargets;l>h;h++)s.__webglMorphTargetsBuffers.push(W.createBuffer());if(s.numMorphNormals)for(s.__webglMorphNormalsBuffers=[],h=0,l=s.numMorphNormals;l>h;h++)s.__webglMorphNormalsBuffers.push(W.createBuffer());Z.info.memory.geometries++,r(a,e),o.verticesNeedUpdate=!0,o.morphTargetsNeedUpdate=!0,o.elementsNeedUpdate=!0,o.uvsNeedUpdate=!0,o.normalsNeedUpdate=!0,o.tangentsNeedUpdate=!0,o.colorsNeedUpdate=!0}}else e instanceof THREE.Line?o.__webglVertexBuffer||(a=o,a.__webglVertexBuffer=W.createBuffer(),a.__webglColorBuffer=W.createBuffer(),a.__webglLineDistanceBuffer=W.createBuffer(),Z.info.memory.geometries++,a=o,s=a.vertices.length,a.__vertexArray=new Float32Array(3*s),a.__colorArray=new Float32Array(3*s),a.__lineDistanceArray=new Float32Array(1*s),a.__webglLineCount=s,t(a,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0,o.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&!o.__webglVertexBuffer&&(a=o,a.__webglVertexBuffer=W.createBuffer(),a.__webglColorBuffer=W.createBuffer(),Z.info.memory.geometries++,a=o,s=a.vertices.length,a.__vertexArray=new Float32Array(3*s),a.__colorArray=new Float32Array(3*s),a.__sortArray=[],a.__webglParticleCount=s,t(a,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0);if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(o=e.geometry,o instanceof THREE.BufferGeometry)m(i.__webglObjects,o,e);else if(o instanceof THREE.Geometry)for(n in o.geometryGroups)a=o.geometryGroups[n],m(i.__webglObjects,a,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(o=e.geometry,m(i.__webglObjects,o,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?i.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0}):e instanceof THREE.Sprite?i.__webglSprites.push(e):e instanceof THREE.LensFlare&&i.__webglFlares.push(e);e.__webglActive=!0}}function m(e,t,r){e.push({id:null,buffer:t,object:r,opaque:null,transparent:null,z:0})}function g(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function T(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function v(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?y(t.__webglObjects,e):e instanceof THREE.Sprite?R(t.__webglSprites,e):e instanceof THREE.LensFlare?R(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&y(t.__webglObjectsImmediate,e),delete e.__webglActive}function y(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function R(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function x(e,t,r,i,n){ie=0,i.needsUpdate&&(i.program&&Ye(i),Z.initMaterial(i,t,r,n),i.needsUpdate=!1),i.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(Z.maxMorphTargets));var o=!1,a=i.program,s=a.uniforms,h=i.uniforms;if(a.id!==J&&(W.useProgram(a.program),J=a.id,o=!0),i.id!==ee&&(ee=i.id,o=!0),(o||e!==re)&&(W.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),k&&W.uniform1f(s.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==re&&(re=e)),i.skinning)if(Ve&&n.skeleton.useVertexTexture){if(null!==s.boneTexture){var l=H();W.uniform1i(s.boneTexture,l),Z.setTexture(n.skeleton.boneTexture,l)}null!==s.boneTextureWidth&&W.uniform1i(s.boneTextureWidth,n.skeleton.boneTextureWidth),null!==s.boneTextureHeight&&W.uniform1i(s.boneTextureHeight,n.skeleton.boneTextureHeight)}else null!==s.boneGlobalMatrices&&W.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.skeleton.boneMatrices);if(o){if(r&&i.fog&&(h.fogColor.value=r.color,r instanceof THREE.Fog?(h.fogNear.value=r.near,h.fogFar.value=r.far):r instanceof THREE.FogExp2&&(h.fogDensity.value=r.density)),i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(Ce){var c,u,p,f,E=l=0,d=0,m=Ae,g=m.directional.colors,T=m.directional.positions,v=m.point.colors,y=m.point.positions,R=m.point.distances,x=m.spot.colors,w=m.spot.positions,M=m.spot.distances,C=m.spot.directions,A=m.spot.anglesCos,D=m.spot.exponents,F=m.hemi.skyColors,U=m.hemi.groundColors,V=m.hemi.positions,z=0,B=0,O=0,N=0,I=0,G=0,j=0,X=0,q=c=0;for(r=f=q=0,o=t.length;o>r;r++)c=t[r],c.onlyShadow||(u=c.color,p=c.intensity,f=c.distance,c instanceof THREE.AmbientLight?c.visible&&(Z.gammaInput?(l+=u.r*u.r,E+=u.g*u.g,d+=u.b*u.b):(l+=u.r,E+=u.g,d+=u.b)):c instanceof THREE.DirectionalLight?(I+=1,c.visible&&(Se.setFromMatrixPosition(c.matrixWorld),Me.setFromMatrixPosition(c.target.matrixWorld),Se.sub(Me),Se.normalize(),0!==Se.x||0!==Se.y||0!==Se.z)&&(c=3*z,T[c]=Se.x,T[c+1]=Se.y,T[c+2]=Se.z,Z.gammaInput?_(g,c,u,p*p):b(g,c,u,p),z+=1)):c instanceof THREE.PointLight?(G+=1,c.visible&&(q=3*B,Z.gammaInput?_(v,q,u,p*p):b(v,q,u,p),Me.setFromMatrixPosition(c.matrixWorld),y[q]=Me.x,y[q+1]=Me.y,y[q+2]=Me.z,R[B]=f,B+=1)):c instanceof THREE.SpotLight?(j+=1,c.visible&&(q=3*O,Z.gammaInput?_(x,q,u,p*p):b(x,q,u,p),Me.setFromMatrixPosition(c.matrixWorld),w[q]=Me.x,w[q+1]=Me.y,w[q+2]=Me.z,M[O]=f,Se.copy(Me),Me.setFromMatrixPosition(c.target.matrixWorld),Se.sub(Me),Se.normalize(),C[q]=Se.x,C[q+1]=Se.y,C[q+2]=Se.z,A[O]=Math.cos(c.angle),D[O]=c.exponent,O+=1)):c instanceof THREE.HemisphereLight&&(X+=1,c.visible&&(Se.setFromMatrixPosition(c.matrixWorld),Se.normalize(),0!==Se.x||0!==Se.y||0!==Se.z))&&(f=3*N,V[f]=Se.x,V[f+1]=Se.y,V[f+2]=Se.z,u=c.color,c=c.groundColor,Z.gammaInput?(p*=p,_(F,f,u,p),_(U,f,c,p)):(b(F,f,u,p),b(U,f,c,p)),N+=1));for(r=3*z,o=Math.max(g.length,3*I);o>r;r++)g[r]=0;for(r=3*B,o=Math.max(v.length,3*G);o>r;r++)v[r]=0;for(r=3*O,o=Math.max(x.length,3*j);o>r;r++)x[r]=0;for(r=3*N,o=Math.max(F.length,3*X);o>r;r++)F[r]=0;for(r=3*N,o=Math.max(U.length,3*X);o>r;r++)U[r]=0;m.directional.length=z,m.point.length=B,m.spot.length=O,m.hemi.length=N,m.ambient[0]=l,m.ambient[1]=E,m.ambient[2]=d,Ce=!1}r=Ae,h.ambientLightColor.value=r.ambient,h.directionalLightColor.value=r.directional.colors,h.directionalLightDirection.value=r.directional.positions,h.pointLightColor.value=r.point.colors,h.pointLightPosition.value=r.point.positions,h.pointLightDistance.value=r.point.distances,h.spotLightColor.value=r.spot.colors,h.spotLightPosition.value=r.spot.positions,h.spotLightDistance.value=r.spot.distances,h.spotLightDirection.value=r.spot.directions,h.spotLightAngleCos.value=r.spot.anglesCos,h.spotLightExponent.value=r.spot.exponents,h.hemisphereLightSkyColor.value=r.hemi.skyColors,h.hemisphereLightGroundColor.value=r.hemi.groundColors,h.hemisphereLightDirection.value=r.hemi.positions}if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial){h.opacity.value=i.opacity,Z.gammaInput?h.diffuse.value.copyGammaToLinear(i.color):h.diffuse.value=i.color,h.map.value=i.map,h.lightMap.value=i.lightMap,h.specularMap.value=i.specularMap,i.bumpMap&&(h.bumpMap.value=i.bumpMap,h.bumpScale.value=i.bumpScale),i.normalMap&&(h.normalMap.value=i.normalMap,h.normalScale.value.copy(i.normalScale));var Y;i.map?Y=i.map:i.specularMap?Y=i.specularMap:i.normalMap?Y=i.normalMap:i.bumpMap&&(Y=i.bumpMap),void 0!==Y&&(r=Y.offset,Y=Y.repeat,h.offsetRepeat.value.set(r.x,r.y,Y.x,Y.y)),h.envMap.value=i.envMap,h.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=i.reflectivity,h.refractionRatio.value=i.refractionRatio,h.combine.value=i.combine,h.useRefract.value=i.envMap&&i.envMap.mapping instanceof THREE.CubeRefractionMapping}if(i instanceof THREE.LineBasicMaterial?(h.diffuse.value=i.color,h.opacity.value=i.opacity):i instanceof THREE.LineDashedMaterial?(h.diffuse.value=i.color,h.opacity.value=i.opacity,h.dashSize.value=i.dashSize,h.totalSize.value=i.dashSize+i.gapSize,h.scale.value=i.scale):i instanceof THREE.ParticleSystemMaterial?(h.psColor.value=i.color,h.opacity.value=i.opacity,h.size.value=i.size,h.scale.value=P.height/2,h.map.value=i.map):i instanceof THREE.MeshPhongMaterial?(h.shininess.value=i.shininess,Z.gammaInput?(h.ambient.value.copyGammaToLinear(i.ambient),h.emissive.value.copyGammaToLinear(i.emissive),h.specular.value.copyGammaToLinear(i.specular)):(h.ambient.value=i.ambient,h.emissive.value=i.emissive,h.specular.value=i.specular),i.wrapAround&&h.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(Z.gammaInput?(h.ambient.value.copyGammaToLinear(i.ambient),h.emissive.value.copyGammaToLinear(i.emissive)):(h.ambient.value=i.ambient,h.emissive.value=i.emissive),i.wrapAround&&h.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(h.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&h.shadowMatrix)for(r=Y=0,o=t.length;o>r;r++)l=t[r],l.castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(h.shadowMap.value[Y]=l.shadowMap,h.shadowMapSize.value[Y]=l.shadowMapSize,h.shadowMatrix.value[Y]=l.shadowMatrix,h.shadowDarkness.value[Y]=l.shadowDarkness,h.shadowBias.value[Y]=l.shadowBias,Y++);for(t=i.uniformsList,h=0,Y=t.length;Y>h;h++)if(o=a.uniforms[t[h][1]])if(r=t[h][0],E=r.type,l=r.value,"i"===E)W.uniform1i(o,l);else if("f"===E)W.uniform1f(o,l);else if("v2"===E)W.uniform2f(o,l.x,l.y);else if("v3"===E)W.uniform3f(o,l.x,l.y,l.z);else if("v4"===E)W.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===E)W.uniform3f(o,l.r,l.g,l.b);else if("iv1"===E)W.uniform1iv(o,l);else if("iv"===E)W.uniform3iv(o,l);else if("fv1"===E)W.uniform1fv(o,l);else if("fv"===E)W.uniform3fv(o,l);else if("v2v"===E){
for(void 0===r._array&&(r._array=new Float32Array(2*l.length)),E=0,d=l.length;d>E;E++)m=2*E,r._array[m]=l[E].x,r._array[m+1]=l[E].y;W.uniform2fv(o,r._array)}else if("v3v"===E){for(void 0===r._array&&(r._array=new Float32Array(3*l.length)),E=0,d=l.length;d>E;E++)m=3*E,r._array[m]=l[E].x,r._array[m+1]=l[E].y,r._array[m+2]=l[E].z;W.uniform3fv(o,r._array)}else if("v4v"===E){for(void 0===r._array&&(r._array=new Float32Array(4*l.length)),E=0,d=l.length;d>E;E++)m=4*E,r._array[m]=l[E].x,r._array[m+1]=l[E].y,r._array[m+2]=l[E].z,r._array[m+3]=l[E].w;W.uniform4fv(o,r._array)}else if("m3"===E)W.uniformMatrix3fv(o,!1,l.elements);else if("m3v"===E){for(void 0===r._array&&(r._array=new Float32Array(9*l.length)),E=0,d=l.length;d>E;E++)l[E].flattenToArrayOffset(r._array,9*E);W.uniformMatrix3fv(o,!1,r._array)}else if("m4"===E)W.uniformMatrix4fv(o,!1,l.elements);else if("m4v"===E){for(void 0===r._array&&(r._array=new Float32Array(16*l.length)),E=0,d=l.length;d>E;E++)l[E].flattenToArrayOffset(r._array,16*E);W.uniformMatrix4fv(o,!1,r._array)}else if("t"===E){if(m=l,l=H(),W.uniform1i(o,l),m)if(m.image instanceof Array&&6===m.image.length){if(r=m,o=l,6===r.image.length)if(r.needsUpdate){for(r.image.__webglTextureCube||(r.addEventListener("dispose",We),r.image.__webglTextureCube=W.createTexture(),Z.info.memory.textures++),W.activeTexture(W.TEXTURE0+o),W.bindTexture(W.TEXTURE_CUBE_MAP,r.image.__webglTextureCube),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,r.flipY),o=r instanceof THREE.CompressedTexture,l=[],E=0;6>E;E++)Z.autoScaleCubemaps&&!o?(d=l,m=E,g=r.image[E],v=De,g.width<=v&&g.height<=v||(y=Math.max(g.width,g.height),T=Math.floor(g.width*v/y),v=Math.floor(g.height*v/y),y=document.createElement("canvas"),y.width=T,y.height=v,y.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,T,v),g=y),d[m]=g):l[E]=r.image[E];for(E=l[0],d=THREE.Math.isPowerOfTwo(E.width)&&THREE.Math.isPowerOfTwo(E.height),m=L(r.format),g=L(r.type),S(W.TEXTURE_CUBE_MAP,r,d),E=0;6>E;E++)if(o)for(v=l[E].mipmaps,y=0,R=v.length;R>y;y++)T=v[y],r.format!==THREE.RGBAFormat?W.compressedTexImage2D(W.TEXTURE_CUBE_MAP_POSITIVE_X+E,y,m,T.width,T.height,0,T.data):W.texImage2D(W.TEXTURE_CUBE_MAP_POSITIVE_X+E,y,m,T.width,T.height,0,m,g,T.data);else W.texImage2D(W.TEXTURE_CUBE_MAP_POSITIVE_X+E,0,m,m,g,l[E]);r.generateMipmaps&&d&&W.generateMipmap(W.TEXTURE_CUBE_MAP),r.needsUpdate=!1,r.onUpdate&&r.onUpdate()}else W.activeTexture(W.TEXTURE0+o),W.bindTexture(W.TEXTURE_CUBE_MAP,r.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(r=m,W.activeTexture(W.TEXTURE0+l),W.bindTexture(W.TEXTURE_CUBE_MAP,r.__webglTexture)):Z.setTexture(m,l)}else if("tv"===E){for(void 0===r._array&&(r._array=[]),E=0,d=r.value.length;d>E;E++)r._array[E]=H();for(W.uniform1iv(o,r._array),E=0,d=r.value.length;d>E;E++)m=r.value[E],l=r._array[E],m&&Z.setTexture(m,l)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+E);(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==s.cameraPosition&&(Me.setFromMatrixPosition(e.matrixWorld),W.uniform3f(s.cameraPosition,Me.x,Me.y,Me.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==s.viewMatrix&&W.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return W.uniformMatrix4fv(s.modelViewMatrix,!1,n._modelViewMatrix.elements),s.normalMatrix&&W.uniformMatrix3fv(s.normalMatrix,!1,n._normalMatrix.elements),null!==s.modelMatrix&&W.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function H(){var e=ie;return e>=Le&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Le),ie+=1,e}function _(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function b(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function w(e){e!==de&&(W.lineWidth(e),de=e)}function M(e,t,r){pe!==e&&(e?W.enable(W.POLYGON_OFFSET_FILL):W.disable(W.POLYGON_OFFSET_FILL),pe=e),!e||fe===t&&Ee===r||(W.polygonOffset(t,r),fe=t,Ee=r)}function S(e,t,r){r?(W.texParameteri(e,W.TEXTURE_WRAP_S,L(t.wrapS)),W.texParameteri(e,W.TEXTURE_WRAP_T,L(t.wrapT)),W.texParameteri(e,W.TEXTURE_MAG_FILTER,L(t.magFilter)),W.texParameteri(e,W.TEXTURE_MIN_FILTER,L(t.minFilter))):(W.texParameteri(e,W.TEXTURE_WRAP_S,W.CLAMP_TO_EDGE),W.texParameteri(e,W.TEXTURE_WRAP_T,W.CLAMP_TO_EDGE),W.texParameteri(e,W.TEXTURE_MAG_FILTER,A(t.magFilter)),W.texParameteri(e,W.TEXTURE_MIN_FILTER,A(t.minFilter))),q&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(W.texParameterf(e,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Fe)),t.__oldAnisotropy=t.anisotropy)}function C(e,t){W.bindRenderbuffer(W.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(W.renderbufferStorage(W.RENDERBUFFER,W.DEPTH_COMPONENT16,t.width,t.height),W.framebufferRenderbuffer(W.FRAMEBUFFER,W.DEPTH_ATTACHMENT,W.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(W.renderbufferStorage(W.RENDERBUFFER,W.DEPTH_STENCIL,t.width,t.height),W.framebufferRenderbuffer(W.FRAMEBUFFER,W.DEPTH_STENCIL_ATTACHMENT,W.RENDERBUFFER,e)):W.renderbufferStorage(W.RENDERBUFFER,W.RGBA4,t.width,t.height)}function A(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?W.NEAREST:W.LINEAR}function L(e){if(e===THREE.RepeatWrapping)return W.REPEAT;if(e===THREE.ClampToEdgeWrapping)return W.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return W.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return W.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return W.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return W.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return W.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return W.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return W.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return W.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return W.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return W.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return W.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return W.BYTE;if(e===THREE.ShortType)return W.SHORT;if(e===THREE.UnsignedShortType)return W.UNSIGNED_SHORT;if(e===THREE.IntType)return W.INT;if(e===THREE.UnsignedIntType)return W.UNSIGNED_INT;if(e===THREE.FloatType)return W.FLOAT;if(e===THREE.AlphaFormat)return W.ALPHA;if(e===THREE.RGBFormat)return W.RGB;if(e===THREE.RGBAFormat)return W.RGBA;if(e===THREE.LuminanceFormat)return W.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return W.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return W.FUNC_ADD;if(e===THREE.SubtractEquation)return W.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return W.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return W.ZERO;if(e===THREE.OneFactor)return W.ONE;if(e===THREE.SrcColorFactor)return W.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return W.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return W.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return W.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return W.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return W.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return W.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return W.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return W.SRC_ALPHA_SATURATE;if(void 0!==Y){if(e===THREE.RGB_S3TC_DXT1_Format)return Y.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Y.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Y.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Y.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var P=void 0!==e.canvas?e.canvas:document.createElement("canvas"),D=void 0!==e.context?e.context:null,F=void 0!==e.precision?e.precision:"highp",U=void 0!==e.alpha?e.alpha:!1,V=void 0!==e.depth?e.depth:!0,z=void 0!==e.stencil?e.stencil:!0,B=void 0!==e.antialias?e.antialias:!1,O=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,N=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,k=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,I=new THREE.Color(0),G=0;this.domElement=P,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var W,j,X,q,Y,K,Z=this,Q=[],J=null,$=null,ee=-1,te=null,re=null,ie=0,ne=-1,oe=-1,ae=-1,se=-1,he=-1,le=-1,ce=-1,ue=-1,pe=null,fe=null,Ee=null,de=null,me=0,ge=0,Te=P.width,ve=P.height,ye=0,Re=0,xe=new Uint8Array(16),He=new Uint8Array(16),_e=new THREE.Frustum,be=new THREE.Matrix4,we=new THREE.Matrix4,Me=new THREE.Vector3,Se=new THREE.Vector3,Ce=!0,Ae={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var e={alpha:U,depth:V,stencil:z,antialias:B,premultipliedAlpha:O,preserveDrawingBuffer:N};if(W=D||P.getContext("webgl",e)||P.getContext("experimental-webgl",e),null===W)throw"Error creating WebGL context."}catch(t){console.error(t)}j=W.getExtension("OES_texture_float"),W.getExtension("OES_texture_float_linear"),X=W.getExtension("OES_standard_derivatives"),q=W.getExtension("EXT_texture_filter_anisotropic")||W.getExtension("MOZ_EXT_texture_filter_anisotropic")||W.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Y=W.getExtension("WEBGL_compressed_texture_s3tc")||W.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||W.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),K=W.getExtension("OES_element_index_uint"),null===j&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===X&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===q&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===Y&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===K&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===W.getShaderPrecisionFormat&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),k&&W.getExtension("EXT_frag_depth")}(),W.clearColor(0,0,0,1),W.clearDepth(1),W.clearStencil(0),W.enable(W.DEPTH_TEST),W.depthFunc(W.LEQUAL),W.frontFace(W.CCW),W.cullFace(W.BACK),W.enable(W.CULL_FACE),W.enable(W.BLEND),W.blendEquation(W.FUNC_ADD),W.blendFunc(W.SRC_ALPHA,W.ONE_MINUS_SRC_ALPHA),W.viewport(me,ge,Te,ve),W.clearColor(I.r,I.g,I.b,G),this.context=W;var Le=W.getParameter(W.MAX_TEXTURE_IMAGE_UNITS),Pe=W.getParameter(W.MAX_VERTEX_TEXTURE_IMAGE_UNITS);W.getParameter(W.MAX_TEXTURE_SIZE);var De=W.getParameter(W.MAX_CUBE_MAP_TEXTURE_SIZE),Fe=q?W.getParameter(q.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ue=Pe>0,Ve=Ue&&j;Y&&W.getParameter(W.COMPRESSED_TEXTURE_FORMATS);var ze=W.getShaderPrecisionFormat(W.VERTEX_SHADER,W.HIGH_FLOAT),Be=W.getShaderPrecisionFormat(W.VERTEX_SHADER,W.MEDIUM_FLOAT);W.getShaderPrecisionFormat(W.VERTEX_SHADER,W.LOW_FLOAT);var Oe=W.getShaderPrecisionFormat(W.FRAGMENT_SHADER,W.HIGH_FLOAT),Ne=W.getShaderPrecisionFormat(W.FRAGMENT_SHADER,W.MEDIUM_FLOAT);W.getShaderPrecisionFormat(W.FRAGMENT_SHADER,W.LOW_FLOAT);var ke=0<ze.precision&&0<Oe.precision,Ie=0<Be.precision&&0<Ne.precision;"highp"!==F||ke||(Ie?(F="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(F="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==F||Ie||(F="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return W},this.supportsVertexTextures=function(){return Ue},this.supportsFloatTextures=function(){return j},this.supportsStandardDerivatives=function(){return X},this.supportsCompressedTextureS3TC=function(){return Y},this.getMaxAnisotropy=function(){return Fe},this.getPrecision=function(){return F},this.setSize=function(e,t,r){P.width=e*this.devicePixelRatio,P.height=t*this.devicePixelRatio,!1!==r&&(P.style.width=e+"px",P.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){me=e*this.devicePixelRatio,ge=t*this.devicePixelRatio,Te=r*this.devicePixelRatio,ve=i*this.devicePixelRatio,W.viewport(me,ge,Te,ve)},this.setScissor=function(e,t,r,i){W.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(e){e?W.enable(W.SCISSOR_TEST):W.disable(W.SCISSOR_TEST)},this.setClearColor=function(e,t){I.set(e),G=void 0!==t?t:1,W.clearColor(I.r,I.g,I.b,G)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return G},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=W.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=W.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=W.STENCIL_BUFFER_BIT),W.clear(i)},this.clearColor=function(){W.clear(W.COLOR_BUFFER_BIT)},this.clearDepth=function(){W.clear(W.DEPTH_BUFFER_BIT)},this.clearStencil=function(){W.clear(W.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){J=null,ee=te=ue=ce=ae=-1,Ce=!0,oe=ne=-1,this.shadowMapPlugin.update(e,t)};var Ge=function(e){if(e=e.target,e.removeEventListener("dispose",Ge),e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t,r=e.attributes;for(t in r)void 0!==r[t].buffer&&W.deleteBuffer(r[t].buffer);Z.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(r in e.geometryGroups){if(t=e.geometryGroups[r],void 0!==t.numMorphTargets)for(var i=0,n=t.numMorphTargets;n>i;i++)W.deleteBuffer(t.__webglMorphTargetsBuffers[i]);if(void 0!==t.numMorphNormals)for(i=0,n=t.numMorphNormals;n>i;i++)W.deleteBuffer(t.__webglMorphNormalsBuffers[i]);qe(t)}else qe(e)},We=function(e){e=e.target,e.removeEventListener("dispose",We),e.image&&e.image.__webglTextureCube?W.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,W.deleteTexture(e.__webglTexture)),Z.info.memory.textures--},je=function(e){if(e=e.target,e.removeEventListener("dispose",je),e&&e.__webglTexture)if(W.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)W.deleteFramebuffer(e.__webglFramebuffer[t]),W.deleteRenderbuffer(e.__webglRenderbuffer[t]);else W.deleteFramebuffer(e.__webglFramebuffer),W.deleteRenderbuffer(e.__webglRenderbuffer);Z.info.memory.textures--},Xe=function(e){e=e.target,e.removeEventListener("dispose",Xe),Ye(e)},qe=function(e){if(void 0!==e.__webglVertexBuffer&&W.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&W.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&W.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&W.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&W.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&W.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&W.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&W.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&W.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&W.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&W.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)W.deleteBuffer(e.__webglCustomAttributesList[t].buffer);Z.info.memory.geometries--},Ye=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var r,i,n=!1;for(e=0,r=Q.length;r>e;e++)if(i=Q[e],i.program===t){i.usedTimes--,0===i.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,r=Q.length;r>e;e++)i=Q[e],i.program!==t&&n.push(i);Q=n,W.deleteProgram(t),Z.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(s(),e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=W.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=W.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=W.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=W.createBuffer()),e.hasPositions&&(W.bindBuffer(W.ARRAY_BUFFER,e.__webglVertexBuffer),W.bufferData(W.ARRAY_BUFFER,e.positionArray,W.DYNAMIC_DRAW),h(t.attributes.position),W.vertexAttribPointer(t.attributes.position,3,W.FLOAT,!1,0,0)),e.hasNormals){if(W.bindBuffer(W.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,o,a,c,u,p,f,E,d,m,g=3*e.count;for(m=0;g>m;m+=9)d=e.normalArray,i=d[m],n=d[m+1],o=d[m+2],a=d[m+3],u=d[m+4],f=d[m+5],c=d[m+6],p=d[m+7],E=d[m+8],i=(i+a+c)/3,n=(n+u+p)/3,o=(o+f+E)/3,d[m]=i,d[m+1]=n,d[m+2]=o,d[m+3]=i,d[m+4]=n,d[m+5]=o,d[m+6]=i,d[m+7]=n,d[m+8]=o}W.bufferData(W.ARRAY_BUFFER,e.normalArray,W.DYNAMIC_DRAW),h(t.attributes.normal),W.vertexAttribPointer(t.attributes.normal,3,W.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(W.bindBuffer(W.ARRAY_BUFFER,e.__webglUvBuffer),W.bufferData(W.ARRAY_BUFFER,e.uvArray,W.DYNAMIC_DRAW),h(t.attributes.uv),W.vertexAttribPointer(t.attributes.uv,2,W.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(W.bindBuffer(W.ARRAY_BUFFER,e.__webglColorBuffer),W.bufferData(W.ARRAY_BUFFER,e.colorArray,W.DYNAMIC_DRAW),h(t.attributes.color),W.vertexAttribPointer(t.attributes.color,3,W.FLOAT,!1,0,0)),l(),W.drawArrays(W.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,o){if(!1!==i.visible){var h=x(e,t,r,i,o);if(e=h.attributes,t=n.attributes,r=!1,h=16777215*n.id+2*h.id+(i.wireframe?1:0),h!==te&&(te=h,r=!0),r&&s(),o instanceof THREE.Mesh)if(o=t.index){var l;if(o.array instanceof Uint32Array?(h=W.UNSIGNED_INT,l=4):(h=W.UNSIGNED_SHORT,l=2),n=n.offsets,0===n.length)r&&(a(i,e,t,0),W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,o.buffer)),W.drawElements(W.TRIANGLES,o.array.length,h,0),Z.info.render.calls++,Z.info.render.vertices+=o.array.length,Z.info.render.faces+=o.array.length/3;else{r=!0;for(var c=0,u=n.length;u>c;c++){var p=n[c].index;r&&(a(i,e,t,p),W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,o.buffer)),W.drawElements(W.TRIANGLES,n[c].count,h,n[c].start*l),Z.info.render.calls++,Z.info.render.vertices+=n[c].count,Z.info.render.faces+=n[c].count/3}}}else r&&a(i,e,t,0),i=n.attributes.position,W.drawArrays(W.TRIANGLES,0,i.array.length/3),Z.info.render.calls++,Z.info.render.vertices+=i.array.length/3,Z.info.render.faces+=i.array.length/9;else if(o instanceof THREE.ParticleSystem)r&&a(i,e,t,0),i=t.position,W.drawArrays(W.POINTS,0,i.array.length/3),Z.info.render.calls++,Z.info.render.points+=i.array.length/3;else if(o instanceof THREE.Line)if(h=o.type===THREE.LineStrip?W.LINE_STRIP:W.LINES,w(i.linewidth),o=t.index)if(o.array instanceof Uint32Array?(h=W.UNSIGNED_INT,l=4):(h=W.UNSIGNED_SHORT,l=2),n=n.offsets,0===n.length)r&&(a(i,e,t,0),W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,o.buffer)),W.drawElements(W.LINES,o.array.length,h,0),Z.info.render.calls++,Z.info.render.vertices+=o.array.length;else for(1<n.length&&(r=!0),c=0,u=n.length;u>c;c++)p=n[c].index,r&&(a(i,e,t,p),W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,o.buffer)),W.drawElements(W.LINES,n[c].count,h,n[c].start*l),Z.info.render.calls++,Z.info.render.vertices+=n[c].count;else r&&a(i,e,t,0),i=t.position,W.drawArrays(h,0,i.array.length/3),Z.info.render.calls++,Z.info.render.points+=i.array.length/3}},this.renderBuffer=function(e,t,r,i,n,o){if(!1!==i.visible){var a,c;if(r=x(e,t,r,i,o),t=r.attributes,e=!1,r=16777215*n.id+2*r.id+(i.wireframe?1:0),r!==te&&(te=r,e=!0),e&&s(),!i.morphTargets&&0<=t.position)e&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglVertexBuffer),h(t.position),W.vertexAttribPointer(t.position,3,W.FLOAT,!1,0,0));else if(o.morphTargetBase){if(r=i.program.attributes,-1!==o.morphTargetBase&&0<=r.position?(W.bindBuffer(W.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),h(r.position),W.vertexAttribPointer(r.position,3,W.FLOAT,!1,0,0)):0<=r.position&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglVertexBuffer),h(r.position),W.vertexAttribPointer(r.position,3,W.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var p=0;for(c=o.morphTargetForcedOrder,a=o.morphTargetInfluences;p<i.numSupportedMorphTargets&&p<c.length;)0<=r["morphTarget"+p]&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[c[p]]),h(r["morphTarget"+p]),W.vertexAttribPointer(r["morphTarget"+p],3,W.FLOAT,!1,0,0)),0<=r["morphNormal"+p]&&i.morphNormals&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[c[p]]),h(r["morphNormal"+p]),W.vertexAttribPointer(r["morphNormal"+p],3,W.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[p]=a[c[p]],p++}else{c=[],a=o.morphTargetInfluences;var f,E=a.length;for(f=0;E>f;f++)p=a[f],p>0&&c.push([p,f]);for(c.length>i.numSupportedMorphTargets?(c.sort(u),c.length=i.numSupportedMorphTargets):c.length>i.numSupportedMorphNormals?c.sort(u):0===c.length&&c.push([0,0]),p=0;p<i.numSupportedMorphTargets;)c[p]?(f=c[p][1],0<=r["morphTarget"+p]&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[f]),h(r["morphTarget"+p]),W.vertexAttribPointer(r["morphTarget"+p],3,W.FLOAT,!1,0,0)),0<=r["morphNormal"+p]&&i.morphNormals&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[f]),h(r["morphNormal"+p]),W.vertexAttribPointer(r["morphNormal"+p],3,W.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[p]=a[f]):o.__webglMorphTargetInfluences[p]=0,p++}null!==i.program.uniforms.morphTargetInfluences&&W.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(e){if(n.__webglCustomAttributesList)for(a=0,c=n.__webglCustomAttributesList.length;c>a;a++)r=n.__webglCustomAttributesList[a],0<=t[r.buffer.belongsToAttribute]&&(W.bindBuffer(W.ARRAY_BUFFER,r.buffer),h(t[r.buffer.belongsToAttribute]),W.vertexAttribPointer(t[r.buffer.belongsToAttribute],r.size,W.FLOAT,!1,0,0));0<=t.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(W.bindBuffer(W.ARRAY_BUFFER,n.__webglColorBuffer),h(t.color),W.vertexAttribPointer(t.color,3,W.FLOAT,!1,0,0)):i.defaultAttributeValues&&W.vertexAttrib3fv(t.color,i.defaultAttributeValues.color)),0<=t.normal&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglNormalBuffer),h(t.normal),W.vertexAttribPointer(t.normal,3,W.FLOAT,!1,0,0)),0<=t.tangent&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglTangentBuffer),h(t.tangent),W.vertexAttribPointer(t.tangent,4,W.FLOAT,!1,0,0)),0<=t.uv&&(o.geometry.faceVertexUvs[0]?(W.bindBuffer(W.ARRAY_BUFFER,n.__webglUVBuffer),h(t.uv),W.vertexAttribPointer(t.uv,2,W.FLOAT,!1,0,0)):i.defaultAttributeValues&&W.vertexAttrib2fv(t.uv,i.defaultAttributeValues.uv)),0<=t.uv2&&(o.geometry.faceVertexUvs[1]?(W.bindBuffer(W.ARRAY_BUFFER,n.__webglUV2Buffer),h(t.uv2),W.vertexAttribPointer(t.uv2,2,W.FLOAT,!1,0,0)):i.defaultAttributeValues&&W.vertexAttrib2fv(t.uv2,i.defaultAttributeValues.uv2)),i.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),h(t.skinIndex),W.vertexAttribPointer(t.skinIndex,4,W.FLOAT,!1,0,0),W.bindBuffer(W.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),h(t.skinWeight),W.vertexAttribPointer(t.skinWeight,4,W.FLOAT,!1,0,0)),0<=t.lineDistance&&(W.bindBuffer(W.ARRAY_BUFFER,n.__webglLineDistanceBuffer),h(t.lineDistance),W.vertexAttribPointer(t.lineDistance,1,W.FLOAT,!1,0,0))}l(),o instanceof THREE.Mesh?(o=n.__typeArray===Uint32Array?W.UNSIGNED_INT:W.UNSIGNED_SHORT,i.wireframe?(w(i.wireframeLinewidth),e&&W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),W.drawElements(W.LINES,n.__webglLineCount,o,0)):(e&&W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),W.drawElements(W.TRIANGLES,n.__webglFaceCount,o,0)),Z.info.render.calls++,Z.info.render.vertices+=n.__webglFaceCount,Z.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?W.LINE_STRIP:W.LINES,w(i.linewidth),W.drawArrays(o,0,n.__webglLineCount),Z.info.render.calls++):o instanceof THREE.ParticleSystem&&(W.drawArrays(W.POINTS,0,n.__webglParticleCount),Z.info.render.calls++,Z.info.render.points+=n.__webglParticleCount)}},this.render=function(e,t,r,i){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a,s,h=e.__lights,l=e.fog;for(ee=-1,Ce=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),be.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),_e.setFromMatrix(be),this.autoUpdateObjects&&this.initWebGLObjects(e),p(this.renderPluginsPre,e,t),Z.info.render.calls=0,Z.info.render.vertices=0,Z.info.render.faces=0,Z.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s=e.__webglObjects,i=0,n=s.length;n>i;i++)if(o=s[i],a=o.object,o.id=i,o.render=!1,a.visible&&(!(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)||!a.frustumCulled||_e.intersectsObject(a))){var u=a;u._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,u.matrixWorld),u._normalMatrix.getNormalMatrix(u._modelViewMatrix);var u=o,d=u.object,m=u.buffer,g=d.geometry,d=d.material;d instanceof THREE.MeshFaceMaterial?(d=d.materials[g instanceof THREE.BufferGeometry?0:m.materialIndex],d.transparent?(u.transparent=d,u.opaque=null):(u.opaque=d,u.transparent=null)):d&&(d.transparent?(u.transparent=d,u.opaque=null):(u.opaque=d,u.transparent=null)),o.render=!0,!0===this.sortObjects&&(null!==a.renderDepth?o.z=a.renderDepth:(Me.setFromMatrixPosition(a.matrixWorld),Me.applyProjection(be),o.z=Me.z))}for(this.sortObjects&&s.sort(c),s=e.__webglObjectsImmediate,i=0,n=s.length;n>i;i++)o=s[i],a=o.object,a.visible&&(a._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix),a=o.object.material,a.transparent?(o.transparent=a,o.opaque=null):(o.opaque=a,o.transparent=null));e.overrideMaterial?(i=e.overrideMaterial,this.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),this.setDepthTest(i.depthTest),this.setDepthWrite(i.depthWrite),M(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),f(e.__webglObjects,!1,"",t,h,l,!0,i),E(e.__webglObjectsImmediate,"",t,h,l,!1,i)):(i=null,this.setBlending(THREE.NoBlending),f(e.__webglObjects,!0,"opaque",t,h,l,!1,i),E(e.__webglObjectsImmediate,"opaque",t,h,l,!1,i),f(e.__webglObjects,!1,"transparent",t,h,l,!0,i),E(e.__webglObjectsImmediate,"transparent",t,h,l,!0,i)),p(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&(r instanceof THREE.WebGLRenderTargetCube?(W.bindTexture(W.TEXTURE_CUBE_MAP,r.__webglTexture),W.generateMipmap(W.TEXTURE_CUBE_MAP),W.bindTexture(W.TEXTURE_CUBE_MAP,null)):(W.bindTexture(W.TEXTURE_2D,r.__webglTexture),W.generateMipmap(W.TEXTURE_2D),W.bindTexture(W.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,r,i,n){var o=x(e,t,r,i,n);te=-1,Z.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,W,_e):n.render(function(e){Z.renderBufferImmediate(e,o,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)d(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)v(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,a=e.__webglObjects.length;a>t;t++){var s=e.__webglObjects[t].object;void 0===s.__webglInit&&(void 0!==s.__webglActive&&v(s,e),d(s,e));var h=s,l=h.geometry,c=void 0,p=void 0,f=void 0;if(l instanceof THREE.BufferGeometry){var E=W.DYNAMIC_DRAW,m=l.attributes,y=void 0,R=void 0;for(y in m)R=m[y],R.needsUpdate&&("index"===y?(W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,R.buffer),W.bufferData(W.ELEMENT_ARRAY_BUFFER,R.array,E)):(W.bindBuffer(W.ARRAY_BUFFER,R.buffer),W.bufferData(W.ARRAY_BUFFER,R.array,E)),R.needsUpdate=!1)}else if(h instanceof THREE.Mesh){for(var x=0,H=l.geometryGroupsList.length;H>x;x++)if(c=l.geometryGroupsList[x],f=i(h,c),l.buffersNeedUpdate&&r(c,h),p=f.attributes&&g(f),l.verticesNeedUpdate||l.morphTargetsNeedUpdate||l.elementsNeedUpdate||l.uvsNeedUpdate||l.normalsNeedUpdate||l.colorsNeedUpdate||l.tangentsNeedUpdate||p){var _=c,b=h,w=W.DYNAMIC_DRAW,M=!l.dynamic,S=f;if(_.__inittedArrays){var C=n(S),A=S.vertexColors?S.vertexColors:!1,L=o(S),P=C===THREE.SmoothShading,D=void 0,F=void 0,U=void 0,V=void 0,z=void 0,B=void 0,O=void 0,N=void 0,k=void 0,I=void 0,G=void 0,j=void 0,X=void 0,q=void 0,Y=void 0,K=void 0,Z=void 0,Q=void 0,J=void 0,$=void 0,ee=void 0,te=void 0,re=void 0,ie=void 0,ne=void 0,oe=void 0,ae=void 0,se=void 0,he=void 0,le=void 0,ce=void 0,ue=void 0,pe=void 0,fe=void 0,Ee=void 0,de=void 0,me=void 0,ge=void 0,Te=void 0,ve=void 0,ye=0,Re=0,xe=0,He=0,_e=0,Se=0,Ce=0,Ae=0,Le=0,Pe=0,De=0,Fe=0,Ue=void 0,Ve=_.__vertexArray,ze=_.__uvArray,Be=_.__uv2Array,Oe=_.__normalArray,Ne=_.__tangentArray,ke=_.__colorArray,Ie=_.__skinIndexArray,Ge=_.__skinWeightArray,We=_.__morphTargetsArrays,je=_.__morphNormalsArrays,Xe=_.__webglCustomAttributesList,qe=void 0,Ye=_.__faceArray,Ke=_.__lineArray,Ze=b.geometry,Qe=Ze.elementsNeedUpdate,Je=Ze.uvsNeedUpdate,$e=Ze.normalsNeedUpdate,et=Ze.tangentsNeedUpdate,tt=Ze.colorsNeedUpdate,rt=Ze.morphTargetsNeedUpdate,it=Ze.vertices,nt=_.faces3,ot=Ze.faces,at=Ze.faceVertexUvs[0],st=Ze.faceVertexUvs[1],ht=Ze.skinIndices,lt=Ze.skinWeights,ct=Ze.morphTargets,ut=Ze.morphNormals;if(Ze.verticesNeedUpdate){for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],j=it[V.a],X=it[V.b],q=it[V.c],Ve[Re]=j.x,Ve[Re+1]=j.y,Ve[Re+2]=j.z,Ve[Re+3]=X.x,Ve[Re+4]=X.y,Ve[Re+5]=X.z,Ve[Re+6]=q.x,Ve[Re+7]=q.y,Ve[Re+8]=q.z,Re+=9;W.bindBuffer(W.ARRAY_BUFFER,_.__webglVertexBuffer),W.bufferData(W.ARRAY_BUFFER,Ve,w)}if(rt)for(Ee=0,de=ct.length;de>Ee;Ee++){for(D=De=0,F=nt.length;F>D;D++)Te=nt[D],V=ot[Te],j=ct[Ee].vertices[V.a],X=ct[Ee].vertices[V.b],q=ct[Ee].vertices[V.c],me=We[Ee],me[De]=j.x,me[De+1]=j.y,me[De+2]=j.z,me[De+3]=X.x,me[De+4]=X.y,me[De+5]=X.z,me[De+6]=q.x,me[De+7]=q.y,me[De+8]=q.z,S.morphNormals&&(P?(ve=ut[Ee].vertexNormals[Te],Q=ve.a,J=ve.b,$=ve.c):$=J=Q=ut[Ee].faceNormals[Te],ge=je[Ee],ge[De]=Q.x,ge[De+1]=Q.y,ge[De+2]=Q.z,ge[De+3]=J.x,ge[De+4]=J.y,ge[De+5]=J.z,ge[De+6]=$.x,ge[De+7]=$.y,ge[De+8]=$.z),De+=9;W.bindBuffer(W.ARRAY_BUFFER,_.__webglMorphTargetsBuffers[Ee]),W.bufferData(W.ARRAY_BUFFER,We[Ee],w),S.morphNormals&&(W.bindBuffer(W.ARRAY_BUFFER,_.__webglMorphNormalsBuffers[Ee]),W.bufferData(W.ARRAY_BUFFER,je[Ee],w))}if(lt.length){for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],ie=lt[V.a],ne=lt[V.b],oe=lt[V.c],Ge[Pe]=ie.x,Ge[Pe+1]=ie.y,Ge[Pe+2]=ie.z,Ge[Pe+3]=ie.w,Ge[Pe+4]=ne.x,Ge[Pe+5]=ne.y,Ge[Pe+6]=ne.z,Ge[Pe+7]=ne.w,Ge[Pe+8]=oe.x,Ge[Pe+9]=oe.y,Ge[Pe+10]=oe.z,Ge[Pe+11]=oe.w,ae=ht[V.a],se=ht[V.b],he=ht[V.c],Ie[Pe]=ae.x,Ie[Pe+1]=ae.y,Ie[Pe+2]=ae.z,Ie[Pe+3]=ae.w,Ie[Pe+4]=se.x,Ie[Pe+5]=se.y,Ie[Pe+6]=se.z,Ie[Pe+7]=se.w,Ie[Pe+8]=he.x,Ie[Pe+9]=he.y,Ie[Pe+10]=he.z,Ie[Pe+11]=he.w,Pe+=12;Pe>0&&(W.bindBuffer(W.ARRAY_BUFFER,_.__webglSkinIndicesBuffer),W.bufferData(W.ARRAY_BUFFER,Ie,w),W.bindBuffer(W.ARRAY_BUFFER,_.__webglSkinWeightsBuffer),W.bufferData(W.ARRAY_BUFFER,Ge,w))}if(tt&&A){for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],O=V.vertexColors,N=V.color,3===O.length&&A===THREE.VertexColors?(ee=O[0],te=O[1],re=O[2]):re=te=ee=N,ke[Le]=ee.r,ke[Le+1]=ee.g,ke[Le+2]=ee.b,ke[Le+3]=te.r,ke[Le+4]=te.g,ke[Le+5]=te.b,ke[Le+6]=re.r,ke[Le+7]=re.g,
ke[Le+8]=re.b,Le+=9;Le>0&&(W.bindBuffer(W.ARRAY_BUFFER,_.__webglColorBuffer),W.bufferData(W.ARRAY_BUFFER,ke,w))}if(et&&Ze.hasTangents){for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],k=V.vertexTangents,Y=k[0],K=k[1],Z=k[2],Ne[Ce]=Y.x,Ne[Ce+1]=Y.y,Ne[Ce+2]=Y.z,Ne[Ce+3]=Y.w,Ne[Ce+4]=K.x,Ne[Ce+5]=K.y,Ne[Ce+6]=K.z,Ne[Ce+7]=K.w,Ne[Ce+8]=Z.x,Ne[Ce+9]=Z.y,Ne[Ce+10]=Z.z,Ne[Ce+11]=Z.w,Ce+=12;W.bindBuffer(W.ARRAY_BUFFER,_.__webglTangentBuffer),W.bufferData(W.ARRAY_BUFFER,Ne,w)}if($e&&C){for(D=0,F=nt.length;F>D;D++)if(V=ot[nt[D]],z=V.vertexNormals,B=V.normal,3===z.length&&P)for(le=0;3>le;le++)ue=z[le],Oe[Se]=ue.x,Oe[Se+1]=ue.y,Oe[Se+2]=ue.z,Se+=3;else for(le=0;3>le;le++)Oe[Se]=B.x,Oe[Se+1]=B.y,Oe[Se+2]=B.z,Se+=3;W.bindBuffer(W.ARRAY_BUFFER,_.__webglNormalBuffer),W.bufferData(W.ARRAY_BUFFER,Oe,w)}if(Je&&at&&L){for(D=0,F=nt.length;F>D;D++)if(U=nt[D],I=at[U],void 0!==I)for(le=0;3>le;le++)pe=I[le],ze[xe]=pe.x,ze[xe+1]=pe.y,xe+=2;xe>0&&(W.bindBuffer(W.ARRAY_BUFFER,_.__webglUVBuffer),W.bufferData(W.ARRAY_BUFFER,ze,w))}if(Je&&st&&L){for(D=0,F=nt.length;F>D;D++)if(U=nt[D],G=st[U],void 0!==G)for(le=0;3>le;le++)fe=G[le],Be[He]=fe.x,Be[He+1]=fe.y,He+=2;He>0&&(W.bindBuffer(W.ARRAY_BUFFER,_.__webglUV2Buffer),W.bufferData(W.ARRAY_BUFFER,Be,w))}if(Qe){for(D=0,F=nt.length;F>D;D++)Ye[_e]=ye,Ye[_e+1]=ye+1,Ye[_e+2]=ye+2,_e+=3,Ke[Ae]=ye,Ke[Ae+1]=ye+1,Ke[Ae+2]=ye,Ke[Ae+3]=ye+2,Ke[Ae+4]=ye+1,Ke[Ae+5]=ye+2,Ae+=6,ye+=3;W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,_.__webglFaceBuffer),W.bufferData(W.ELEMENT_ARRAY_BUFFER,Ye,w),W.bindBuffer(W.ELEMENT_ARRAY_BUFFER,_.__webglLineBuffer),W.bufferData(W.ELEMENT_ARRAY_BUFFER,Ke,w)}if(Xe)for(le=0,ce=Xe.length;ce>le;le++)if(qe=Xe[le],qe.__original.needsUpdate){if(Fe=0,1===qe.size){if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],qe.array[Fe]=qe.value[V.a],qe.array[Fe+1]=qe.value[V.b],qe.array[Fe+2]=qe.value[V.c],Fe+=3;else if("faces"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)Ue=qe.value[nt[D]],qe.array[Fe]=Ue,qe.array[Fe+1]=Ue,qe.array[Fe+2]=Ue,Fe+=3}else if(2===qe.size){if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],j=qe.value[V.a],X=qe.value[V.b],q=qe.value[V.c],qe.array[Fe]=j.x,qe.array[Fe+1]=j.y,qe.array[Fe+2]=X.x,qe.array[Fe+3]=X.y,qe.array[Fe+4]=q.x,qe.array[Fe+5]=q.y,Fe+=6;else if("faces"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)q=X=j=Ue=qe.value[nt[D]],qe.array[Fe]=j.x,qe.array[Fe+1]=j.y,qe.array[Fe+2]=X.x,qe.array[Fe+3]=X.y,qe.array[Fe+4]=q.x,qe.array[Fe+5]=q.y,Fe+=6}else if(3===qe.size){var pt;if(pt="c"===qe.type?["r","g","b"]:["x","y","z"],void 0===qe.boundTo||"vertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],j=qe.value[V.a],X=qe.value[V.b],q=qe.value[V.c],qe.array[Fe]=j[pt[0]],qe.array[Fe+1]=j[pt[1]],qe.array[Fe+2]=j[pt[2]],qe.array[Fe+3]=X[pt[0]],qe.array[Fe+4]=X[pt[1]],qe.array[Fe+5]=X[pt[2]],qe.array[Fe+6]=q[pt[0]],qe.array[Fe+7]=q[pt[1]],qe.array[Fe+8]=q[pt[2]],Fe+=9;else if("faces"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)q=X=j=Ue=qe.value[nt[D]],qe.array[Fe]=j[pt[0]],qe.array[Fe+1]=j[pt[1]],qe.array[Fe+2]=j[pt[2]],qe.array[Fe+3]=X[pt[0]],qe.array[Fe+4]=X[pt[1]],qe.array[Fe+5]=X[pt[2]],qe.array[Fe+6]=q[pt[0]],qe.array[Fe+7]=q[pt[1]],qe.array[Fe+8]=q[pt[2]],Fe+=9;else if("faceVertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)Ue=qe.value[nt[D]],j=Ue[0],X=Ue[1],q=Ue[2],qe.array[Fe]=j[pt[0]],qe.array[Fe+1]=j[pt[1]],qe.array[Fe+2]=j[pt[2]],qe.array[Fe+3]=X[pt[0]],qe.array[Fe+4]=X[pt[1]],qe.array[Fe+5]=X[pt[2]],qe.array[Fe+6]=q[pt[0]],qe.array[Fe+7]=q[pt[1]],qe.array[Fe+8]=q[pt[2]],Fe+=9}else if(4===qe.size)if(void 0===qe.boundTo||"vertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)V=ot[nt[D]],j=qe.value[V.a],X=qe.value[V.b],q=qe.value[V.c],qe.array[Fe]=j.x,qe.array[Fe+1]=j.y,qe.array[Fe+2]=j.z,qe.array[Fe+3]=j.w,qe.array[Fe+4]=X.x,qe.array[Fe+5]=X.y,qe.array[Fe+6]=X.z,qe.array[Fe+7]=X.w,qe.array[Fe+8]=q.x,qe.array[Fe+9]=q.y,qe.array[Fe+10]=q.z,qe.array[Fe+11]=q.w,Fe+=12;else if("faces"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)q=X=j=Ue=qe.value[nt[D]],qe.array[Fe]=j.x,qe.array[Fe+1]=j.y,qe.array[Fe+2]=j.z,qe.array[Fe+3]=j.w,qe.array[Fe+4]=X.x,qe.array[Fe+5]=X.y,qe.array[Fe+6]=X.z,qe.array[Fe+7]=X.w,qe.array[Fe+8]=q.x,qe.array[Fe+9]=q.y,qe.array[Fe+10]=q.z,qe.array[Fe+11]=q.w,Fe+=12;else if("faceVertices"===qe.boundTo)for(D=0,F=nt.length;F>D;D++)Ue=qe.value[nt[D]],j=Ue[0],X=Ue[1],q=Ue[2],qe.array[Fe]=j.x,qe.array[Fe+1]=j.y,qe.array[Fe+2]=j.z,qe.array[Fe+3]=j.w,qe.array[Fe+4]=X.x,qe.array[Fe+5]=X.y,qe.array[Fe+6]=X.z,qe.array[Fe+7]=X.w,qe.array[Fe+8]=q.x,qe.array[Fe+9]=q.y,qe.array[Fe+10]=q.z,qe.array[Fe+11]=q.w,Fe+=12;W.bindBuffer(W.ARRAY_BUFFER,qe.buffer),W.bufferData(W.ARRAY_BUFFER,qe.array,w)}M&&(delete _.__inittedArrays,delete _.__colorArray,delete _.__normalArray,delete _.__tangentArray,delete _.__uvArray,delete _.__uv2Array,delete _.__faceArray,delete _.__vertexArray,delete _.__lineArray,delete _.__skinIndexArray,delete _.__skinWeightArray)}}l.verticesNeedUpdate=!1,l.morphTargetsNeedUpdate=!1,l.elementsNeedUpdate=!1,l.uvsNeedUpdate=!1,l.normalsNeedUpdate=!1,l.colorsNeedUpdate=!1,l.tangentsNeedUpdate=!1,l.buffersNeedUpdate=!1,f.attributes&&T(f)}else if(h instanceof THREE.Line){if(f=i(h,l),p=f.attributes&&g(f),l.verticesNeedUpdate||l.colorsNeedUpdate||l.lineDistancesNeedUpdate||p){var ft=l,Et=W.DYNAMIC_DRAW,dt=void 0,mt=void 0,gt=void 0,Tt=void 0,vt=void 0,yt=void 0,Rt=ft.vertices,xt=ft.colors,Ht=ft.lineDistances,_t=Rt.length,bt=xt.length,wt=Ht.length,Mt=ft.__vertexArray,St=ft.__colorArray,Ct=ft.__lineDistanceArray,At=ft.colorsNeedUpdate,Lt=ft.lineDistancesNeedUpdate,Pt=ft.__webglCustomAttributesList,Dt=void 0,Ft=void 0,Ut=void 0,Vt=void 0,zt=void 0,Bt=void 0;if(ft.verticesNeedUpdate){for(dt=0;_t>dt;dt++)Tt=Rt[dt],vt=3*dt,Mt[vt]=Tt.x,Mt[vt+1]=Tt.y,Mt[vt+2]=Tt.z;W.bindBuffer(W.ARRAY_BUFFER,ft.__webglVertexBuffer),W.bufferData(W.ARRAY_BUFFER,Mt,Et)}if(At){for(mt=0;bt>mt;mt++)yt=xt[mt],vt=3*mt,St[vt]=yt.r,St[vt+1]=yt.g,St[vt+2]=yt.b;W.bindBuffer(W.ARRAY_BUFFER,ft.__webglColorBuffer),W.bufferData(W.ARRAY_BUFFER,St,Et)}if(Lt){for(gt=0;wt>gt;gt++)Ct[gt]=Ht[gt];W.bindBuffer(W.ARRAY_BUFFER,ft.__webglLineDistanceBuffer),W.bufferData(W.ARRAY_BUFFER,Ct,Et)}if(Pt)for(Dt=0,Ft=Pt.length;Ft>Dt;Dt++)if(Bt=Pt[Dt],Bt.needsUpdate&&(void 0===Bt.boundTo||"vertices"===Bt.boundTo)){if(vt=0,Vt=Bt.value.length,1===Bt.size)for(Ut=0;Vt>Ut;Ut++)Bt.array[Ut]=Bt.value[Ut];else if(2===Bt.size)for(Ut=0;Vt>Ut;Ut++)zt=Bt.value[Ut],Bt.array[vt]=zt.x,Bt.array[vt+1]=zt.y,vt+=2;else if(3===Bt.size)if("c"===Bt.type)for(Ut=0;Vt>Ut;Ut++)zt=Bt.value[Ut],Bt.array[vt]=zt.r,Bt.array[vt+1]=zt.g,Bt.array[vt+2]=zt.b,vt+=3;else for(Ut=0;Vt>Ut;Ut++)zt=Bt.value[Ut],Bt.array[vt]=zt.x,Bt.array[vt+1]=zt.y,Bt.array[vt+2]=zt.z,vt+=3;else if(4===Bt.size)for(Ut=0;Vt>Ut;Ut++)zt=Bt.value[Ut],Bt.array[vt]=zt.x,Bt.array[vt+1]=zt.y,Bt.array[vt+2]=zt.z,Bt.array[vt+3]=zt.w,vt+=4;W.bindBuffer(W.ARRAY_BUFFER,Bt.buffer),W.bufferData(W.ARRAY_BUFFER,Bt.array,Et)}}l.verticesNeedUpdate=!1,l.colorsNeedUpdate=!1,l.lineDistancesNeedUpdate=!1,f.attributes&&T(f)}else if(h instanceof THREE.ParticleSystem){if(f=i(h,l),p=f.attributes&&g(f),l.verticesNeedUpdate||l.colorsNeedUpdate||h.sortParticles||p){var Ot=l,Nt=W.DYNAMIC_DRAW,kt=h,It=void 0,Gt=void 0,Wt=void 0,jt=void 0,Xt=void 0,qt=void 0,Yt=Ot.vertices,Kt=Yt.length,Zt=Ot.colors,Qt=Zt.length,Jt=Ot.__vertexArray,$t=Ot.__colorArray,er=Ot.__sortArray,tr=Ot.verticesNeedUpdate,rr=Ot.colorsNeedUpdate,ir=Ot.__webglCustomAttributesList,nr=void 0,or=void 0,ar=void 0,sr=void 0,hr=void 0,lr=void 0;if(kt.sortParticles){for(we.copy(be),we.multiply(kt.matrixWorld),It=0;Kt>It;It++)Wt=Yt[It],Me.copy(Wt),Me.applyProjection(we),er[It]=[Me.z,It];for(er.sort(u),It=0;Kt>It;It++)Wt=Yt[er[It][1]],jt=3*It,Jt[jt]=Wt.x,Jt[jt+1]=Wt.y,Jt[jt+2]=Wt.z;for(Gt=0;Qt>Gt;Gt++)jt=3*Gt,qt=Zt[er[Gt][1]],$t[jt]=qt.r,$t[jt+1]=qt.g,$t[jt+2]=qt.b;if(ir)for(nr=0,or=ir.length;or>nr;nr++)if(lr=ir[nr],void 0===lr.boundTo||"vertices"===lr.boundTo)if(jt=0,sr=lr.value.length,1===lr.size)for(ar=0;sr>ar;ar++)Xt=er[ar][1],lr.array[ar]=lr.value[Xt];else if(2===lr.size)for(ar=0;sr>ar;ar++)Xt=er[ar][1],hr=lr.value[Xt],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,jt+=2;else if(3===lr.size)if("c"===lr.type)for(ar=0;sr>ar;ar++)Xt=er[ar][1],hr=lr.value[Xt],lr.array[jt]=hr.r,lr.array[jt+1]=hr.g,lr.array[jt+2]=hr.b,jt+=3;else for(ar=0;sr>ar;ar++)Xt=er[ar][1],hr=lr.value[Xt],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,lr.array[jt+2]=hr.z,jt+=3;else if(4===lr.size)for(ar=0;sr>ar;ar++)Xt=er[ar][1],hr=lr.value[Xt],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,lr.array[jt+2]=hr.z,lr.array[jt+3]=hr.w,jt+=4}else{if(tr)for(It=0;Kt>It;It++)Wt=Yt[It],jt=3*It,Jt[jt]=Wt.x,Jt[jt+1]=Wt.y,Jt[jt+2]=Wt.z;if(rr)for(Gt=0;Qt>Gt;Gt++)qt=Zt[Gt],jt=3*Gt,$t[jt]=qt.r,$t[jt+1]=qt.g,$t[jt+2]=qt.b;if(ir)for(nr=0,or=ir.length;or>nr;nr++)if(lr=ir[nr],lr.needsUpdate&&(void 0===lr.boundTo||"vertices"===lr.boundTo))if(sr=lr.value.length,jt=0,1===lr.size)for(ar=0;sr>ar;ar++)lr.array[ar]=lr.value[ar];else if(2===lr.size)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,jt+=2;else if(3===lr.size)if("c"===lr.type)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[jt]=hr.r,lr.array[jt+1]=hr.g,lr.array[jt+2]=hr.b,jt+=3;else for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,lr.array[jt+2]=hr.z,jt+=3;else if(4===lr.size)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[jt]=hr.x,lr.array[jt+1]=hr.y,lr.array[jt+2]=hr.z,lr.array[jt+3]=hr.w,jt+=4}if((tr||kt.sortParticles)&&(W.bindBuffer(W.ARRAY_BUFFER,Ot.__webglVertexBuffer),W.bufferData(W.ARRAY_BUFFER,Jt,Nt)),(rr||kt.sortParticles)&&(W.bindBuffer(W.ARRAY_BUFFER,Ot.__webglColorBuffer),W.bufferData(W.ARRAY_BUFFER,$t,Nt)),ir)for(nr=0,or=ir.length;or>nr;nr++)lr=ir[nr],(lr.needsUpdate||kt.sortParticles)&&(W.bindBuffer(W.ARRAY_BUFFER,lr.buffer),W.bufferData(W.ARRAY_BUFFER,lr.array,Nt))}l.verticesNeedUpdate=!1,l.colorsNeedUpdate=!1,f.attributes&&T(f)}}},this.initMaterial=function(e,t,r,i){var n,o,a,s;e.addEventListener("dispose",Xe);var h,l,c,u;e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.ParticleSystemMaterial&&(u="particle_basic"),u&&(n=THREE.ShaderLib[u],e.uniforms=THREE.UniformsUtils.clone(n.uniforms),e.vertexShader=n.vertexShader,e.fragmentShader=n.fragmentShader),c=s=a=o=n=0;for(var p=t.length;p>c;c++){var f=t[c];f.onlyShadow||!1===f.visible||(f instanceof THREE.DirectionalLight&&n++,f instanceof THREE.PointLight&&o++,f instanceof THREE.SpotLight&&a++,f instanceof THREE.HemisphereLight&&s++)}for(p=c=0,f=t.length;f>p;p++){var E=t[p];E.castShadow&&(E instanceof THREE.SpotLight&&c++,E instanceof THREE.DirectionalLight&&!E.shadowCascade&&c++)}t=c,Ve&&i&&i.skeleton&&i.skeleton.useVertexTexture?c=1024:(c=W.getParameter(W.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((c-20)/4),void 0!==i&&i instanceof THREE.SkinnedMesh&&(c=Math.min(i.skeleton.bones.length,c),c<i.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+i.skeleton.bones.length+", this GPU supports just "+c+" (try OpenGL instead of ANGLE)"))),r={precision:F,supportsVertexTextures:Ue,map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:k,skinning:e.skinning,maxBones:c,useVertexTexture:Ve&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:t,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&t>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},i=[],u?i.push(u):(i.push(e.fragmentShader),i.push(e.vertexShader));for(var d in e.defines)i.push(d),i.push(e.defines[d]);for(l in r)i.push(l),i.push(r[l]);u=i.join();var m;for(l=0,d=Q.length;d>l;l++)if(i=Q[l],i.code===u){m=i,m.usedTimes++;break}if(void 0===m&&(m=new THREE.WebGLProgram(this,u,e,r),Q.push(m),Z.info.memory.programs=Q.length),e.program=m,m=e.program.attributes,e.morphTargets)for(e.numSupportedMorphTargets=0,d="morphTarget",l=0;l<this.maxMorphTargets;l++)u=d+l,0<=m[u]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,d="morphNormal",l=0;l<this.maxMorphNormals;l++)u=d+l,0<=m[u]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(h in e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?W.disable(W.CULL_FACE):(t===THREE.FrontFaceDirectionCW?W.frontFace(W.CW):W.frontFace(W.CCW),e===THREE.CullFaceBack?W.cullFace(W.BACK):e===THREE.CullFaceFront?W.cullFace(W.FRONT):W.cullFace(W.FRONT_AND_BACK),W.enable(W.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide;e=e.side===THREE.BackSide,ne!==t&&(t?W.disable(W.CULL_FACE):W.enable(W.CULL_FACE),ne=t),oe!==e&&(e?W.frontFace(W.CW):W.frontFace(W.CCW),oe=e)},this.setDepthTest=function(e){ce!==e&&(e?W.enable(W.DEPTH_TEST):W.disable(W.DEPTH_TEST),ce=e)},this.setDepthWrite=function(e){ue!==e&&(W.depthMask(e),ue=e)},this.setBlending=function(e,t,r,i){e!==ae&&(e===THREE.NoBlending?W.disable(W.BLEND):e===THREE.AdditiveBlending?(W.enable(W.BLEND),W.blendEquation(W.FUNC_ADD),W.blendFunc(W.SRC_ALPHA,W.ONE)):e===THREE.SubtractiveBlending?(W.enable(W.BLEND),W.blendEquation(W.FUNC_ADD),W.blendFunc(W.ZERO,W.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(W.enable(W.BLEND),W.blendEquation(W.FUNC_ADD),W.blendFunc(W.ZERO,W.SRC_COLOR)):e===THREE.CustomBlending?W.enable(W.BLEND):(W.enable(W.BLEND),W.blendEquationSeparate(W.FUNC_ADD,W.FUNC_ADD),W.blendFuncSeparate(W.SRC_ALPHA,W.ONE_MINUS_SRC_ALPHA,W.ONE,W.ONE_MINUS_SRC_ALPHA)),ae=e),e===THREE.CustomBlending?(t!==se&&(W.blendEquation(L(t)),se=t),(r!==he||i!==le)&&(W.blendFunc(L(r),L(i)),he=r,le=i)):le=he=se=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",We),e.__webglTexture=W.createTexture(),Z.info.memory.textures++),W.activeTexture(W.TEXTURE0+t),W.bindTexture(W.TEXTURE_2D,e.__webglTexture),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,e.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=L(e.format),o=L(e.type);S(W.TEXTURE_2D,e,i);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&i){for(var s=0,h=a.length;h>s;s++)r=a[s],W.texImage2D(W.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);e.generateMipmaps=!1}else W.texImage2D(W.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;h>s;s++)r=a[s],e.format!==THREE.RGBAFormat?W.compressedTexImage2D(W.TEXTURE_2D,s,n,r.width,r.height,0,r.data):W.texImage2D(W.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);else if(0<a.length&&i){for(s=0,h=a.length;h>s;s++)r=a[s],W.texImage2D(W.TEXTURE_2D,s,n,n,o,r);e.generateMipmaps=!1}else W.texImage2D(W.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&i&&W.generateMipmap(W.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else W.activeTexture(W.TEXTURE0+t),W.bindTexture(W.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",je),e.__webglTexture=W.createTexture(),Z.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),i=L(e.format),n=L(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],W.bindTexture(W.TEXTURE_CUBE_MAP,e.__webglTexture),S(W.TEXTURE_CUBE_MAP,e,r);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=W.createFramebuffer(),e.__webglRenderbuffer[o]=W.createRenderbuffer(),W.texImage2D(W.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,e.width,e.height,0,i,n,null);var a=e,s=W.TEXTURE_CUBE_MAP_POSITIVE_X+o;W.bindFramebuffer(W.FRAMEBUFFER,e.__webglFramebuffer[o]),W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,s,a.__webglTexture,0),C(e.__webglRenderbuffer[o],e)}r&&W.generateMipmap(W.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=W.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:W.createRenderbuffer(),W.bindTexture(W.TEXTURE_2D,e.__webglTexture),S(W.TEXTURE_2D,e,r),W.texImage2D(W.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),i=W.TEXTURE_2D,W.bindFramebuffer(W.FRAMEBUFFER,e.__webglFramebuffer),W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,i,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?W.framebufferRenderbuffer(W.FRAMEBUFFER,W.DEPTH_ATTACHMENT,W.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&W.framebufferRenderbuffer(W.FRAMEBUFFER,W.DEPTH_STENCIL_ATTACHMENT,W.RENDERBUFFER,e.__webglRenderbuffer):C(e.__webglRenderbuffer,e),r&&W.generateMipmap(W.TEXTURE_2D);t?W.bindTexture(W.TEXTURE_CUBE_MAP,null):W.bindTexture(W.TEXTURE_2D,null),W.bindRenderbuffer(W.RENDERBUFFER,null),W.bindFramebuffer(W.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,e=e.height,n=i=0):(t=null,r=Te,e=ve,i=me,n=ge),t!==$&&(W.bindFramebuffer(W.FRAMEBUFFER,t),W.viewport(i,n,r,e),$=t),ye=r,Re=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e,this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var e=0;return function(t,r,i,n){var o=t.context,a=i.fragmentShader,s=i.vertexShader,h=i.uniforms,l=i.attributes,c=i.defines,u=i.index0AttributeName;void 0===u&&!0===n.morphTargets&&(u="position");var p="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?p="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(p="SHADOWMAP_TYPE_PCF_SOFT");var f,E;f=[];for(var d in c)E=c[d],!1!==E&&(E="#define "+d+" "+E,f.push(E));f=f.join("\n"),c=o.createProgram(),i instanceof THREE.RawShaderMaterial?t=i="":(i=["precision "+n.precision+" float;","precision "+n.precision+" int;",f,n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n"].join("\n"),t=["precision "+n.precision+" float;","precision "+n.precision+" int;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",f,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n")),s=new THREE.WebGLShader(o,o.VERTEX_SHADER,i+s),a=new THREE.WebGLShader(o,o.FRAGMENT_SHADER,t+a),o.attachShader(c,s),o.attachShader(c,a),void 0!==u&&o.bindAttribLocation(c,0,u),o.linkProgram(c),!1===o.getProgramParameter(c,o.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",o.getProgramParameter(c,o.VALIDATE_STATUS)),console.error("gl.getError()",o.getError())),""!==o.getProgramInfoLog(c)&&console.error("gl.getProgramInfoLog()",o.getProgramInfoLog(c)),o.deleteShader(s),o.deleteShader(a),u="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),n.useVertexTexture?(u.push("boneTexture"),u.push("boneTextureWidth"),u.push("boneTextureHeight")):u.push("boneGlobalMatrices"),n.logarithmicDepthBuffer&&u.push("logDepthBufFC");for(var m in h)u.push(m);for(h=u,m={},u=0,t=h.length;t>u;u++)p=h[u],m[p]=o.getUniformLocation(c,p);for(this.uniforms=m,u="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),h=0;h<n.maxMorphTargets;h++)u.push("morphTarget"+h);for(h=0;h<n.maxMorphNormals;h++)u.push("morphNormal"+h);for(var g in l)u.push(g);for(n=u,l={},g=0,h=n.length;h>g;g++)m=n[g],l[m]=o.getAttribLocation(c,m);return this.attributes=l,this.id=e++,this.code=r,this.usedTimes=1,this.program=c,this.vertexShader=s,this.fragmentShader=a,this}}(),THREE.WebGLShader=function(){var e=function(e){e=e.split("\n");for(var t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")};return function(t,r,i){return r=t.createShader(r),t.shaderSource(r,i),t.compileShader(r),!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(r)&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",t.getShaderInfoLog(r)),console.error(e(i))),r}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=this.color=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.rotation=this.z=this.y=this.x=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,r){console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,r)},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,r,i){var n=new THREE.Vector3,o=THREE.Math.random16(),a=THREE.Math.random16();o+a>1&&(o=1-o,a=1-a);var s=1-o-a;return n.copy(t),n.multiplyScalar(o),e.copy(r),e.multiplyScalar(a),n.add(e),e.copy(i),e.multiplyScalar(s),n.add(e),n}}(),randomPointInFace:function(e,t,r){return THREE.GeometryUtils.randomPointInTriangle(t.vertices[e.a],t.vertices[e.b],t.vertices[e.c])},randomPointsInGeometry:function(e,t){function r(e){function t(r,i){if(r>i)return r;var n=r+Math.floor((i-r)/2);return p[n]>e?t(r,n-1):p[n]<e?t(n+1,i):n}return t(0,p.length-1)}var i,n,o,a,s,h=e.faces,l=e.vertices,c=h.length,u=0,p=[];for(n=0;c>n;n++)i=h[n],o=l[i.a],a=l[i.b],s=l[i.c],i._area=THREE.GeometryUtils.triangleArea(o,a,s),u+=i._area,p[n]=u;for(i=[],n=0;t>n;n++)l=THREE.Math.random16()*u,l=r(l),i[n]=THREE.GeometryUtils.randomPointInFace(h[l],e,!0);return i},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){return e.subVectors(i,r),t.subVectors(n,r),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,t);return t=n.load(e,function(){o.needsUpdate=!0,r&&r(o)},void 0,function(e){i&&i(e)}),o.image=t,o.sourceFile=e,o},loadCompressedTexture:function(e,t,r,i){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,r&&r(n)},o.onerror=i,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,r,i){var n=[];n.loadCount=0,i=new THREE.ImageLoader,i.crossOrigin=this.crossOrigin;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,t=0;for(var a=e.length;a>t;++t){var s=i.load(e[t],function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,r&&r(o))});n[t]=s}return o},loadCompressedTextureCube:function(e,t,r,i){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;if(o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1,t=function(e,t){return function(){var i=THREE.ImageUtils.parseDDS(e.response,!0);t.format=i.format,t.mipmaps=i.mipmaps,t.width=i.width,t.height=i.height,n.loadCount+=1,6===n.loadCount&&(o.format=i.format,o.needsUpdate=!0,r&&r(o))}},e instanceof Array)for(var a=0,s=e.length;s>a;++a){var h={};n[a]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=i,h=e[a],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,i=0;t>i;i++){n[i]={mipmaps:[]};for(var a=0;a<e.mipmapCount;a++)n[i].mipmaps.push(e.mipmaps[i*e.mipmapCount+a]),n[i].format=e.format,n[i].width=e.width,n[i].height=e.height}o.format=e.format,o.needsUpdate=!0,r&&r(o)}},l.onerror=i,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return o},loadDDSTexture:function(e,t,r,i){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1;var a=new XMLHttpRequest;return a.onload=function(){var e=THREE.ImageUtils.parseDDS(a.response,!0);if(e.isCubemap)for(var t=e.mipmaps.length/e.mipmapCount,i=0;t>i;i++){n[i]={mipmaps:[]};for(var s=0;s<e.mipmapCount;s++)n[i].mipmaps.push(e.mipmaps[i*e.mipmapCount+s]),n[i].format=e.format,n[i].width=e.width,n[i].height=e.height}else o.image.width=e.width,o.image.height=e.height,o.mipmaps=e.mipmaps;o.format=e.format,o.needsUpdate=!0,r&&r(o)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},parseDDS:function(e,t){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e,t,r,i){var n=r*i*4;e=new Uint8Array(e,t,n);for(var n=new Uint8Array(n),o=t=0,a=0;i>a;a++)for(var s=0;r>s;s++){var h=e[o];o++;var l=e[o];o++;var c=e[o];o++;var u=e[o];o++,n[t]=c,t++,n[t]=l,t++,n[t]=h,t++,n[t]=u,t++}return n}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},o=r("DXT1"),a=r("DXT3"),s=r("DXT5"),h=new Int32Array(e,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),n;if(4&!h[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),n;var l=h[21],c=!1;switch(l){case o:o=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case a:o=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case s:o=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==h[22]&&16711680&h[23]&&65280&h[24]&&255&h[25]&&4278190080&h[26]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&l,l>>8&255,l>>16&255,l>>24&255)),n;c=!0,o=64,n.format=THREE.RGBAFormat}n.mipmapCount=1,131072&h[2]&&!1!==t&&(n.mipmapCount=Math.max(1,h[7])),n.isCubemap=512&h[28]?!0:!1,n.width=h[4],n.height=h[3];
for(var h=h[1]+4,a=n.width,s=n.height,l=n.isCubemap?6:1,u=0;l>u;u++){for(var p=0;p<n.mipmapCount;p++){if(c)var f=i(e,h,a,s),E=f.length;else E=Math.max(4,a)/4*Math.max(4,s)/4*o,f=new Uint8Array(e,h,E);n.mipmaps.push({data:f,width:a,height:s}),h+=E,a=Math.max(.5*a,1),s=Math.max(.5*s,1)}a=n.width,s=n.height}return n},getNormalMap:function(e,t){var r=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var i=e.width,n=e.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;i>c;c++)for(var u=0;n>u;u++){var p=0>u-1?0:u-1,f=u+1>n-1?n-1:u+1,E=0>c-1?0:c-1,d=c+1>i-1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*t];for(m.push([-1,0,s[4*(u*i+E)]/255*t]),m.push([-1,-1,s[4*(p*i+E)]/255*t]),m.push([0,-1,s[4*(p*i+c)]/255*t]),m.push([1,-1,s[4*(p*i+d)]/255*t]),m.push([1,0,s[4*(u*i+d)]/255*t]),m.push([1,1,s[4*(f*i+d)]/255*t]),m.push([0,1,s[4*(f*i+c)]/255*t]),m.push([-1,1,s[4*(f*i+E)]/255*t]),p=[],E=m.length,f=0;E>f;f++){var d=m[f],T=m[(f+1)%E],d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];p.push(r([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}for(m=[0,0,0],f=0;f<p.length;f++)m[0]+=p[f][0],m[1]+=p[f][1],m[2]+=p[f][2];m[0]/=p.length,m[1]/=p.length,m[2]/=p.length,g=4*(u*i+c),l[g]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,r){var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g);r=Math.floor(255*r.b);for(var s=0;i>s;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;return e=new THREE.DataTexture(n,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;n>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),r=this.size/t.resolution,i=0,n=String(e).split(""),o=n.length,a=[];for(e=0;o>e;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,r,i,s),i=i+s.offset;a.push(s.path)}return{paths:a,offset:i/2}},extractGlyphPoints:function(e,t,r,i,n){var o,a,s,h,l,c,u,p,f,E,d,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=t.length,e=0;h>e;)switch(s=t[e++]){case"m":s=t[e++]*r+i,l=t[e++]*r,n.moveTo(s,l);break;case"l":s=t[e++]*r+i,l=t[e++]*r,n.lineTo(s,l);break;case"q":if(s=t[e++]*r+i,l=t[e++]*r,p=t[e++]*r+i,f=t[e++]*r,n.quadraticCurveTo(p,f,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,p,s),THREE.Shape.Utils.b2(T,u,f,l)}break;case"b":if(s=t[e++]*r+i,l=t[e++]*r,p=t[e++]*r+i,f=t[e++]*-r,E=t[e++]*r+i,d=t[e++]*-r,n.bezierCurveTo(s,l,p,f,E,d),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++)T=o/a,THREE.Shape.Utils.b3(T,c,p,E,s),THREE.Shape.Utils.b3(T,u,f,d,l)}return{offset:g.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.curveSegments?t.curveSegments:4,i=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=r,THREE.FontUtils.face=i,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,r=THREE.FontUtils.drawText(e).paths,i=[],n=0,o=r.length;o>n;n++)Array.prototype.push.apply(i,r[n].toShapes());return i},function(e){var t=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r};return e.Triangulate=function(e,r){var i=e.length;if(3>i)return null;var n,o,a,s=[],h=[],l=[];if(0<t(e))for(o=0;i>o;o++)h[o]=o;else for(o=0;i>o;o++)h[o]=i-1-o;var c=2*i;for(o=i-1;i>2;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}n=o,n>=i&&(n=0),o=n+1,o>=i&&(o=0),a=o+1,a>=i&&(a=0);var u;e:{var p=u=void 0,f=void 0,E=void 0,d=void 0,m=void 0,g=void 0,T=void 0,v=void 0,p=e[h[n]].x,f=e[h[n]].y,E=e[h[o]].x,d=e[h[o]].y,m=e[h[a]].x,g=e[h[a]].y;if(1e-10>(E-p)*(g-f)-(d-f)*(m-p))u=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,C=void 0,S=M=w=v=T=void 0,y=m-E,R=g-d,x=p-m,H=f-g,_=E-p,b=d-f;for(u=0;i>u;u++)if(T=e[h[u]].x,v=e[h[u]].y,!(T===p&&v===f||T===E&&v===d||T===m&&v===g)&&(w=T-p,M=v-f,S=T-E,C=v-d,T-=m,v-=g,S=y*C-R*S,w=_*M-b*w,M=x*v-H*T,S>=-1e-10&&M>=-1e-10&&w>=-1e-10)){u=!1;break e}u=!0}}if(u){for(s.push([e[h[n]],e[h[o]],e[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;i>a;n++,a++)h[n]=h[a];i--,c=2*i}}return r?l:s},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;e>=r;r++)t=this.getPoint(r/e),o+=t.distanceTo(n),i.push(o),n=t;return this.cacheArcLengths=i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),n=0,o=i.length;r=t?t:e*i[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=i[n]-r,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,i[n]==r?n/(o-1):(s=i[n],i=(n+(r-s)/(i[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;return e+=1e-4,0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e,t,r,i,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,n){e=.5*(r-e),i=.5*(i-t);var o=n*n;return(2*t-2*r+e+i)*n*o+(-3*t+3*r-2*e-i)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),r=this.getCurveLengths();for(e=0;e<r.length;){if(r[e]>=t)return t=r[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;i>e;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;l>h;h++)s=a[h],s.x>e?e=s.x:s.x<i&&(i=s.x),s.y>t?t=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:i,minY:n,maxX:e,maxY:t},u&&(a.maxZ=r,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,n=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,n=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=e.length;i>r;r++)n=e[r],o=n.x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o),o=t.getPoint(s),s=t.getTangent(s),s.set(-s.y,s.x).multiplyScalar(a),n.x=o.x+s.x,n.y=o.y+s.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(e,t));this.curves.push(i),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,e),r=new THREE.SplineCurve(r),this.curves.push(r),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],r,i,n,o)},THREE.Path.prototype.absarc=function(e,t,r,i,n,o){this.absellipse(e,t,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],r,i,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;e>i;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,n,o,a,s,h,l,c,u,p,f,E,d=[];for(r=0,i=this.actions.length;i>r;r++)switch(n=this.actions[r],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<d.length?(o=d[d.length-1],p=o.x,f=o.y):(o=this.actions[r-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)E=n/e,o=THREE.Shape.Utils.b2(E,p,c,a),E=THREE.Shape.Utils.b2(E,f,u,s),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<d.length?(o=d[d.length-1],p=o.x,f=o.y):(o=this.actions[r-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)E=n/e,o=THREE.Shape.Utils.b3(E,p,c,h,a),E=THREE.Shape.Utils.b3(E,f,u,l,s),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[r-1].args,E=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*n[0].length,E=E.concat(n[0]),E=new THREE.SplineCurve(E),n=1;o>=n;n++)d.push(E.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],p=o-h,f=2*e,n=1;f>=n;n++)E=n/f,c||(E=1-E),E=h+E*p,o=a+u*Math.cos(E),E=s+u*Math.sin(E),d.push(new THREE.Vector2(o,E));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],p=o-h,f=2*e,n=1;f>=n;n++)E=n/f,c||(E=1-E),E=h+E*p,o=a+u*Math.cos(E),E=s+l*Math.sin(E),d.push(new THREE.Vector2(o,E))}return r=d[d.length-1],1e-10>Math.abs(r.x-d[0].x)&&1e-10>Math.abs(r.y-d[0].y)&&d.splice(d.length-1,1),t&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(e,t){function r(e){for(var t=[],r=0,i=e.length;i>r;r++){var n=e[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,t.push(o)}return t}function i(e,t){for(var r=t.length,i=!1,n=r-1,o=0;r>o;n=o++){var a=t[n],s=t[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(0>l&&(a=t[o],h=-h,s=t[n],l=-l),!(e.y<a.y||e.y>s.y))if(e.y==a.y){if(e.x==a.x)return!0}else{if(n=l*(e.x-a.x)-h*(e.y-a.y),0==n)return!0;0>n||(i=!i)}}else if(e.y==a.y&&(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x))return!0}return i}var n=function(e){var t,r,i,n,o=[],a=new THREE.Path;for(t=0,r=e.length;r>t;t++)i=e[t],n=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);return 0!=a.actions.length&&o.push(a),o}(this.actions);if(0==n.length)return[];if(!0===t)return r(n);var o,a,s,h=[];if(1==n.length)return a=n[0],s=new THREE.Shape,s.actions=a.actions,s.curves=a.curves,h.push(s),h;var l=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),l=e?!l:l;s=[];var c,u=[],p=[],f=0;u[f]=void 0,p[f]=[];var E,d;for(E=0,d=n.length;d>E;E++)a=n[E],c=a.getPoints(),o=THREE.Shape.Utils.isClockWise(c),(o=e?!o:o)?(!l&&u[f]&&f++,u[f]={s:new THREE.Shape,p:c},u[f].s.actions=a.actions,u[f].s.curves=a.curves,l&&f++,p[f]=[]):p[f].push({h:a,p:c[0]});if(!u[0])return r(n);if(1<u.length){for(E=!1,d=[],a=0,n=u.length;n>a;a++)s[a]=[];for(a=0,n=u.length;n>a;a++)for(o=p[a],l=0;l<o.length;l++){f=o[l],c=!0;for(var m=0;m<u.length;m++)i(f.p,u[m].p)&&(a!=m&&d.push({froms:a,tos:m,hole:l}),c?(c=!1,s[m].push(f)):E=!0);c&&s[a].push(f)}0<d.length&&(E||(p=s))}for(E=0,d=u.length;d>E;E++)for(s=u[E].s,h.push(s),a=p[E],n=0,o=a.length;o>n;n++)s.holes.push(a[n].h);return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-i.x,l=n.y-i.y,c=e.x-i.x,u=e.y-i.y,p=s*h-a*l,f=s*c-a*u;if(1e-10<Math.abs(p)){if(p>0){if(0>f||f>p)return[];if(h=l*c-h*u,0>h||h>p)return[]}else{if(f>0||p>f)return[];if(h=l*c-h*u,h>0||p>h)return[]}return 0==h?!o||0!=f&&f!=p?[e]:[]:h==p?!o||0!=f&&f!=p?[t]:[]:0==f?[i]:f==p?[n]:(o=h/p,[{x:e.x+o*a,y:e.y+o*s}])}return 0!=f||l*c!=h*u?[]:(s=0==a&&0==s,h=0==h&&0==l,s&&h?e.x!=i.x||e.y!=i.y?[]:[e]:s?r(i,n,e)?[e]:[]:h?r(e,t,i)?[i]:[]:(0!=a?(e.x<t.x?(a=e,h=e.x,s=t,e=t.x):(a=t,h=t.x,s=e,e=e.x),i.x<n.x?(t=i,p=i.x,l=n,i=n.x):(t=n,p=n.x,l=i,i=i.x)):(e.y<t.y?(a=e,h=e.y,s=t,e=t.y):(a=t,h=t.y,s=e,e=e.y),i.y<n.y?(t=i,p=i.y,l=n,i=n.y):(t=n,p=n.y,l=i,i=i.y)),p>=h?p>e?[]:e==p?o?[]:[t]:i>=e?[t,s]:[t,l]:h>i?[]:h==i?o?[]:[a]:i>=e?[a,s]:[a,l]))}function n(e,t,r,i){var n=t.x-e.x,o=t.y-e.y;t=r.x-e.x,r=r.y-e.y;var a=i.x-e.x;return i=i.y-e.y,e=n*r-o*t,n=n*i-o*a,1e-10<Math.abs(e)?(t=a*r-i*t,e>0?n>=0&&t>=0:n>=0||t>=0):n>0}var o,a,s,h,l,c={};for(s=e.concat(),o=0,a=t.length;a>o;o++)Array.prototype.push.apply(s,t[o]);for(o=0,a=s.length;a>o;o++)l=s[o].x+":"+s[o].y,void 0!==c[l]&&console.log("Duplicate point",l),c[l]=o;o=function(e,t){function r(e,t){var r=m.length-1,i=e-1;0>i&&(i=r);var o=e+1;return o>r&&(o=0),(r=n(m[e],m[i],m[o],s[t]))?(r=s.length-1,i=t-1,0>i&&(i=r),o=t+1,o>r&&(o=0),(r=n(s[t],s[i],s[o],m[e]))?!0:!1):!1}function o(e,t){var r,n;for(r=0;r<m.length;r++)if(n=r+1,n%=m.length,n=i(e,t,m[r],m[n],!0),0<n.length)return!0;return!1}function a(e,r){var n,o,a,s;for(n=0;n<g.length;n++)for(o=t[g[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=i(e,r,o[a],o[s],!0),0<s.length)return!0;return!1}var s,h,l,c,u,p,f,E,d,m=e.concat(),g=[],T=[],v=0;for(h=t.length;h>v;v++)g.push(v);f=0;for(var y=2*g.length;0<g.length;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+g.length+", Probably Hole outside Shape!");break}for(l=f;l<m.length;l++){for(c=m[l],h=-1,v=0;v<g.length;v++)if(u=g[v],p=c.x+":"+c.y+":"+u,void 0===T[p]){for(s=t[u],E=0;E<s.length;E++)if(u=s[E],r(l,E)&&!o(c,u)&&!a(c,u)){h=E,g.splice(v,1),f=m.slice(0,l+1),u=m.slice(l),E=s.slice(h),d=s.slice(0,h+1),m=f.concat(E).concat(d).concat(u),f=l;break}if(h>=0)break;T[p]=!0}if(h>=0)break}}return m}(e,t);var u=THREE.FontUtils.Triangulate(o,!1);for(o=0,a=u.length;a>o;o++)for(h=u[o],s=0;3>s;s++)l=h[s].x+":"+h[s].y,l=c[l],void 0!==l&&(h[s]=l);return u.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r=new THREE.Vector2,i=[],n=this.points;return t=(n.length-1)*e,e=Math.floor(t),t-=e,i[0]=0==e?e:e-1,i[1]=e,i[2]=e>n.length-2?n.length-1:e+1,i[3]=e>n.length-3?n.length-1:e+2,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,t),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,t),r},THREE.EllipseCurve=function(e,t,r,i,n,o,a){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t;return t=this.aEndAngle-this.aStartAngle,0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,r,i,n,o){THREE.EllipseCurve.call(this,e,t,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r=new THREE.Vector3,i=[],n=this.points;e*=n.length-1,t=Math.floor(e),e-=t,i[0]=0==t?t:t-1,i[1]=t,i[2]=t>n.length-2?n.length-1:t+1,i[3]=t>n.length-3?n.length-1:t+2,t=n[i[0]];var o=n[i[1]],a=n[i[2]],i=n[i[3]];return r.x=THREE.Curve.Utils.interpolate(t.x,o.x,a.x,i.x,e),r.y=THREE.Curve.Utils.interpolate(t.y,o.y,a.y,i.y,e),r.z=THREE.Curve.Utils.interpolate(t.z,o.z,a.z,i.z,e),r}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r=new THREE.Vector3,i=[],n=this.points;return t=(n.length-0)*e,e=Math.floor(t),t-=e,e+=e>0?0:(Math.floor(Math.abs(e)/n.length)+1)*n.length,i[0]=(e-1)%n.length,i[1]=e%n.length,i[2]=(e+1)%n.length,i[3]=(e+2)%n.length,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,t),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,t),r.z=THREE.Curve.Utils.interpolate(n[i[0]].z,n[i[1]].z,n[i[2]].z,n[i[3]].z,t),r}),THREE.AnimationHandler=function(){var e=[],t={},r={update:function(t){for(var r=0;r<e.length;r++)e[r].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){if(void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,!0!==e.initialized){for(var r=0;r<e.hierarchy.length;r++){for(var i=0;i<e.hierarchy[r].keys.length;i++)if(0>e.hierarchy[r].keys[i].time&&(e.hierarchy[r].keys[i].time=0),void 0!==e.hierarchy[r].keys[i].rot&&!(e.hierarchy[r].keys[i].rot instanceof THREE.Quaternion)){var n=e.hierarchy[r].keys[i].rot;e.hierarchy[r].keys[i].rot=(new THREE.Quaternion).fromArray(n)}if(e.hierarchy[r].keys.length&&void 0!==e.hierarchy[r].keys[0].morphTargets){for(n={},i=0;i<e.hierarchy[r].keys.length;i++)for(var o=0;o<e.hierarchy[r].keys[i].morphTargets.length;o++){var a=e.hierarchy[r].keys[i].morphTargets[o];n[a]=-1}for(e.hierarchy[r].usedMorphTargets=n,i=0;i<e.hierarchy[r].keys.length;i++){var s={};for(a in n){for(o=0;o<e.hierarchy[r].keys[i].morphTargets.length;o++)if(e.hierarchy[r].keys[i].morphTargets[o]===a){s[a]=e.hierarchy[r].keys[i].morphTargetsInfluences[o];break}o===e.hierarchy[r].keys[i].morphTargets.length&&(s[a]=0)}e.hierarchy[r].keys[i].morphTargetsInfluences=s}}for(i=1;i<e.hierarchy[r].keys.length;i++)e.hierarchy[r].keys[i].time===e.hierarchy[r].keys[i-1].time&&(e.hierarchy[r].keys.splice(i,1),i--);for(i=0;i<e.hierarchy[r].keys.length;i++)e.hierarchy[r].keys[i].index=i}e.initialized=!0}},remove:function(e){void 0===t[e]&&console.log("THREE.AnimationHandler.add: Warning! "+e+" doesn't exists in library. Doing nothing."),t[e]=void 0},get:function(e){return"string"==typeof e?t[e]?t[e]:null:void 0},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;r<e.skeleton.bones.length;r++)t.push(e.skeleton.bones[r]);else i(e,t);return t}},i=function(e,t){t.push(e);for(var r=0;r<e.children.length;r++)i(e.children[r],t)};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(e,t){this.currentTime=void 0!==e?e:0,this.weight=void 0!==t?t:1,this.isPlaying=!0,this.isPaused=!1,this.reset(),THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e];r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);for(var r=r.animationCache[this.data.name],i=0;3>i;i++){for(var n=this.keyTypes[i],o=this.data.hierarchy[e].keys[0],a=this.getNextKeyWith(n,e,1);a.time<this.currentTime&&a.index>o.index;)o=a,a=this.getNextKeyWith(n,e,a.index+1);r.prevKey[n]=o,r.nextKey[n]=a}}},THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(e,t){var r,i,n,a,s,h,l=[],c=[];return r=(e.length-1)*t,i=Math.floor(r),r-=i,l[0]=0===i?i:i-1,l[1]=i,l[2]=i>e.length-2?i:i+1,l[3]=i>e.length-3?i:i+2,i=e[l[0]],a=e[l[1]],s=e[l[2]],h=e[l[3]],l=r*r,n=r*l,c[0]=o(i[0],a[0],s[0],h[0],r,l,n),c[1]=o(i[1],a[1],s[1],h[1],r,l,n),c[2]=o(i[2],a[2],s[2],h[2],r,l,n),c},o=function(e,t,r,i,n,o,a){return e=.5*(r-e),i=.5*(i-t),(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t};return function(o){if(!1!==this.isPlaying&&(this.currentTime+=o*this.timeScale,0!==this.weight)){var a;if(o=this.data.length,!0===this.loop&&this.currentTime>o)this.currentTime%=o,this.reset();else if(!1===this.loop&&this.currentTime>o)return void this.stop();o=0;for(var s=this.hierarchy.length;s>o;o++)for(var h=this.hierarchy[o],l=h.animationCache[this.data.name],c=0;3>c;c++){a=this.keyTypes[c];var u=l.prevKey[a],p=l.nextKey[a];if(p.time<=this.currentTime){for(u=this.data.hierarchy[o].keys[0],p=this.getNextKeyWith(a,o,1);p.time<this.currentTime&&p.index>u.index;)u=p,p=this.getNextKeyWith(a,o,p.index+1);l.prevKey[a]=u,l.nextKey[a]=p}h.matrixAutoUpdate=!0,h.matrixWorldNeedsUpdate=!0;var f=(this.currentTime-u.time)/(p.time-u.time),E=u[a],d=p[a];0>f&&(f=0),f>1&&(f=1),"pos"===a?(a=h.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(r.x=E[0]+(d[0]-E[0])*f,r.y=E[1]+(d[1]-E[1])*f,r.z=E[2]+(d[2]-E[2])*f,h instanceof THREE.Bone&&(u=this.weight/(this.weight+h.accumulatedPosWeight),a.lerp(r,u),h.accumulatedPosWeight+=this.weight)):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(e[0]=this.getPrevKeyWith("pos",o,u.index-1).pos,e[1]=E,e[2]=d,e[3]=this.getNextKeyWith("pos",o,p.index+1).pos,f=.33*f+.33,p=n(e,f),h instanceof THREE.Bone?(u=this.weight/(this.weight+h.accumulatedPosWeight),h.accumulatedPosWeight+=this.weight):u=1,a.x+=(p[0]-a.x)*u,a.y+=(p[1]-a.y)*u,a.z+=(p[2]-a.z)*u,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(f=n(e,1.01*f),t.set(f[0],f[1],f[2]),t.sub(a),t.y=0,t.normalize(),a=Math.atan2(t.x,t.z),h.rotation.set(0,a,0)))):"rot"===a?(THREE.Quaternion.slerp(E,d,i,f),
h instanceof THREE.Bone?0===h.accumulatedRotWeight?(h.quaternion.copy(i),h.accumulatedRotWeight=this.weight):(u=this.weight/(this.weight+h.accumulatedRotWeight),THREE.Quaternion.slerp(h.quaternion,i,h.quaternion,u),h.accumulatedRotWeight+=this.weight):h.quaternion.copy(i)):"scl"===a&&(a=h.scale,r.x=E[0]+(d[0]-E[0])*f,r.y=E[1]+(d[1]-E[1])*f,r.z=E[2]+(d[2]-E[2])*f,h instanceof THREE.Bone&&(u=this.weight/(this.weight+h.accumulatedSclWeight),a.lerp(r,u),h.accumulatedSclWeight+=this.weight))}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r<i.length-1?r:i.length-1:r%i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0;for(var r=0,i=this.hierarchy.length;i>r;r++){var n=this.data.hierarchy[r].sids,o=this.hierarchy[r];if(this.data.hierarchy[r].keys.length&&n){for(var a=0;a<n.length;a++){var s=n[a],h=this.getNextKeyWith(s,r,0);h&&h.apply(s)}o.matrixAutoUpdate=!1,this.data.hierarchy[r].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e){if(this.currentTime=void 0!==e?e:0,!1===this.isPlaying){this.isPlaying=!0;var t,r,i=this.hierarchy.length;for(e=0;i>e;e++)t=this.hierarchy[e],r=this.data.hierarchy[e],void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=t instanceof THREE.Bone?t.skinMatrix:t.matrix),t=this.data.hierarchy[e].keys,t.length&&(r.animationCache.prevKey=t[0],r.animationCache.nextKey=t[1],this.startTime=Math.min(t[0].time,this.startTime),this.endTime=Math.max(t[t.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale,e=this.data.length,!0===this.loop&&this.currentTime>e&&(this.currentTime%=e),this.currentTime=Math.min(this.currentTime,e),e=0;for(var t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e],i=this.data.hierarchy[e],n=i.keys,i=i.animationCache;if(n.length){var o=i.prevKey,a=i.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)o=a,a=n[o.index+1];i.prevKey=o,i.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time),this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){for(t=this.data.hierarchy[t].keys,r%=t.length;r<t.length;r++)if(t[r].hasTarget(e))return t[r];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){for(t=this.data.hierarchy[t].keys,r=r>=0?r:r+t.length;r>=0;r--)if(t[r].hasTarget(e))return t[r];return t[t.length-1]},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(r){if(!1!==this.isPlaying){this.currentTime+=r,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),r=this.duration/this.frames;var i=Math.floor(this.currentTime/r);i!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[i]=0,e=t,t=i),this.mesh.morphTargetInfluences[i]=this.currentTime%r/r,this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[i]}}}()},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,i,r),r.activeCubeFace=1,e.render(t,n,r),r.activeCubeFace=2,e.render(t,o,r),r.activeCubeFace=3,e.render(t,a,r),r.activeCubeFace=4,e.render(t,s,r),r.generateMipmaps=l,r.activeCubeFace=5,e.render(t,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,n,o,a){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.BoxGeometry=function(e,t,r,i,n,o){function a(e,t,r,i,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,p=n/2,f=o/2,E=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",u=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var d=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;for(v[l]=a>0?1:-1,n=0;m>n;n++)for(o=0;d>o;o++){var y=new THREE.Vector3;y[e]=(o*g-p)*r,y[t]=(n*T-f)*i,y[l]=a,s.vertices.push(y)}for(n=0;u>n;n++)for(o=0;c>o;o++)f=o+d*n,e=o+d*(n+1),t=o+1+d*(n+1),r=o+1+d*n,i=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),p=new THREE.Vector2((o+1)/c,1-n/u),f=new THREE.Face3(f+E,e+E,r+E),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([i,a,p]),f=new THREE.Face3(e+E,t+E,r+E),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([a.clone(),l,p.clone()])}THREE.Geometry.call(this),this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var s=this;i=e/2,n=t/2,o=r/2,a("z","y",-1,-1,r,t,i,0),a("z","y",1,-1,r,t,-i,1),a("x","z",1,1,e,r,n,2),a("x","z",1,-1,e,r,-n,3),a("x","y",1,-1,e,t,o,4),a("x","y",-1,-1,e,t,-o,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:i},e=e||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;t>=n;n++){var s=new THREE.Vector3,h=r+n/t*i;s.x=e*Math.cos(h),s.y=e*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,(s.y/e+1)/2))}for(r=new THREE.Vector3(0,0,1),n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,n,o){return console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead."),new THREE.BoxGeometry(e,t,r,i,n,o)},THREE.CylinderGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:i,heightSegments:n,openEnded:o},e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o?o:!1;var a,s,h=r/2,l=[],c=[];for(s=0;n>=s;s++){var u=[],p=[],f=s/n,E=f*(t-e)+e;for(a=0;i>=a;a++){var d=a/i,m=new THREE.Vector3;m.x=E*Math.sin(d*Math.PI*2),m.y=-f*r+h,m.z=E*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(d,1-f))}l.push(u),c.push(p)}for(r=(t-e)/r,a=0;i>a;a++)for(0!==e?(u=this.vertices[l[0][a]].clone(),p=this.vertices[l[0][a+1]].clone()):(u=this.vertices[l[1][a]].clone(),p=this.vertices[l[1][a+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*r).normalize(),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*r).normalize(),s=0;n>s;s++){var f=l[s][a],E=l[s+1][a],d=l[s+1][a+1],m=l[s][a+1],g=u.clone(),T=u.clone(),v=p.clone(),y=p.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();this.faces.push(new THREE.Face3(f,E,m,[g,T,y])),this.faceVertexUvs[0].push([R,x,_]),this.faces.push(new THREE.Face3(E,d,m,[T.clone(),v,y.clone()])),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;i>a;a++)f=l[0][a],E=l[0][a+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.x,0),this.faces.push(new THREE.Face3(f,E,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;i>a;a++)f=l[s][a+1],E=l[s][a],d=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.x,1),this.faces.push(new THREE.Face3(f,E,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++)this.addShape(e[i],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){var i=THREE.Math.sign,n=1,n=e.x-t.x,o=e.y-t.y,a=r.x-e.x,s=r.y-e.y,h=n*n+o*o;if(1e-10<Math.abs(n*s-o*a)){var l=Math.sqrt(h),i=Math.sqrt(a*a+s*s),h=t.x-o/l;if(t=t.y+n/l,a=((r.x-s/i-h)*s-(r.y+a/i-t)*a)/(n*s-o*a),r=h+n*a-e.x,e=t+o*a-e.y,n=r*r+e*e,2>=n)return new THREE.Vector2(r,e);n=Math.sqrt(n/2)}else e=!1,n>1e-10?a>1e-10&&(e=!0):-1e-10>n?-1e-10>a&&(e=!0):i(o)==i(s)&&(e=!0),e?(r=-o,e=n,n=Math.sqrt(h)):(r=n,e=o,n=Math.sqrt(h/2));return new THREE.Vector2(r/n,e/n)}function n(r,i){var n,o;for(N=r.length;0<=--N;){n=N,o=N-1,0>o&&(o=r.length-1);for(var a=0,s=T+2*d,a=0;s>a;a++){var h=B*a,l=B*(a+1),c=i+n+h,h=i+o+h,u=i+o+l,l=i+n+l,p=r,f=a,E=s,m=n,g=o,c=c+S,h=h+S,u=u+S,l=l+S;M.faces.push(new THREE.Face3(c,h,l,null,null,x)),M.faces.push(new THREE.Face3(h,u,l,null,null,x)),c=H.generateSideWallUV(M,e,p,t,c,h,u,l,f,E,m,g),M.faceVertexUvs[0].push([c[0],c[1],c[3]]),M.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function o(e,t,r){M.vertices.push(new THREE.Vector3(e,t,r))}function a(r,i,n,o){r+=S,i+=S,n+=S,M.faces.push(new THREE.Face3(r,i,n,null,null,R)),r=o?H.generateBottomUV(M,e,t,r,i,n):H.generateTopUV(M,e,t,r,i,n),M.faceVertexUvs[0].push(r)}var s,h,l,c,u,p=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,E=void 0!==t.bevelSize?t.bevelSize:f-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,T=void 0!==t.steps?t.steps:1,v=t.extrudePath,y=!1,R=t.material,x=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(s=v.getSpacedPoints(T),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3),m||(E=f=d=0);var _,b,w,M=this,S=this.vertices.length,v=e.extractPoints(g),g=v.shape,C=v.holes;if(v=!THREE.Shape.Utils.isClockWise(g)){for(g=g.reverse(),b=0,w=C.length;w>b;b++)_=C[b],THREE.Shape.Utils.isClockWise(_)&&(C[b]=_.reverse());v=!1}var A=THREE.Shape.Utils.triangulateShape(g,C),L=g;for(b=0,w=C.length;w>b;b++)_=C[b],g=g.concat(_);var P,D,F,U,V,z,B=g.length,O=A.length,v=[],N=0;for(F=L.length,P=F-1,D=N+1;F>N;N++,P++,D++)P===F&&(P=0),D===F&&(D=0),v[N]=i(L[N],L[P],L[D]);var k,I=[],G=v.concat();for(b=0,w=C.length;w>b;b++){for(_=C[b],k=[],N=0,F=_.length,P=F-1,D=N+1;F>N;N++,P++,D++)P===F&&(P=0),D===F&&(D=0),k[N]=i(_[N],_[P],_[D]);I.push(k),G=G.concat(k)}for(P=0;d>P;P++){for(F=P/d,U=f*(1-F),D=E*Math.sin(F*Math.PI/2),N=0,F=L.length;F>N;N++)V=r(L[N],v[N],D),o(V.x,V.y,-U);for(b=0,w=C.length;w>b;b++)for(_=C[b],k=I[b],N=0,F=_.length;F>N;N++)V=r(_[N],k[N],D),o(V.x,V.y,-U)}for(D=E,N=0;B>N;N++)V=m?r(g[N],G[N],D):g[N],y?(c.copy(h.normals[0]).multiplyScalar(V.x),l.copy(h.binormals[0]).multiplyScalar(V.y),u.copy(s[0]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,0);for(F=1;T>=F;F++)for(N=0;B>N;N++)V=m?r(g[N],G[N],D):g[N],y?(c.copy(h.normals[F]).multiplyScalar(V.x),l.copy(h.binormals[F]).multiplyScalar(V.y),u.copy(s[F]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,p/T*F);for(P=d-1;P>=0;P--){for(F=P/d,U=f*(1-F),D=E*Math.sin(F*Math.PI/2),N=0,F=L.length;F>N;N++)V=r(L[N],v[N],D),o(V.x,V.y,p+U);for(b=0,w=C.length;w>b;b++)for(_=C[b],k=I[b],N=0,F=_.length;F>N;N++)V=r(_[N],k[N],D),y?o(V.x,V.y+s[T-1].y,s[T-1].x+U):o(V.x,V.y,p+U)}!function(){if(m){var e;for(e=0*B,N=0;O>N;N++)z=A[N],a(z[2]+e,z[1]+e,z[0]+e,!0);for(e=T+2*d,e*=B,N=0;O>N;N++)z=A[N],a(z[0]+e,z[1]+e,z[2]+e,!1)}else{for(N=0;O>N;N++)z=A[N],a(z[2],z[1],z[0],!0);for(N=0;O>N;N++)z=A[N],a(z[0]+B*T,z[1]+B*T,z[2]+B*T,!1)}}(),function(){var e=0;for(n(L,e),e+=L.length,b=0,w=C.length;w>b;b++)_=C[b],n(_,e),e+=_.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,r=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[i].x,e.vertices[i].y),new THREE.Vector2(t,n),new THREE.Vector2(r,o)]},generateBottomUV:function(e,t,r,i,n,o){return this.generateTopUV(e,t,r,i,n,o)},generateSideWallUV:function(e,t,r,i,n,o,a,s,h,l,c,u){t=e.vertices[n].x,r=e.vertices[n].y,n=e.vertices[n].z,i=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,u=e.vertices[s].x;var p=e.vertices[s].y;return e=e.vertices[s].z,.01>Math.abs(r-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(i,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-e)]:[new THREE.Vector2(r,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(p,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,i,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;r=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=r.shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),r=0,i=l.length;i>r;r++)n=l[r],THREE.Shape.Utils.isClockWise(n)&&(l[r]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(r=0,i=l.length;i>r;r++)n=l[r],h=h.concat(n);for(l=h.length,i=c.length,r=0;l>r;r++)n=h[r],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(r=0;i>r;r++)l=c[r],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,e,t,h,n,l))},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),h=0,u=e.length;u>h;h++){var p=e[h],f=new THREE.Vector3;f.x=l*p.x-c*p.y,f.y=c*p.x+l*p.y,f.z=p.z,this.vertices.push(f)}for(r=e.length,a=0,s=t;s>a;a++)for(h=0,u=e.length-1;u>h;h++){t=c=h+r*a,i=c+r;var l=c+1+r,c=c+1,p=a*o,f=h*n,E=p+o,d=f+n;this.faces.push(new THREE.Face3(t,i,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,f),new THREE.Vector2(E,f),new THREE.Vector2(p,d)]),this.faces.push(new THREE.Face3(i,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(E,f),new THREE.Vector2(E,d),new THREE.Vector2(p,d)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=e/2,o=t/2;r=r||1,i=i||1;var a=r+1,s=i+1,h=e/r,l=t/i,c=new THREE.Vector3(0,0,1);for(e=0;s>e;e++){var u=e*l-o;for(t=0;a>t;t++)this.vertices.push(new THREE.Vector3(t*h-n,-u,0))}for(e=0;i>e;e++)for(t=0;r>t;t++){var p=t+a*e,n=t+a*(e+1),o=t+1+a*(e+1),s=t+1+a*e,h=new THREE.Vector2(t/r,1-e/i),l=new THREE.Vector2(t/r,1-(e+1)/i),u=new THREE.Vector2((t+1)/r,1-(e+1)/i),f=new THREE.Vector2((t+1)/r,1-e/i),p=new THREE.Face3(p,n,s);p.normal.copy(c),p.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(p),this.faceVertexUvs[0].push([h,l,f]),p=new THREE.Face3(n,o,s),p.normal.copy(c),p.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(p),this.faceVertexUvs[0].push([l.clone(),u,f.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),e=e||0,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(3,i):8;var a,s=[],h=e,l=(t-e)/i;for(e=0;i>=e;e++){for(a=0;r>=a;a++){var c=new THREE.Vector3,u=n+a/r*o;c.x=h*Math.cos(u),c.y=h*Math.sin(u),this.vertices.push(c),s.push(new THREE.Vector2((c.x/t+1)/2,(c.y/t+1)/2))}h+=l}for(t=new THREE.Vector3(0,0,1),e=0;i>e;e++)for(n=e*r,a=0;r>=a;a++)u=a+n,o=u+e,l=u+r+e,c=u+r+1+e,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),o=u+e,l=u+r+1+e,c=u+1+e,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this),this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;r>=h;h++){var u=[],p=[];for(s=0;t>=s;s++){var f=s/t,E=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+f*n)*Math.sin(o+E*a),d.y=e*Math.cos(o+E*a),d.z=e*Math.sin(i+f*n)*Math.sin(o+E*a),this.vertices.push(d),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-E))}l.push(u),c.push(p)}for(h=0;r>h;h++)for(s=0;t>s;s++){i=l[h][s+1],n=l[h][s],o=l[h+1][s],a=l[h+1][s+1];var u=this.vertices[i].clone().normalize(),p=this.vertices[n].clone().normalize(),f=this.vertices[o].clone().normalize(),E=this.vertices[a].clone().normalize(),d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),T=c[h+1][s+1].clone();Math.abs(this.vertices[i].y)===e?(d.x=(d.x+m.x)/2,this.faces.push(new THREE.Face3(i,o,a,[u,f,E])),this.faceVertexUvs[0].push([d,g,T])):Math.abs(this.vertices[o].y)===e?(g.x=(g.x+T.x)/2,this.faces.push(new THREE.Face3(i,n,o,[u,p,f])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face3(i,n,a,[u,p,E])),this.faceVertexUvs[0].push([d,m,T]),this.faces.push(new THREE.Face3(n,o,a,[p.clone(),f,E.clone()])),this.faceVertexUvs[0].push([m.clone(),g,T.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,arc:n},e=e||100,t=t||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;r>=h;h++)for(var l=0;i>=l;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=e*Math.cos(c),o.y=e*Math.sin(c);var p=new THREE.Vector3;p.x=(e+t*Math.cos(u))*Math.cos(c),p.y=(e+t*Math.cos(u))*Math.sin(c),p.z=t*Math.sin(u),this.vertices.push(p),a.push(new THREE.Vector2(l/i,h/r)),s.push(p.clone().sub(o).normalize())}for(h=1;r>=h;h++)for(l=1;i>=l;l++)e=(i+1)*h+l-1,t=(i+1)*(h-1)+l-1,n=(i+1)*(h-1)+l,o=(i+1)*h+l,c=new THREE.Face3(e,t,o,[s[e].clone(),s[t].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[e].clone(),a[t].clone(),a[o].clone()]),c=new THREE.Face3(t,n,o,[s[t].clone(),s[n].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[t].clone(),a[n].clone(),a[o].clone()]);this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,n,o,a){function s(e,t,r,i,n){var o=Math.cos(e),a=Math.sin(e);return e*=t/r,t=Math.cos(e),o*=i*(2+t)*.5,a=i*(2+t)*a*.5,i=n*i*Math.sin(e)*.5,new THREE.Vector3(o,a,i)}THREE.Geometry.call(this),this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},e=e||100,t=t||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var h=Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,p=0;r>p;++p){h[p]=Array(i);var f=p/r*2*n*Math.PI,E=s(f,o,n,e,a),f=s(f+.01,o,n,e,a);for(l.subVectors(f,E),c.addVectors(f,E),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize(),f=0;i>f;++f){var d=f/i*2*Math.PI,m=-t*Math.cos(d),d=t*Math.sin(d),g=new THREE.Vector3;g.x=E.x+m*c.x+d*u.x,g.y=E.y+m*c.y+d*u.y,g.z=E.z+m*c.z+d*u.z,h[p][f]=this.vertices.push(g)-1}}for(p=0;r>p;++p)for(f=0;i>f;++f)n=(p+1)%r,o=(f+1)%i,e=h[p][f],t=h[n][f],n=h[n][o],o=h[p][o],a=new THREE.Vector2(p/r,f/i),l=new THREE.Vector2((p+1)/r,f/i),c=new THREE.Vector2((p+1)/r,(f+1)/i),u=new THREE.Vector2(p/r,(f+1)/i),this.faces.push(new THREE.Face3(e,t,o)),this.faceVertexUvs[0].push([a,l,u]),this.faces.push(new THREE.Face3(t,n,o)),this.faceVertexUvs[0].push([l.clone(),c,u.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.parameters={path:e,segments:t,radius:r,radialSegments:i,closed:n},t=t||64,r=r||1,i=i||8,n=n||!1;var o,a,s,h,l,c,u,p,f,E=[],d=t+1,m=new THREE.Vector3;for(u=new THREE.TubeGeometry.FrenetFrames(e,t,n),p=u.normals,f=u.binormals,this.tangents=u.tangents,this.normals=p,this.binormals=f,u=0;d>u;u++)for(E[u]=[],s=u/(d-1),c=e.getPointAt(s),o=p[u],a=f[u],s=0;i>s;s++)h=s/i*2*Math.PI,l=-r*Math.cos(h),h=r*Math.sin(h),m.copy(c),m.x+=l*o.x+h*a.x,m.y+=l*o.y+h*a.y,m.z+=l*o.z+h*a.z,E[u][s]=this.vertices.push(new THREE.Vector3(m.x,m.y,m.z))-1;for(u=0;t>u;u++)for(s=0;i>s;s++)d=n?(u+1)%t:u+1,m=(s+1)%i,e=E[u][s],r=E[d][s],d=E[d][m],m=E[u][m],p=new THREE.Vector2(u/t,s/i),f=new THREE.Vector2((u+1)/t,s/i),o=new THREE.Vector2((u+1)/t,(s+1)/i),a=new THREE.Vector2(u/t,(s+1)/i),this.faces.push(new THREE.Face3(e,r,m)),this.faceVertexUvs[0].push([p,f,a]),this.faces.push(new THREE.Face3(r,d,m)),this.faceVertexUvs[0].push([f.clone(),o,a.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){new THREE.Vector3;var i=new THREE.Vector3;new THREE.Vector3;var n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;t+=1;var l,c,u;for(this.tangents=n,this.normals=o,this.binormals=a,l=0;t>l;l++)c=l/(t-1),n[l]=e.getTangentAt(c),n[l].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,e=Number.MAX_VALUE,l=Math.abs(n[0].x),c=Math.abs(n[0].y),u=Math.abs(n[0].z),e>=l&&(e=l,i.set(1,0,0)),e>=c&&(e=c,i.set(0,1,0)),e>=u&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),l=1;t>l;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),i=Math.acos(THREE.Math.clamp(n[l-1].dot(n[l]),-1,1)),o[l].applyMatrix4(h.makeRotationAxis(s,i))),a[l].crossVectors(n[l],o[l]);if(r)for(i=Math.acos(THREE.Math.clamp(o[0].dot(o[t-1]),-1,1)),i/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(i=-i),l=1;t>l;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],i*l)),a[l].crossVectors(n[l],o[l])},THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var r=Math.atan2(e.z,-e.x)/2/Math.PI+.5;return e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5,t.uv=new THREE.Vector2(r,1-e),t}function o(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);h.faces.push(i),m.copy(e).add(t).add(r).divideScalar(3),i=Math.atan2(m.z,-m.x),h.faceVertexUvs[0].push([s(e.uv,e,i),s(t.uv,t,i),s(r.uv,r,i)])}function a(e,t){var r=Math.pow(2,t);Math.pow(4,t);for(var i=n(h.vertices[e.a]),a=n(h.vertices[e.b]),s=n(h.vertices[e.c]),l=[],c=0;r>=c;c++){l[c]=[];for(var u=n(i.clone().lerp(s,c/r)),p=n(a.clone().lerp(s,c/r)),f=r-c,E=0;f>=E;E++)l[c][E]=0==E&&c==r?u:n(u.clone().lerp(p,E/f))}for(c=0;r>c;c++)for(E=0;2*(r-c)-1>E;E++)i=Math.floor(E/2),0==E%2?o(l[c][i+1],l[c+1][i],l[c][i]):o(l[c][i+1],l[c+1][i+1],l[c+1][i])}function s(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var h=this,l=0,c=e.length;c>l;l+=3)n(new THREE.Vector3(e[l],e[l+1],e[l+2]));e=this.vertices;for(var u=[],p=l=0,c=t.length;c>l;l+=3,p++){var f=e[t[l]],E=e[t[l+1]],d=e[t[l+2]];u[p]=new THREE.Face3(f.index,E.index,d.index,[f.clone(),E.clone(),d.clone()])}for(var m=new THREE.Vector3,l=0,c=u.length;c>l;l++)a(u[l],i);for(l=0,c=this.faceVertexUvs[0].length;c>l;l++)t=this.faceVertexUvs[0][l],i=t[0].x,e=t[1].x,u=t[2].x,p=Math.max(i,Math.max(e,u)),f=Math.min(i,Math.min(e,u)),p>.9&&.1>f&&(.2>i&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>u&&(t[2].x+=1));for(l=0,c=this.vertices.length;c>l;l++)this.vertices[l].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t},THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i,n,o,a,s=this.vertices,h=this.faces,l=this.faceVertexUvs[0],c=t+1;for(i=0;r>=i;i++)for(a=i/r,n=0;t>=n;n++)o=n/t,o=e(o,a),s.push(o);var u,p,f,E;for(i=0;r>i;i++)for(n=0;t>n;n++)e=i*c+n,s=i*c+n+1,a=(i+1)*c+n+1,o=(i+1)*c+n,u=new THREE.Vector2(n/t,i/r),
p=new THREE.Vector2((n+1)/t,i/r),f=new THREE.Vector2((n+1)/t,(i+1)/r),E=new THREE.Vector2(n/t,(i+1)/r),h.push(new THREE.Face3(e,s,o)),l.push([u,p,E]),h.push(new THREE.Face3(s,a,o)),l.push([p.clone(),f,E.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i,n,o){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),void 0===n&&(n=.2*r),void 0===o&&(o=.2*n),this.position=t,t=new THREE.Geometry,t.vertices.push(new THREE.Vector3(0,0,0)),t.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),t=new THREE.CylinderGeometry(0,.5,1,5,1),t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,n,o)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(r){.99999<r.y?this.quaternion.set(0,0,0,1):-.99999>r.y?this.quaternion.set(1,0,0,0):(t.set(r.z,0,-r.x).normalize(),e=Math.acos(r.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,e,1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var r=new THREE.Geometry;r.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,t=t.boundingBox.max,i=this.vertices;i[0].set(t.x,t.y,t.z),i[1].set(r.x,t.y,t.z),i[2].set(r.x,r.y,t.z),i[3].set(t.x,r.y,t.z),i[4].set(t.x,t.y,r.z),i[5].set(r.x,t.y,r.z),i[6].set(r.x,r.y,r.z),i[7].set(t.x,r.y,r.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,o,a,s){if(e.set(o,a,s),r.unprojectVector(e,t),i=n.pointMap[i],void 0!==i)for(o=0,a=i.length;a>o;o++)n.geometry.vertices[i[o]].copy(e)}var n=this;t.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-1,-1,-1),i("n2",1,-1,-1),i("n3",-1,1,-1),i("n4",1,1,-1),i("f1",-1,-1,1),i("f2",1,-1,1),i("f3",-1,1,1),i("f4",1,1,1),i("u1",.7,1.1,-1),i("u2",-.7,1.1,-1),i("u3",0,2,-1),i("cf1",-1,0,1),i("cf2",1,0,1),i("cf3",0,-1,1),i("cf4",0,1,1),i("cn1",-1,0,-1),i("cn2",1,0,-1),i("cn3",0,-1,-1),i("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry,h=e.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,h=h.faces,c=0,u=0,p=h.length;p>u;u++)for(var f=h[u],E=0;3>E;E++){i[0]=f[a[E]],i[1]=f[a[(E+1)%3]],i.sort(o);var d=i.toString();void 0===n[d]?(n[d]={vert1:i[0],vert2:i[1],face1:u,face2:void 0},c++):n[d].face2=u}s.addAttribute("position",new THREE.Float32Attribute(2*c,3)),i=s.attributes.position.array,o=0;for(d in n)a=n[d],(void 0===a.face2||.9999>h[a.face1].normal.dot(h[a.face2].normal))&&(c=l[a.vert1],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z,c=l[a.vert2],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z);THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,e=void 0!==r?r:16776960,i=void 0!==i?i:1,t=new THREE.Geometry,r=0;for(var n=this.object.geometry.faces.length;n>r;r++)t.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,r=t.geometry.vertices,i=t.geometry.faces,n=t.matrixWorld;t.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=t=0,a=i.length;a>t;t++,o+=2){var s=i[t];e[o].copy(r[s.a]).add(r[s.b]).add(r[s.c]).divideScalar(3).applyMatrix4(n),e[o+1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){r.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){for(THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],e=new THREE.SphereGeometry(t,4,2),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),t=0;8>t;t++)e.faces[t].color=this.colors[4>t?0:1];t=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(e,t),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){for(var t=e.skeleton,r=new THREE.Geometry,i=0;i<t.bones.length;i++)t.bones[i].parent instanceof THREE.Bone&&(r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(0,0,1)),r.colors.push(new THREE.Color(0,1,0)));i=new THREE.LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.Line.call(this,r,i,THREE.LinePieces),this.skeleton=t,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=0,r=0;r<this.skeleton.bones.length;r++){var i=this.skeleton.bones[r];i.parent instanceof THREE.Bone&&(e.vertices[t].setFromMatrixPosition(i.skinMatrix),e.vertices[t+1].setFromMatrixPosition(i.parent.skinMatrix),t+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,t=void 0!==r?r:16711680,i=void 0!==i?i:1,r=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexNormals.length;s>a;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;u>c;c++){var p=l.vertexNormals[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o),t.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(r[a]),a+=1,r[a].copy(t),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,t=void 0!==r?r:255,i=void 0!==i?i:1,r=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexTangents.length;s>a;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;u>c;c++){var p=l.vertexTangents[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o),t.copy(p).transformDirection(o).multiplyScalar(this.size),t.add(r[a]),a+=1,r[a].copy(t),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),p=0,f=l.length;f>p;p++)for(var E=l[p],d=0;3>d;d++){i[0]=E[a[d]],i[1]=E[a[(d+1)%3]],i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(s.addAttribute("position",new THREE.Float32Attribute(2*c,3)),i=s.attributes.position.array,p=0,f=c;f>p;p++)for(d=0;2>d;d++)c=h[u[2*p+d]],a=6*p+3*d,i[a+0]=c.x,i[a+1]=c.y,i[a+2]=c.z}else if(e.geometry instanceof THREE.BufferGeometry&&void 0!==e.geometry.attributes.index){for(var h=e.geometry.attributes.position.array,f=e.geometry.attributes.index.array,l=e.geometry.offsets,c=0,u=new Uint32Array(2*f.length),E=0,g=l.length;g>E;++E)for(var d=l[E].start,m=l[E].count,a=l[E].index,p=d,T=d+m;T>p;p+=3)for(d=0;3>d;d++)i[0]=a+f[p+d],i[1]=a+f[p+(d+1)%3],i.sort(o),m=i.toString(),void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++);for(s.addAttribute("position",new THREE.Float32Attribute(2*c,3)),i=s.attributes.position.array,p=0,f=c;f>p;p++)for(d=0;2>d;d++)a=6*p+3*d,c=3*u[2*p+d],i[a+0]=h[c],i[a+1]=h[c+1],i[a+2]=h[c+2]}else if(e.geometry instanceof THREE.BufferGeometry)for(h=e.geometry.attributes.position.array,c=h.length/3,u=c/3,s.addAttribute("position",new THREE.Float32Attribute(2*c,3)),i=s.attributes.position.array,p=0,f=u;f>p;p++)for(d=0;3>d;d++)a=18*p+6*d,u=9*p+3*d,i[a+0]=h[u],i[a+1]=h[u+1],i[a+2]=h[u+2],c=9*p+(d+1)%3*3,i[a+3]=h[c],i[a+4]=h[c+1],i[a+5]=h[c+2];THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,n,o){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;r>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){t={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(r);if(s&&1<s.length){var h=s[1];i[h]||(i[h]={start:1/0,end:-(1/0)}),s=i[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in i)s=i[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||0>i.time)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)):(i.time%=i.duration,0>i.time&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o),n=i.time%n/n,i.directionBackwards&&(n=1-n),this.morphTargetInfluences[i.currentFrame]=n*a,this.morphTargetInfluences[i.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(e,r){var i=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+r+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(i,n),t.attachShader(i,o),t.linkProgram(i),i}var t,r,i,n,o,a,s,h,l,c,u,p,f;this.init=function(E){t=E.context,r=E,i=E.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),E=0,n[E++]=-1,n[E++]=-1,n[E++]=0,n[E++]=0,n[E++]=1,n[E++]=-1,n[E++]=1,n[E++]=0,n[E++]=1,n[E++]=1,n[E++]=1,n[E++]=1,n[E++]=-1,n[E++]=1,n[E++]=0,n[E++]=1,E=0,o[E++]=0,o[E++]=1,o[E++]=2,o[E++]=0,o[E++]=2,o[E++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),h=t.createTexture(),l=t.createTexture(),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,u=e(THREE.ShaderFlares.lensFlare,i)):(c=!0,u=e(THREE.ShaderFlares.lensFlareVertexTexture,i)),p={},f={},p.vertex=t.getAttribLocation(u,"position"),p.uv=t.getAttribLocation(u,"uv"),f.renderType=t.getUniformLocation(u,"renderType"),f.map=t.getUniformLocation(u,"map"),f.occlusionMap=t.getUniformLocation(u,"occlusionMap"),f.opacity=t.getUniformLocation(u,"opacity"),f.color=t.getUniformLocation(u,"color"),f.scale=t.getUniformLocation(u,"scale"),f.rotation=t.getUniformLocation(u,"rotation"),f.screenPosition=t.getUniformLocation(u,"screenPosition")},this.render=function(e,i,n,o){e=e.__webglFlares;var E=e.length;if(E){var d=new THREE.Vector3,m=o/n,g=.5*n,T=.5*o,v=16/o,y=new THREE.Vector2(v*m,v),R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1),H=f,v=p;t.useProgram(u),t.enableVertexAttribArray(p.vertex),t.enableVertexAttribArray(p.uv),t.uniform1i(H.occlusionMap,0),t.uniform1i(H.map,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.disable(t.CULL_FACE),t.depthMask(!1);var _,b,w,M,S;for(_=0;E>_;_++)if(v=16/o,y.set(v*m,v),M=e[_],d.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.applyMatrix4(i.matrixWorldInverse),d.applyProjection(i.projectionMatrix),R.copy(d),x.x=R.x*g+g,x.y=R.y*T+T,c||0<x.x&&x.x<n&&0<x.y&&x.y<o)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,0),t.uniform2f(H.scale,y.x,y.y),t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,l),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),M.positionScreen.copy(R),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),t.uniform1i(H.renderType,2),t.enable(t.BLEND),b=0,w=M.lensFlares.length;w>b;b++)S=M.lensFlares[b],.001<S.opacity&&.001<S.scale&&(R.x=S.x,R.y=S.y,R.z=S.z,v=S.size*S.scale/o,y.x=v*m,y.y=v,t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.uniform2f(H.scale,y.x,y.y),t.uniform1f(H.rotation,S.rotation),t.uniform1f(H.opacity,S.opacity),t.uniform3f(H.color,S.color.r,S.color.g,S.color.b),r.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),r.setTexture(S.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,r,i,n,o,a=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;this.init=function(a){e=a.context,t=a,a=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(a.uniforms);r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,r){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,r)},this.update=function(u,p){var f,E,d,m,g,T,v,y,R,x=[];for(m=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),f=0,E=u.__lights.length;E>f;f++)if(d=u.__lights[f],d.castShadow)if(d instanceof THREE.DirectionalLight&&d.shadowCascade)for(g=0;g<d.shadowCascadeCount;g++){var H;if(d.shadowCascadeArray[g])H=d.shadowCascadeArray[g];else{R=d,v=g,H=new THREE.DirectionalLight,H.isVirtual=!0,H.onlyShadow=!0,H.castShadow=!0,H.shadowCameraNear=R.shadowCameraNear,H.shadowCameraFar=R.shadowCameraFar,H.shadowCameraLeft=R.shadowCameraLeft,H.shadowCameraRight=R.shadowCameraRight,H.shadowCameraBottom=R.shadowCameraBottom,H.shadowCameraTop=R.shadowCameraTop,H.shadowCameraVisible=R.shadowCameraVisible,H.shadowDarkness=R.shadowDarkness,H.shadowBias=R.shadowCascadeBias[v],H.shadowMapWidth=R.shadowCascadeWidth[v],H.shadowMapHeight=R.shadowCascadeHeight[v],H.pointsWorld=[],H.pointsFrustum=[];var _=H.pointsWorld;for(T=H.pointsFrustum,y=0;8>y;y++)_[y]=new THREE.Vector3,T[y]=new THREE.Vector3;_=R.shadowCascadeNearZ[v],R=R.shadowCascadeFarZ[v],T[0].set(-1,-1,_),T[1].set(1,-1,_),T[2].set(-1,1,_),T[3].set(1,1,_),T[4].set(-1,-1,R),T[5].set(1,-1,R),T[6].set(-1,1,R),T[7].set(1,1,R),H.originalCamera=p,T=new THREE.Gyroscope,T.position.copy(d.shadowCascadeOffset),T.add(H),T.add(H.target),p.add(T),d.shadowCascadeArray[g]=H,console.log("Created virtualLight",H)}v=d,_=g,R=v.shadowCascadeArray[_],R.position.copy(v.position),R.target.position.copy(v.target.position),R.lookAt(R.target),R.shadowCameraVisible=v.shadowCameraVisible,R.shadowDarkness=v.shadowDarkness,R.shadowBias=v.shadowCascadeBias[_],T=v.shadowCascadeNearZ[_],v=v.shadowCascadeFarZ[_],R=R.pointsFrustum,R[0].z=T,R[1].z=T,R[2].z=T,R[3].z=T,R[4].z=v,R[5].z=v,R[6].z=v,R[7].z=v,x[m]=H,m++}else x[m]=d,m++;for(f=0,E=x.length;E>f;f++){if(d=x[f],d.shadowMap||(g=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(g=THREE.NearestFilter),d.shadowMap=new THREE.WebGLRenderTarget(d.shadowMapWidth,d.shadowMapHeight,{minFilter:g,magFilter:g,format:THREE.RGBAFormat}),d.shadowMapSize=new THREE.Vector2(d.shadowMapWidth,d.shadowMapHeight),d.shadowMatrix=new THREE.Matrix4),!d.shadowCamera){if(d instanceof THREE.SpotLight)d.shadowCamera=new THREE.PerspectiveCamera(d.shadowCameraFov,d.shadowMapWidth/d.shadowMapHeight,d.shadowCameraNear,d.shadowCameraFar);else{if(!(d instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}d.shadowCamera=new THREE.OrthographicCamera(d.shadowCameraLeft,d.shadowCameraRight,d.shadowCameraTop,d.shadowCameraBottom,d.shadowCameraNear,d.shadowCameraFar)}u.add(d.shadowCamera),!0===u.autoUpdate&&u.updateMatrixWorld()}if(d.shadowCameraVisible&&!d.cameraHelper&&(d.cameraHelper=new THREE.CameraHelper(d.shadowCamera),d.shadowCamera.add(d.cameraHelper)),d.isVirtual&&H.originalCamera==p){for(g=p,m=d.shadowCamera,T=d.pointsFrustum,R=d.pointsWorld,h.set(1/0,1/0,1/0),l.set(-(1/0),-(1/0),-(1/0)),v=0;8>v;v++)_=R[v],_.copy(T[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(_,g),_.applyMatrix4(m.matrixWorldInverse),_.x<h.x&&(h.x=_.x),_.x>l.x&&(l.x=_.x),_.y<h.y&&(h.y=_.y),_.y>l.y&&(l.y=_.y),_.z<h.z&&(h.z=_.z),_.z>l.z&&(l.z=_.z);m.left=h.x,m.right=l.x,m.top=l.y,m.bottom=h.y,m.updateProjectionMatrix()}for(m=d.shadowMap,T=d.shadowMatrix,g=d.shadowCamera,g.position.setFromMatrixPosition(d.matrixWorld),c.setFromMatrixPosition(d.target.matrixWorld),g.lookAt(c),g.updateMatrixWorld(),g.matrixWorldInverse.getInverse(g.matrixWorld),d.cameraHelper&&(d.cameraHelper.visible=d.shadowCameraVisible),d.shadowCameraVisible&&d.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(g.projectionMatrix),T.multiply(g.matrixWorldInverse),s.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(m),t.clear(),R=u.__webglObjects,d=0,m=R.length;m>d;d++)v=R[d],T=v.object,v.render=!1,!T.visible||!T.castShadow||(T instanceof THREE.Mesh||T instanceof THREE.ParticleSystem)&&T.frustumCulled&&!a.intersectsObject(T)||(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),v.render=!0);var b;for(d=0,m=R.length;m>d;d++)v=R[d],v.render&&(T=v.object,v=v.buffer,_=T.material instanceof THREE.MeshFaceMaterial?T.material.materials[0]:T.material,y=void 0!==T.geometry.morphTargets&&0<T.geometry.morphTargets.length&&_.morphTargets,b=T instanceof THREE.SkinnedMesh&&_.skinning,y=T.customDepthMaterial?T.customDepthMaterial:b?y?o:n:y?i:r,t.setMaterialFaces(_),v instanceof THREE.BufferGeometry?t.renderBufferDirect(g,u.__lights,null,y,v,T):t.renderBuffer(g,u.__lights,null,y,v,T));for(R=u.__webglObjectsImmediate,d=0,m=R.length;m>d;d++)v=R[d],T=v.object,T.visible&&T.castShadow&&(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),t.renderImmediateObject(g,u.__lights,null,r,T))}f=t.getClearColor(),E=t.getClearAlpha(),e.clearColor(f.r,f.g,f.b,E),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,r,i,n,o,a,s,h,l,c,u,p,f,E,d,m,g,T,v,y,R,x,H,_,b;
this.init=function(e){T=e.context,v=e,R=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),x=new Uint16Array([0,1,2,0,2,3]),H=T.createBuffer(),_=T.createBuffer(),T.bindBuffer(T.ARRAY_BUFFER,H),T.bufferData(T.ARRAY_BUFFER,R,T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.bufferData(T.ELEMENT_ARRAY_BUFFER,x,T.STATIC_DRAW),e=T.createProgram();var w=T.createShader(T.VERTEX_SHADER),M=T.createShader(T.FRAGMENT_SHADER);T.shaderSource(w,["precision "+v.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),T.shaderSource(M,["precision "+v.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),T.compileShader(w),T.compileShader(M),T.attachShader(e,w),T.attachShader(e,M),T.linkProgram(e),b=e,m=T.getAttribLocation(b,"position"),g=T.getAttribLocation(b,"uv"),t=T.getUniformLocation(b,"uvOffset"),r=T.getUniformLocation(b,"uvScale"),i=T.getUniformLocation(b,"rotation"),n=T.getUniformLocation(b,"scale"),o=T.getUniformLocation(b,"color"),a=T.getUniformLocation(b,"map"),s=T.getUniformLocation(b,"opacity"),h=T.getUniformLocation(b,"modelViewMatrix"),l=T.getUniformLocation(b,"projectionMatrix"),c=T.getUniformLocation(b,"fogType"),u=T.getUniformLocation(b,"fogDensity"),p=T.getUniformLocation(b,"fogNear"),f=T.getUniformLocation(b,"fogFar"),E=T.getUniformLocation(b,"fogColor"),d=T.getUniformLocation(b,"alphaTest"),e=document.createElement("canvas"),e.width=8,e.height=8,w=e.getContext("2d"),w.fillStyle="#ffffff",w.fillRect(0,0,e.width,e.height),y=new THREE.Texture(e),y.needsUpdate=!0},this.render=function(R,x,w,M){if(w=R.__webglSprites,M=w.length){T.useProgram(b),T.enableVertexAttribArray(m),T.enableVertexAttribArray(g),T.disable(T.CULL_FACE),T.enable(T.BLEND),T.bindBuffer(T.ARRAY_BUFFER,H),T.vertexAttribPointer(m,2,T.FLOAT,!1,16,0),T.vertexAttribPointer(g,2,T.FLOAT,!1,16,8),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.uniformMatrix4fv(l,!1,x.projectionMatrix.elements),T.activeTexture(T.TEXTURE0),T.uniform1i(a,0);var S=0,C=0,A=R.fog;A?(T.uniform3f(E,A.color.r,A.color.g,A.color.b),A instanceof THREE.Fog?(T.uniform1f(p,A.near),T.uniform1f(f,A.far),T.uniform1i(c,1),C=S=1):A instanceof THREE.FogExp2&&(T.uniform1f(u,A.density),T.uniform1i(c,2),C=S=2)):(T.uniform1i(c,0),C=S=0);for(var L,P=[],A=0;M>A;A++)L=w[A],!1!==L.visible&&(L._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,L.matrixWorld),L.z=-L._modelViewMatrix.elements[14]);for(w.sort(e),A=0;M>A;A++)L=w[A],!1!==L.visible&&(x=L.material,T.uniform1f(d,x.alphaTest),T.uniformMatrix4fv(h,!1,L._modelViewMatrix.elements),P[0]=L.scale.x,P[1]=L.scale.y,L=R.fog&&x.fog?C:0,S!==L&&(T.uniform1i(c,L),S=L),null!==x.map?(T.uniform2f(t,x.map.offset.x,x.map.offset.y),T.uniform2f(r,x.map.repeat.x,x.map.repeat.y)):(T.uniform2f(t,0,0),T.uniform2f(r,1,1)),T.uniform1f(s,x.opacity),T.uniform3f(o,x.color.r,x.color.g,x.color.b),T.uniform1f(i,x.rotation),T.uniform2fv(n,P),v.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),v.setDepthTest(x.depthTest),v.setDepthWrite(x.depthWrite),x.map&&x.map.image&&x.map.image.width?v.setTexture(x.map,0):v.setTexture(y,0),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0));T.enable(T.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,r,i,n,o,a=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(a){e=a.context,t=a,a=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(a.uniforms);r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,u,p,f,E,d;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),!0===h.autoUpdate&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),d=h.__webglObjects,c=0,u=d.length;u>c;c++)p=d[c],E=p.object,p.render=!1,!E.visible||(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)&&E.frustumCulled&&!a.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,E.matrixWorld),p.render=!0);var m;for(c=0,u=d.length;u>c;c++)p=d[c],p.render&&(E=p.object,p=p.buffer,E instanceof THREE.ParticleSystem&&!E.customDepthMaterial||((m=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material)&&t.setMaterialFaces(E.material),f=void 0!==E.geometry.morphTargets&&0<E.geometry.morphTargets.length&&m.morphTargets,m=E instanceof THREE.SkinnedMesh&&m.skinning,f=E.customDepthMaterial?E.customDepthMaterial:m?f?o:n:f?i:r,p instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,p,E):t.renderBuffer(l,h.__lights,null,f,p,E)));for(d=h.__webglObjectsImmediate,c=0,u=d.length;u>c;c++)p=d[c],E=p.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(l,h.__lights,null,r,E));c=t.getClearColor(),u=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,u),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};